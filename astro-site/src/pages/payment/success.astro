---
// 決済完了ページ（仮表示 - Webhook処理待ち）
---

<html lang="ja">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>決済完了 - NANKANアナリティクス</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 0;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .container {
            background: white;
            border-radius: 16px;
            padding: 48px;
            max-width: 500px;
            margin: 20px;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        
        .icon {
            font-size: 64px;
            margin-bottom: 24px;
            animation: bounce 2s infinite;
        }
        
        @keyframes bounce {
            0%, 20%, 53%, 80%, 100% { transform: translate3d(0,0,0); }
            40%, 43% { transform: translate3d(0, -20px, 0); }
            70% { transform: translate3d(0, -10px, 0); }
            90% { transform: translate3d(0, -4px, 0); }
        }
        
        h1 {
            color: #1a202c;
            margin-bottom: 16px;
            font-size: 28px;
            font-weight: bold;
        }
        
        p {
            color: #4a5568;
            line-height: 1.6;
            margin-bottom: 24px;
        }
        
        .status {
            background: #f7fafc;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 20px;
            margin: 24px 0;
        }
        
        .processing {
            color: #3182ce;
            font-weight: 500;
        }
        
        .btn {
            display: inline-block;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 500;
            margin: 8px;
            transition: transform 0.2s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
        }
        
        .secondary {
            background: #e2e8f0;
            color: #4a5568;
        }
        
        .loading-dots {
            display: inline-block;
        }
        
        .loading-dots span {
            animation: loading 1.4s infinite;
            animation-delay: var(--delay);
        }
        
        @keyframes loading {
            0%, 80%, 100% { opacity: 0; }
            40% { opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="icon">🎉</div>
        <h1>決済が完了しました！</h1>
        <p>
            ご購入ありがとうございます。<br>
            現在、アカウントの有効化処理を行っています。
        </p>
        
        <div class="status">
            <div class="processing">
                <strong>処理中</strong>
                <span class="loading-dots">
                    <span style="--delay: 0s">.</span>
                    <span style="--delay: 0.2s">.</span>
                    <span style="--delay: 0.4s">.</span>
                </span>
            </div>
            <p>通常1-3分で完了します。このページは自動的に更新されます。</p>
        </div>
        
        <div style="margin-top: 32px;">
            <a href="/dashboard" class="btn">ダッシュボードへ</a>
            <a href="/pricing" class="btn secondary">料金プランに戻る</a>
        </div>
        
        <p style="margin-top: 32px; font-size: 14px; color: #718096;">
            処理が完了しない場合は、ページを再読み込みするか、<br>
            <a href="mailto:support@nankan-analytics.keiba.link" style="color: #3182ce;">サポート</a>までお問い合わせください。
        </p>
    </div>

    <script>
        // URLからsession_idを取得
        const urlParams = new URLSearchParams(window.location.search);
        const sessionId = urlParams.get('session_id');
        
        if (sessionId) {
            console.log('Checkout Session ID:', sessionId);
            
            // 【重要】フォールバックAPI実行でメンバーシップ確実保存
            (async () => {
                try {
                    console.log('[success] Calling ensure API...');
                    const response = await fetch(`/api/membership/ensure?session_id=${encodeURIComponent(sessionId)}`, { method: 'GET' });
                    console.log('[success] Ensure API response:', response.status);
                    if (response.status === 204) {
                        console.log('[success] ✅ Membership saved successfully');
                    }
                } catch (e) {
                    console.error('[success] ❌ Ensure failed:', e);
                }
            })();
            
            // 10秒後にダッシュボードにリダイレクト（短縮）
            setTimeout(() => {
                window.location.href = '/dashboard';
            }, 10000);
            
            // 5秒ごとにページを更新して状態確認（簡易実装）
            let checkCount = 0;
            const checkInterval = setInterval(() => {
                checkCount++;
                
                // 最大2回（10秒）チェック
                if (checkCount >= 2) {
                    clearInterval(checkInterval);
                    window.location.href = '/dashboard';
                }
                
                console.log(`状態確認 ${checkCount}/2`);
                
            }, 5000);
        } else {
            // session_idがない場合はリダイレクト
            window.location.href = '/pricing';
        }
    </script>
</body>
</html>