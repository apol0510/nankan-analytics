---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="マイページ - NANKANアナリティクス">
    <div class="dashboard-container">
        <!-- ヘッダー -->
        <div class="dashboard-header">
            <h1>✨ マイページ</h1>
            <p class="subtitle">NANKANアナリティクス - AI競馬予想システム</p>
        </div>

        <!-- ログインフォーム（初期表示） -->
        <div id="login-section" class="login-section">
            <div class="login-card">
                <h2>📧 メールアドレスで確認</h2>
                <p>ご登録のメールアドレスを入力してください</p>
                <form id="login-form">
                    <input 
                        type="email" 
                        id="email-input" 
                        placeholder="example@email.com"
                        required
                        class="email-input"
                    />
                    <button type="submit" class="submit-btn">
                        情報を確認する
                    </button>
                </form>
                <div id="error-message" class="error-message" style="display: none;"></div>
            </div>
        </div>

        <!-- ダッシュボード（ログイン後表示） -->
        <div id="dashboard-section" style="display: none;">
            <!-- 会員ステータス -->
            <div class="status-section">
                <div class="status-card">
                    <div class="status-icon">👤</div>
                    <div class="status-info">
                        <h3>会員ステータス</h3>
                        <div id="membership-status" class="status-value">読み込み中...</div>
                        <div id="membership-details" class="status-details"></div>
                    </div>
                </div>
            </div>

            <!-- ポイントカード -->
            <div class="points-section">
                <div class="points-card">
                    <div class="points-header">
                        <h2>🌟 累計ポイント</h2>
                        <div class="points-value">
                            <span id="current-points">0</span>
                            <span class="points-unit">pt</span>
                        </div>
                    </div>
                    <div class="points-progress">
                        <div class="progress-bar">
                            <div id="progress-fill" class="progress-fill"></div>
                        </div>
                        <div class="progress-info">
                            <span id="current-rank">🥉 ブロンズ</span>
                            <span id="next-rank-info">次のランクまで: 500pt</span>
                        </div>
                    </div>
                    <div class="rank-benefits">
                        <h3>ランク特典</h3>
                        <div id="rank-benefits-list" class="benefits-list"></div>
                    </div>
                    <button id="claim-reward-btn" class="claim-btn" style="display: none;">
                        🎁 特典を申請する
                    </button>
                </div>
            </div>

            <!-- 今日の予想 -->
            <div class="predictions-section">
                <h2>🏇 今日の予想</h2>
                <div class="predictions-grid">
                    
                    <!-- 無料予想 -->
                    <div class="prediction-card free">
                        <div class="card-header">
                            <h3>🎁 無料予想</h3>
                            <span class="plan-badge free">FREE</span>
                        </div>
                        <div class="race-info">
                            <div class="race-title">メインレース（11R）</div>
                            <div class="confidence">予想精度: 87.3%</div>
                        </div>
                        <a href="/free-prediction/" class="view-btn">予想を見る</a>
                    </div>

                    <!-- Standard予想 -->
                    <div id="standard-predictions" class="prediction-card standard" style="display: none;">
                        <div class="card-header">
                            <h3>⚡ Standard予想</h3>
                            <span class="plan-badge standard">STANDARD</span>
                        </div>
                        <div class="race-info">
                            <div class="race-title">後半3レース（10R-12R）</div>
                            <div class="confidence">予想精度: 89.1%</div>
                        </div>
                        <a href="/standard-predictions/" class="view-btn">予想を見る</a>
                    </div>

                    <!-- Premium予想 -->
                    <div id="premium-predictions" class="prediction-card premium" style="display: none;">
                        <div class="card-header">
                            <h3>💎 Premium予想</h3>
                            <span class="plan-badge premium">PREMIUM</span>
                        </div>
                        <div class="race-info">
                            <div class="race-title">全レース（1R-12R）</div>
                            <div class="confidence">予想精度: 91.8%</div>
                        </div>
                        <a href="/premium-predictions/" class="view-btn">予想を見る</a>
                    </div>
                </div>
            </div>

            <!-- プラン管理 -->
            <div class="plan-section">
                <h2>📋 プラン管理</h2>
                <div class="plan-actions">
                    <a href="/pricing/" class="action-btn upgrade">プランをアップグレード</a>
                    <button onclick="logout()" class="action-btn logout">ログアウト</button>
                </div>
            </div>

            <!-- アップグレード促進（無料・Standard会員のみ表示） -->
            <div id="upgrade-promotion" class="upgrade-section" style="display: none;">
                <div class="upgrade-card">
                    <h3>🚀 さらなる投資効率を目指しませんか？</h3>
                    <p>上位プランで全レースの詳細予想と高精度分析データにアクセスできます</p>
                    <a href="/pricing/" class="upgrade-btn">今すぐアップグレード</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Airtable連携スクリプト -->
    <script type="module">
        // Airtable設定
        const AIRTABLE_API_KEY = 'YOUR_AIRTABLE_API_KEY'; // 環境変数から取得推奨
        const AIRTABLE_BASE_ID = 'YOUR_BASE_ID';
        const AIRTABLE_TABLE_NAME = 'Customers';

        // ランク定義
        const RANK_THRESHOLDS = {
            bronze: { min: 0, max: 499, name: '🥉 ブロンズ', next: 500 },
            silver: { min: 500, max: 999, name: '🥈 シルバー', next: 1000 },
            gold: { min: 1000, max: 1999, name: '🥇 ゴールド', next: 2000 },
            diamond: { min: 2000, max: Infinity, name: '💎 ダイヤモンド', next: null }
        };

        // ランク特典
        const RANK_BENEFITS = {
            bronze: ['毎月の予想レポート'],
            silver: ['限定予想1つ解放', '毎月の予想レポート'],
            gold: ['限定予想2つ解放', '優先サポート', '毎月の予想レポート'],
            diamond: ['全限定予想解放', '個別AI分析レポート', '優先サポート']
        };

        // ログインフォーム処理
        document.getElementById('login-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('email-input').value;
            
            try {
                // Airtableから顧客情報取得
                const customerData = await fetchCustomerData(email);
                
                if (customerData) {
                    // セッション保存
                    sessionStorage.setItem('customerEmail', email);
                    sessionStorage.setItem('customerData', JSON.stringify(customerData));
                    
                    // ダッシュボード表示
                    showDashboard(customerData);
                } else {
                    showError('登録情報が見つかりません');
                }
            } catch (error) {
                console.error('エラー:', error);
                showError('一時的にアクセスできません。後ほどお試しください。');
            }
        });

        // Airtableから顧客データ取得
        async function fetchCustomerData(email) {
            try {
                // 実際のAirtableAPIで顧客データ取得
                const response = await fetch('/.netlify/functions/test-read-only');
                const data = await response.json();
                
                if (data.success && data.data) {
                    // 該当するメールアドレスを探す
                    const customer = data.data.find(c => c.email === email);
                    if (customer) {
                        return {
                            email: customer.email,
                            plan: customer.plan.toLowerCase(),
                            points: customer.points || 0,
                            rank: customer.rank,
                            name: customer.name,
                            expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
                            registeredAt: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString()
                        };
                    }
                }
            } catch (error) {
                console.error('Airtable取得エラー:', error);
            }
            
            // フォールバック：デモデータ
            return {
                email: email,
                plan: 'standard',
                points: 1250, // テスト用に1000pt以上に変更
                expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
                registeredAt: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString()
            };
        }

        // ダッシュボード表示
        function showDashboard(customerData) {
            // セクション切り替え
            document.getElementById('login-section').style.display = 'none';
            document.getElementById('dashboard-section').style.display = 'block';
            
            // 会員情報表示
            updateMembershipInfo(customerData);
            
            // ポイント表示
            updatePointsDisplay(customerData.points);
            
            // プラン別コンテンツ表示
            showPlanContent(customerData.plan);
        }

        // 会員情報更新
        function updateMembershipInfo(data) {
            const planNames = {
                'free': '🎁 無料会員',
                'standard': '⚡ Standard会員',
                'premium': '💎 Premium会員'
            };
            
            document.getElementById('membership-status').textContent = planNames[data.plan] || '無料会員';
            
            let detailsHtml = `<div class="email">${data.email}</div>`;
            if (data.expiresAt) {
                const expiryDate = new Date(data.expiresAt);
                detailsHtml += `<div class="expires">有効期限: ${expiryDate.toLocaleDateString('ja-JP')}</div>`;
            }
            
            document.getElementById('membership-details').innerHTML = detailsHtml;
        }

        // ポイント表示更新
        function updatePointsDisplay(points) {
            document.getElementById('current-points').textContent = points;
            
            // ランク判定
            let currentRank = 'bronze';
            for (const [key, threshold] of Object.entries(RANK_THRESHOLDS)) {
                if (points >= threshold.min && points <= threshold.max) {
                    currentRank = key;
                    break;
                }
            }
            
            const rankData = RANK_THRESHOLDS[currentRank];
            document.getElementById('current-rank').textContent = rankData.name;
            
            // 次のランクまでの情報
            if (rankData.next) {
                document.getElementById('next-rank-info').textContent = `次のランクまで: ${rankData.next - points}pt`;
                const progress = ((points - rankData.min) / (rankData.next - rankData.min)) * 100;
                document.getElementById('progress-fill').style.width = `${progress}%`;
            } else {
                document.getElementById('next-rank-info').textContent = '最高ランク達成！';
                document.getElementById('progress-fill').style.width = '100%';
            }
            
            // ランク特典表示
            const benefits = RANK_BENEFITS[currentRank];
            document.getElementById('rank-benefits-list').innerHTML = benefits
                .map(b => `<div class="benefit-item">✓ ${b}</div>`)
                .join('');
            
            // 特典申請ボタン表示判定
            console.log(`ポイント判定: ${points}pt >= 1000?`, points >= 1000);
            if (points >= 1000) {
                console.log('特典申請ボタンを表示');
                const button = document.getElementById('claim-reward-btn');
                if (button) {
                    button.style.display = 'block';
                    console.log('ボタン表示設定完了');
                } else {
                    console.error('claim-reward-btnが見つかりません');
                }
            } else {
                console.log(`ポイント不足のため非表示: ${points}pt < 1000pt`);
            }
        }

        // プラン別コンテンツ表示
        function showPlanContent(plan) {
            if (plan === 'standard' || plan === 'premium') {
                document.getElementById('standard-predictions').style.display = 'block';
            }
            
            if (plan === 'premium') {
                document.getElementById('premium-predictions').style.display = 'block';
            } else {
                document.getElementById('upgrade-promotion').style.display = 'block';
            }
        }

        // エラー表示
        function showError(message) {
            const errorEl = document.getElementById('error-message');
            errorEl.textContent = message;
            errorEl.style.display = 'block';
            setTimeout(() => {
                errorEl.style.display = 'none';
            }, 5000);
        }

        // 特典申請
        document.getElementById('claim-reward-btn')?.addEventListener('click', async () => {
            const email = sessionStorage.getItem('customerEmail');
            if (!email) {
                showError('メールアドレスが取得できません');
                return;
            }
            
            if (confirm('特典を申請しますか？\n\n申請後は取り消しできません。')) {
                const button = document.getElementById('claim-reward-btn');
                button.disabled = true;
                button.textContent = '申請中...';
                
                try {
                    const response = await fetch('/.netlify/functions/claim-reward', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        button.textContent = '✅ 申請済み';
                        button.style.background = '#64748b';
                        alert('特典申請を受け付けました！\n3営業日以内にメールでご連絡いたします。');
                    } else {
                        throw new Error(data.error || '申請に失敗しました');
                    }
                    
                } catch (error) {
                    console.error('特典申請エラー:', error);
                    button.disabled = false;
                    button.textContent = '🎁 特典を申請する';
                    alert('申請に失敗しました: ' + error.message);
                }
            }
        });

        // ログアウト
        window.logout = function() {
            sessionStorage.clear();
            location.reload();
        }

        // ページ読み込み時にセッションチェック
        document.addEventListener('DOMContentLoaded', () => {
            const savedEmail = sessionStorage.getItem('customerEmail');
            const savedData = sessionStorage.getItem('customerData');
            
            if (savedEmail && savedData) {
                showDashboard(JSON.parse(savedData));
            }
        });
    </script>

    <style>
        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
            min-height: 100vh;
            color: #e2e8f0;
        }

        /* ヘッダー */
        .dashboard-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .dashboard-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .subtitle {
            font-size: 1.1rem;
            color: #94a3b8;
        }

        /* ログインセクション */
        .login-section {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 400px;
        }

        .login-card {
            background: rgba(30, 41, 59, 0.8);
            border-radius: 1rem;
            padding: 2.5rem;
            border: 1px solid rgba(59, 130, 246, 0.3);
            max-width: 400px;
            width: 100%;
        }

        .login-card h2 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            text-align: center;
        }

        .login-card p {
            color: #94a3b8;
            text-align: center;
            margin-bottom: 2rem;
        }

        .email-input {
            width: 100%;
            padding: 0.75rem;
            background: rgba(15, 23, 42, 0.5);
            border: 1px solid rgba(59, 130, 246, 0.3);
            border-radius: 0.5rem;
            color: #e2e8f0;
            font-size: 1rem;
            margin-bottom: 1rem;
        }

        .email-input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .submit-btn {
            width: 100%;
            padding: 0.875rem;
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.4);
        }

        .error-message {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid rgba(239, 68, 68, 0.3);
            color: #ef4444;
            padding: 0.75rem;
            border-radius: 0.5rem;
            margin-top: 1rem;
            text-align: center;
        }

        /* 会員ステータス */
        .status-section {
            margin-bottom: 2rem;
        }

        .status-card {
            background: rgba(30, 41, 59, 0.8);
            border-radius: 1rem;
            padding: 2rem;
            border: 1px solid rgba(59, 130, 246, 0.3);
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .status-icon {
            font-size: 3rem;
        }

        .status-info h3 {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            color: #3b82f6;
        }

        .status-value {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .status-details {
            font-size: 0.9rem;
            color: #94a3b8;
        }

        .email {
            margin-bottom: 0.25rem;
        }

        .expires {
            font-size: 0.85rem;
            color: #10b981;
        }

        /* ポイントセクション */
        .points-section {
            margin-bottom: 2rem;
        }

        .points-card {
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%);
            border-radius: 1rem;
            padding: 2rem;
            border: 1px solid rgba(59, 130, 246, 0.3);
        }

        .points-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .points-header h2 {
            font-size: 1.5rem;
            margin: 0;
        }

        .points-value {
            display: flex;
            align-items: baseline;
            gap: 0.5rem;
        }

        #current-points {
            font-size: 3rem;
            font-weight: 700;
            background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .points-unit {
            font-size: 1.5rem;
            color: #94a3b8;
        }

        .points-progress {
            margin-bottom: 2rem;
        }

        .progress-bar {
            height: 20px;
            background: rgba(30, 41, 59, 0.5);
            border-radius: 10px;
            overflow: hidden;
            margin-bottom: 1rem;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%);
            transition: width 0.5s ease;
        }

        .progress-info {
            display: flex;
            justify-content: space-between;
            font-size: 0.9rem;
        }

        #current-rank {
            font-weight: 600;
        }

        #next-rank-info {
            color: #94a3b8;
        }

        .rank-benefits {
            margin-bottom: 1.5rem;
        }

        .rank-benefits h3 {
            font-size: 1.1rem;
            margin-bottom: 1rem;
            color: #f1f5f9;
        }

        .benefits-list {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .benefit-item {
            padding: 0.5rem;
            background: rgba(16, 185, 129, 0.1);
            border-left: 3px solid #10b981;
            color: #10b981;
        }

        .claim-btn {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #f59e0b 0%, #dc2626 100%);
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .claim-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(245, 158, 11, 0.4);
        }

        .claim-btn:disabled {
            background: #64748b;
            cursor: not-allowed;
        }

        /* 予想セクション */
        .predictions-section {
            margin-bottom: 2rem;
        }

        .predictions-section h2 {
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            color: #f1f5f9;
        }

        .predictions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .prediction-card {
            background: rgba(30, 41, 59, 0.8);
            border-radius: 1rem;
            padding: 1.5rem;
            border: 1px solid rgba(51, 65, 85, 0.5);
            transition: all 0.3s ease;
        }

        .prediction-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .prediction-card.free {
            border-color: rgba(148, 163, 184, 0.5);
        }

        .prediction-card.standard {
            border-color: rgba(16, 185, 129, 0.5);
        }

        .prediction-card.premium {
            border-color: rgba(139, 92, 246, 0.5);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .card-header h3 {
            font-size: 1.2rem;
            margin: 0;
        }

        .plan-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .plan-badge.free {
            background: rgba(148, 163, 184, 0.2);
            color: #94a3b8;
        }

        .plan-badge.standard {
            background: rgba(16, 185, 129, 0.2);
            color: #10b981;
        }

        .plan-badge.premium {
            background: rgba(139, 92, 246, 0.2);
            color: #8b5cf6;
        }

        .race-info {
            margin-bottom: 1.5rem;
        }

        .race-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .confidence {
            font-size: 0.9rem;
            color: #10b981;
        }

        .view-btn {
            display: block;
            background: #3b82f6;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            text-decoration: none;
            text-align: center;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .view-btn:hover {
            background: #1d4ed8;
            transform: translateY(-2px);
        }

        /* プラン管理 */
        .plan-section {
            margin-bottom: 2rem;
        }

        .plan-section h2 {
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            color: #f1f5f9;
        }

        .plan-actions {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .action-btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .action-btn.upgrade {
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            color: white;
        }

        .action-btn.logout {
            background: rgba(30, 41, 59, 0.8);
            color: #e2e8f0;
            border: 1px solid rgba(59, 130, 246, 0.3);
        }

        .action-btn:hover {
            transform: translateY(-2px);
        }

        /* アップグレード促進 */
        .upgrade-section {
            margin-bottom: 2rem;
        }

        .upgrade-card {
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.2) 0%, rgba(139, 92, 246, 0.2) 100%);
            border-radius: 1rem;
            padding: 2rem;
            text-align: center;
            border: 1px solid rgba(59, 130, 246, 0.3);
        }

        .upgrade-card h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: #f1f5f9;
        }

        .upgrade-card p {
            margin-bottom: 1.5rem;
            color: #94a3b8;
        }

        .upgrade-btn {
            display: inline-block;
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            color: white;
            padding: 0.875rem 2rem;
            border-radius: 0.5rem;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .upgrade-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.4);
        }

        /* レスポンシブ */
        @media (max-width: 768px) {
            .dashboard-container {
                padding: 1rem;
            }

            .dashboard-header h1 {
                font-size: 2rem;
            }

            .status-card {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }

            .points-header {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }

            .predictions-grid {
                grid-template-columns: 1fr;
            }

            .plan-actions {
                flex-direction: column;
            }
        }
    </style>
</BaseLayout>