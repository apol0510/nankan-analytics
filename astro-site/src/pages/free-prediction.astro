---
export const prerender = true; // 静的サイト生成用に戻す
import BaseLayout from '../layouts/BaseLayout.astro';
import allRacesData from '../data/allRacesPrediction.json';
import { processRaceData, processUnifiedRaceData, normalizeHorseData, getRoleDisplayConfig, validateDataIntegrity, getHorseConfidenceFromMark, calculateMarkBasedConfidence, convertToStarRating, getRecommendationStars, generateStandardizedBets, calculateScoreBasedStats, getPredictionDataWithStrategies } from '../lib/shared-prediction-logic.js';

// 共有ロジックを使用してデータを処理
const { mainRace, race12R: originalRace12R, sortedRaces } = processRaceData(allRacesData);

if (!mainRace) {
    throw new Error('メインレースが見つかりません。allRacesPrediction.jsonのデータを確認してください。');
}

// Free会員向け: メインレース（11R）のデータを使用

// メインレースのデータを取得
const { raceInfo, horses, analysis, preview, allHorses, totalHorses } = mainRace;

// 正規化されたホースデータ（メインレース用）
const normalizedHorses = normalizeHorseData(mainRace);

// 統一システムで戦略データを生成
const processedData = getPredictionDataWithStrategies(mainRace.horses);
const strategies = {
    safe: processedData.strategies[0],
    balance: processedData.strategies[1],
    aggressive: processedData.strategies[2]
};

// スコア表示用のスコア変数を定義
const mainHorseScore = getHorseConfidenceFromMark(mainRace.horses.main);
const subHorseScore = getHorseConfidenceFromMark(mainRace.horses.sub);
---

<BaseLayout title={`AI予想分析 | ${raceInfo.title}`} description={`AI技術による${raceInfo.track}競馬${raceInfo.raceName}の詳細分析。機械学習モデルによる高精度予想を無料で提供中。`}>
    <div class="container">
        <!-- ヘッダーセクション -->
        <div class="header-section">
            <div class="ai-badge">
                <span class="pulse"></span>
                <span class="ai-status">AI分析完了</span>
            </div>
            <h1 class="race-title">{raceInfo.title}</h1>
            <!-- 余計な詳細指標を削除し、シンプルに -->
        </div>

        <!-- AI選出馬分析 -->
        <div class="analysis-section">
            <h2 class="section-title">
                <span>🤖</span>
                <span>AIモデル選出馬 - XGBoost×LSTM統合分析</span>
            </h2>

            {/* 20年運営対応: role-based表示（本命）- 最も大きく表示 */}
            {normalizedHorses && normalizedHorses.filter(h => h.role === '本命').map((horse, index) => {
                const roleConfig = getRoleDisplayConfig(horse.role);
                return (
                <div class="horse-card horse-card-main">
                    <div class="horse-header">
                        <div>
                            <span class={roleConfig.markClass}>{horse.displayMark}</span>
                            <span class="horse-number">{horse.number}</span>
                            <span class="horse-name">{horse.name}</span>
                            <span class={roleConfig.typeClass} style={roleConfig.style}>{horse.role}</span>
                        </div>
                    </div>
                    <div class="ai-factors">
                        {/* 累積スコアと星評価のみ表示 */}
                        {horse.factors && horse.factors.filter(factor =>
                            factor.text.includes('累積スコア') ||
                            factor.text.includes('総合評価')
                        ).map(factor => (
                            <div class="factor">
                                <span class="factor-icon">{factor.icon}</span>
                                <span>{factor.text}</span>
                            </div>
                        ))}
                    </div>

                    {/* 本命馬の特徴量重要度を表示 */}
                    {horses.main.importance && (
                        <div class="feature-importance">
                            <h4 style="color: #94a3b8; font-size: 0.9rem; margin-bottom: 10px;">特徴量重要度</h4>
                            {horses.main.importance.map(item => (
                                <div class="importance-bar">
                                    <span class="importance-label">{item.label}</span>
                                    <div class="importance-value">
                                        <div class="importance-fill" style={`width: ${item.value * 100}%;`}>{Math.round(item.value * 100)}%</div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    )}
                </div>
                );
            })}

            {/* 20年運営対応: role-based表示（対抗）- 中サイズで表示 */}
            {normalizedHorses && normalizedHorses.filter(h => h.role === '対抗').map((horse, index) => {
                const roleConfig = getRoleDisplayConfig(horse.role);
                return (
                <div class="horse-card horse-card-sub">
                    <div class="horse-header">
                        <div>
                            <span class={roleConfig.markClass}>{horse.displayMark}</span>
                            <span class="horse-number">{horse.number}</span>
                            <span class="horse-name">{horse.name}</span>
                            <span class={roleConfig.typeClass} style={roleConfig.style}>{horse.role}</span>
                        </div>
                    </div>
                    <div class="ai-factors">
                        {/* 累積スコアと星評価のみ表示 */}
                        {horse.factors && horse.factors.filter(factor =>
                            factor.text.includes('累積スコア') ||
                            factor.text.includes('総合評価')
                        ).map(factor => (
                            <div class="factor">
                                <span class="factor-icon">{factor.icon}</span>
                                <span>{factor.text}</span>
                            </div>
                        ))}
                    </div>
                    {/* 対抗馬の特徴量重要度を表示 */}
                    {horses.sub.importance && (
                        <div class="feature-importance">
                            <h4 style="color: #94a3b8; font-size: 0.9rem; margin-bottom: 10px;">特徴量重要度</h4>
                            {horses.sub.importance.map(item => (
                                <div class="importance-bar">
                                    <span class="importance-label">{item.label}</span>
                                    <div class="importance-value">
                                        <div class="importance-fill" style={`width: ${item.value * 100}%;`}>{Math.round(item.value * 100)}%</div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    )}
                </div>
                );
            })}

            {/* 20年運営対応: role-based表示（単穴）- 中サイズで表示 */}
            {normalizedHorses && normalizedHorses.filter(h => h.role === '単穴').length > 0 && (
                <div class="premium-horses-wrapper free-member-masked">
                    {normalizedHorses.filter(h => h.role === '単穴').map((horse, index) => {
                        const roleConfig = getRoleDisplayConfig(horse.role);
                        return (
                        <div class="horse-card horse-card-sub">
                            <div class="horse-header">
                                <div>
                                    <span class={roleConfig.markClass}>{horse.displayMark}</span>
                                    <span class="horse-number">{horse.number}</span>
                                    <span class="horse-name">{horse.name}</span>
                                    <span class={roleConfig.typeClass} style={roleConfig.style}>{horse.role}</span>
                                </div>
                            </div>
                            <div class="ai-factors">
                                {/* 累積スコアと星評価のみ表示 */}
                                {horse.factors && horse.factors.filter(factor =>
                                    factor.text.includes('累積スコア') ||
                                    factor.text.includes('総合評価')
                                ).map(factor => (
                                    <div class="factor">
                                        <span class="factor-icon">{factor.icon}</span>
                                        <span>{factor.text}</span>
                                    </div>
                                ))}
                            </div>
                        </div>
                        );
                    })}

                    {/* △印（連下）- まとめて表示 */}
                    {normalizedHorses && normalizedHorses.filter(h => h.role === '連下').length > 0 && (
                        <div class="horse-card horse-card-minor">
                            <div class="horse-header">
                                <div>
                                    <span class="horse-mark-minor">{normalizedHorses.find(h => h.role === '連下')?.displayMark || '△'}</span>
                                    <span style="color: #f59e0b; font-weight: 600;">連下候補馬</span>
                                </div>
                            </div>
                            <div class="horse-grid">
                                {normalizedHorses.filter(h => h.role === '連下').map(horse => {
                                    const scoreText = horse.factors?.find(f => f.text.includes('累積スコア'))?.text;
                                    const score = scoreText ? scoreText.match(/\d+/)?.[0] : '';
                                    return (
                                        <div class="horse-grid-item">
                                            <span class="horse-number-small">{horse.number}</span>
                                            <span class="horse-name-small">{horse.name}{score ? `(${score}pt)` : ''}</span>
                                        </div>
                                    );
                                })}
                            </div>
                        </div>
                    )}

                    {/* ×印（押さえ）- まとめて表示 */}
                    {normalizedHorses && normalizedHorses.filter(h => h.role === '押さえ').length > 0 && (
                        <div class="horse-card horse-card-minor">
                            <div class="horse-header">
                                <div>
                                    <span class="horse-mark-minor">{normalizedHorses.find(h => h.role === '押さえ')?.displayMark || '×'}</span>
                                    <span style="color: #64748b; font-weight: 600;">抑え候補馬</span>
                                </div>
                            </div>
                            <div class="horse-grid">
                                {normalizedHorses.filter(h => h.role === '押さえ').map(horse => {
                                    const scoreText = horse.factors?.find(f => f.text.includes('累積スコア'))?.text;
                                    const score = scoreText ? scoreText.match(/\d+/)?.[0] : '';
                                    return (
                                        <div class="horse-grid-item">
                                            <span class="horse-number-small">{horse.number}</span>
                                            <span class="horse-name-small">{horse.name}{score ? `(${score}pt)` : ''}</span>
                                        </div>
                                    );
                                })}
                            </div>
                        </div>
                    )}

                    <div class="free-member-overlay">
                        <div class="free-member-content">
                            <div class="free-member-icon">🔒</div>
                            <div class="free-member-text">無料会員限定</div>
                            <div class="free-member-subtitle">穴馬データを表示</div>
                            <button class="free-member-button" onclick="window.location.href='/free-signup/'">無料登録する</button>
                        </div>
                    </div>
                </div>
            )}
        </div>

        <!-- AI推奨投資戦略 -->
        <div class="recommendation-section">
            <h2 class="section-title">
                <span>📊</span>
                <span>AI推奨投資戦略 - 期待度別最適化買い目</span>
            </h2>
            
            <!-- リスクバー説明セクション（コンパクト版） -->
            <div class="risk-guide-compact">
                <div class="accordion-header-compact" onclick="toggleAccordion('riskGuide')">
                    <span class="risk-title-compact">📈 期待度バーの見方</span>
                    <span class="accordion-icon-compact" id="riskGuideIcon">▼</span>
                </div>
                <div class="accordion-content-compact" id="riskGuide">
                    <div class="risk-examples-compact">
                        <div class="risk-item-compact">
                            <span class="risk-level">期待度:最高</span>
                            <div class="risk-bar-mini">
                                <div class="risk-fill-mini" style="width: 33%;"></div>
                            </div>
                            <span class="risk-text">安定志向</span>
                        </div>
                        <div class="risk-item-compact">
                            <span class="risk-level">期待度:高</span>
                            <div class="risk-bar-mini">
                                <div class="risk-fill-mini" style="width: 67%;"></div>
                            </div>
                            <span class="risk-text">バランス型</span>
                        </div>
                        <div class="risk-item-compact">
                            <span class="risk-level">期待度:標準</span>
                            <div class="risk-bar-mini">
                                <div class="risk-fill-mini" style="width: 100%;"></div>
                            </div>
                            <span class="risk-text">ハイリターン</span>
                        </div>
                    </div>
                </div>
            </div>


            <!-- 戦略1: 的中率重視型 -->
            <div class="bet-strategy premium-masked">
                <div class="strategy-title">🎯 少点数的中型</div>
                <div style="color: #94a3b8; margin-bottom: 15px;">
                    AIモデル予測: 的中率{calculateScoreBasedStats('A', mainHorseScore).hitRate}% / 期待回収率{calculateScoreBasedStats('A', mainHorseScore).returnRate}%
                </div>
                <div class="bet-list">
                    {strategies.safe.bets.map(bet => (
                        <div class="bet-item">
                            <span class="bet-type">{bet.type}</span>
                            <span class="bet-horses">{bet.horses}</span>
                            <span class="bet-points">{bet.points}</span>
                        </div>
                    ))}
                </div>
                <div class="strategy-features">
                    <div class="feature-item">
                        <span class="feature-label">🎯 的中重視</span>
                        <span class="feature-badge blue">中</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-label">💰 配当期待</span>
                        <span class="feature-badge gray">低</span>
                    </div>
                </div>
                <div class="risk-indicator">
                    <span style="color: #64748b; font-size: 0.85rem;">期待度:</span>
                    <div class="risk-bar active expectation-high" style="width: 60%;"></div>
                    <div class="risk-bar"></div>
                    <div class="risk-bar"></div>
                </div>
                <div class="premium-overlay">
                    <div class="premium-content">
                        <div class="premium-icon">🔒</div>
                        <div class="premium-text">有料会員限定</div>
                        <div class="premium-subtitle">投資戦略を完全表示</div>
                        <button class="premium-button" onclick="window.location.href='/pricing/'">今すぐ登録</button>
                    </div>
                </div>
            </div>

            <!-- 戦略2: バランス型 -->
            <div class="bet-strategy premium-masked">
                <div class="strategy-title">⚖️ バランス型</div>
                <div style="color: #94a3b8; margin-bottom: 15px;">
                    AIモデル予測: 的中率{calculateScoreBasedStats('B', (mainHorseScore + subHorseScore) / 2).hitRate}% / 期待回収率{calculateScoreBasedStats('B', (mainHorseScore + subHorseScore) / 2).returnRate}%
                </div>
                <div class="bet-list">
                    {strategies.balance.bets.map(bet => (
                        <div class="bet-item">
                            <span class="bet-type">{bet.type}</span>
                            <span class="bet-horses">{bet.horses}</span>
                            <span class="bet-points">{bet.points}</span>
                        </div>
                    ))}
                </div>
                <div class="strategy-features">
                    <div class="feature-item">
                        <span class="feature-label">🎯 的中重視</span>
                        <span class="feature-badge blue">中</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-label">💰 配当期待</span>
                        <span class="feature-badge blue">中</span>
                    </div>
                </div>
                <div class="risk-indicator">
                    <span style="color: #64748b; font-size: 0.85rem;">期待度:</span>
                    <div class="risk-bar active expectation-medium" style="width: 75%;"></div>
                    <div class="risk-bar"></div>
                    <div class="risk-bar"></div>
                </div>
                <div class="premium-overlay">
                    <div class="premium-content">
                        <div class="premium-icon">🔒</div>
                        <div class="premium-text">有料会員限定</div>
                        <div class="premium-subtitle">投資戦略を完全表示</div>
                        <button class="premium-button" onclick="window.location.href='/pricing/'">今すぐ登録</button>
                    </div>
                </div>
            </div>

            <!-- 戦略3: 高配当狙い -->
            <div class="bet-strategy premium-masked">
                <div class="strategy-title">🚀 高配当追求型</div>
                <div style="color: #94a3b8; margin-bottom: 15px;">
                    AIモデル予測: 的中率{calculateScoreBasedStats('C', (mainHorseScore + subHorseScore) / 2).hitRate}% / 期待回収率{calculateScoreBasedStats('C', (mainHorseScore + subHorseScore) / 2).returnRate}%
                </div>
                <div class="bet-list">
                    {strategies.aggressive.bets.map(bet => (
                        <div class="bet-item">
                            <span class="bet-type">{bet.type}</span>
                            <span class="bet-horses">{bet.horses}</span>
                            <span class="bet-points">{bet.points}</span>
                        </div>
                    ))}
                </div>
                <div class="strategy-features">
                    <div class="feature-item">
                        <span class="feature-label">🎯 的中重視</span>
                        <span class="feature-badge gray">低</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-label">💰 配当期待</span>
                        <span class="feature-badge green">高</span>
                    </div>
                </div>
                <div class="risk-indicator">
                    <span style="color: #64748b; font-size: 0.85rem;">期待度:</span>
                    <div class="risk-bar active expectation-low" style="width: 90%;"></div>
                    <div class="risk-bar"></div>
                    <div class="risk-bar"></div>
                </div>
                <div class="premium-overlay">
                    <div class="premium-content">
                        <div class="premium-icon">🔒</div>
                        <div class="premium-text">有料会員限定</div>
                        <div class="premium-subtitle">投資戦略を完全表示</div>
                        <button class="premium-button" onclick="window.location.href='/pricing/'">今すぐ登録</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- AI分析サマリー -->
                
                <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid rgba(148, 163, 184, 0.2);">
                    <h4 style="color: #3b82f6; margin-bottom: 10px;">重要指標</h4>
                    <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 10px;">
                        <div>展開予測精度: {analysis.keyIndicators.accuracy}%</div>
                        <div>過去類似レース: {analysis.keyIndicators.similarRaces}</div>
                        <div>信頼区間: {analysis.keyIndicators.confidenceInterval}%</div>
                        <div>推奨投資額: {analysis.keyIndicators.recommendedInvestment}</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- AI予想の技術的背景 -->
        <div class="analysis-section" style="opacity: 1; transform: translateY(0px); transition: opacity 0.6s ease 0s, transform 0.6s ease 0s;">
            <h2 class="section-title">
                <span>🔬</span>
                <span>AI予想の技術的背景</span>
            </h2>
            
            <h3 style="color:#8b5cf6;margin-bottom:15px">使用モデル</h3>
            
            <div style="margin-bottom:20px">
                <h4 style="color:#3b82f6;margin-bottom:8px">🤖 XGBoost</h4>
                <ul style="color:#e2e8f0;line-height:1.6;margin-left:20px">
                    <li>着順予測精度: 91.2%</li>
                    <li>50種類以上の特徴量を勾配ブースティングで解析</li>
                    <li>過去10,000レース以上の学習データ</li>
                </ul>
            </div>
            
            <div style="margin-bottom:20px">
                <h4 style="color:#3b82f6;margin-bottom:8px">🧠 LSTM（長短期記憶）</h4>
                <ul style="color:#e2e8f0;line-height:1.6;margin-left:20px">
                    <li>オッズ変動予測精度: 85.7%</li>
                    <li>時系列パターン認識による展開予測</li>
                    <li>リカレント構造で過去パフォーマンスを記憶</li>
                </ul>
            </div>
            
            <div style="margin-bottom:20px">
                <h4 style="color:#3b82f6;margin-bottom:8px">🔥 ニューラルネットワーク</h4>
                <ul style="color:#e2e8f0;line-height:1.6;margin-left:20px">
                    <li>複合要因分析精度: 89.1%</li>
                    <li>深層学習による非線形パターン抽出</li>
                </ul>
            </div>
            
            <h3 style="color:#8b5cf6;margin-bottom:15px;margin-top:25px">主要特徴量（50項目から抜粋）</h3>
            <ul style="color:#e2e8f0;line-height:1.8;margin-left:20px">
                <li><strong style="color:#10b981">過去パフォーマンス</strong>: 5走の着順・タイム・上がり3ハロン</li>
                <li><strong style="color:#10b981">環境要因</strong>: 馬場状態・天候・距離適性・枠順</li>
                <li><strong style="color:#10b981">市場要因</strong>: オッズ変動パターン・人気度推移</li>
                <li><strong style="color:#10b981">血統要因</strong>: 父系・母系・生産者データ</li>
            </ul>
            
            <h3 style="color:#8b5cf6;margin-bottom:15px;margin-top:25px">戦略タイプと選び方について</h3>
            <div class="strategy-explanations-tech">
                <div class="strategy-explain-tech">
                    <div class="strategy-type-tech">🎯 戦略A: 高的中率型</div>
                    <div class="strategy-desc-tech">的中率を最優先とし、配当は控えめ。競馬初心者や安定した収益を求める方におすすめ。AIモデルが高確率で的中と判断した馬券のみを厳選し、リスクを最小限に抑えます。</div>
                </div>
                <div class="strategy-explain-tech">
                    <div class="strategy-type-tech">⚖️ 戦略B: バランス型</div>
                    <div class="strategy-desc-tech">的中率と配当のバランスを重視。中穴狙いで中級者向け。最も汎用性の高い戦略で、安定性と収益性の両立を図ります。多くの投資家に適した標準的なアプローチです。</div>
                </div>
                <div class="strategy-explain-tech">
                    <div class="strategy-type-tech">🚀 戦略C: 高配当追求型</div>
                    <div class="strategy-desc-tech">高配当を狙い撃ち。リスクは高いが大きなリターンを期待。上級者や一発逆転を狙う方向け。AIが大穴候補として抽出した馬を積極活用し、ハイリスク・ハイリターンを追求します。</div>
                </div>
            </div>
        </div>

        <!-- 免責事項 -->
        <div style="background:rgba(245,158,11,.1);padding:20px;border-radius:10px;border:1px solid rgba(245,158,11,.2);margin-top:30px">
            <h3 style="color:#f59e0b;margin-bottom:15px">⚠️ 免責事項</h3>
            <p style="color:#e2e8f0;line-height:1.6">競馬予想は投資の一種です。必ず余裕資金の範囲内で楽しみ、自己責任でご利用ください。当予想による損失については一切の責任を負いません。</p>
        </div>
        </div>
</BaseLayout>

<style>
    .container {
        max-width: 1000px;
        margin: 0 auto;
    }
    .header-section {
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);
        padding: 30px;
        border-radius: 12px;
        margin-bottom: 30px;
        border: 1px solid rgba(59, 130, 246, 0.2);
        text-align: center;
    }
    .race-title {
        font-size: 2rem;
        font-weight: 800;
        background: linear-gradient(135deg, #8b5cf6 0%, #3b82f6 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 10px;
    }
    .ai-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: linear-gradient(135deg, rgba(16, 185, 129, 0.2) 0%, rgba(16, 185, 129, 0.3) 100%);
        padding: 6px 16px;
        border-radius: 20px;
        border: 1px solid rgba(16, 185, 129, 0.3);
        margin-bottom: 15px;
    }
    .pulse {
        width: 8px;
        height: 8px;
        background: #ef4444;
        border-radius: 50%;
        animation: pulse 2s infinite;
    }
    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
    .ai-status {
        color: #10b981;
        font-weight: 600;
        font-size: 0.9rem;
    }
    .ai-metrics {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 15px;
        margin-top: 20px;
    }
    .metric {
        background: rgba(255, 255, 255, 0.05);
        padding: 15px;
        border-radius: 8px;
        text-align: center;
    }
    .metric-value {
        font-size: 1.8rem;
        font-weight: 700;
        color: #10b981;
    }
    .metric-label {
        font-size: 0.85rem;
        color: #64748b;
        margin-top: 5px;
    }
    .analysis-section {
        background: rgba(255, 255, 255, 0.05);
        padding: 25px;
        border-radius: 12px;
        margin-bottom: 25px;
        border: 1px solid rgba(148, 163, 184, 0.1);
    }
    .section-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: #3b82f6;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .horse-card {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%);
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 15px;
        border: 1px solid rgba(59, 130, 246, 0.2);
        position: relative;
    }
    
    /* ◎印（本命）- 最大サイズ */
    .horse-card-main {
        padding: 30px;
        background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);
        border: 2px solid rgba(16, 185, 129, 0.3);
        box-shadow: 0 4px 15px rgba(16, 185, 129, 0.2);
    }
    
    /* ◎印（対抗・単穴）- 中サイズ */
    .horse-card-sub {
        padding: 25px;
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.08) 0%, rgba(139, 92, 246, 0.08) 100%);
        border: 1.5px solid rgba(59, 130, 246, 0.25);
    }
    
    /* △×印（連下・押さえ）- 小サイズまとめ */
    .horse-card-minor {
        padding: 20px;
        background: linear-gradient(135deg, rgba(148, 163, 184, 0.05) 0%, rgba(100, 116, 139, 0.05) 100%);
        border: 1px solid rgba(148, 163, 184, 0.2);
    }
    
    /* 馬券印マーク */
    .horse-mark-main {
        display: inline-block;
        font-size: 1.8rem;
        color: #10b981;
        font-weight: 900;
        margin-right: 10px;
    }
    
    .horse-mark-sub {
        display: inline-block;
        font-size: 1.5rem;
        color: #3b82f6;
        font-weight: 800;
        margin-right: 10px;
    }
    
    .horse-mark-minor {
        display: inline-block;
        font-size: 1.3rem;
        color: #f59e0b;
        font-weight: 700;
        margin-right: 10px;
    }
    
    /* まとめ表示用のグリッド */
    .horse-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 15px;
        margin-top: 15px;
    }
    
    .horse-grid-item {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 10px;
        background: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        border: 1px solid rgba(148, 163, 184, 0.1);
    }
    
    .horse-number-small {
        display: inline-block;
        width: 25px;
        height: 25px;
        background: #64748b;
        color: white;
        text-align: center;
        line-height: 25px;
        border-radius: 50%;
        font-weight: 600;
        font-size: 0.85rem;
    }
    
    .horse-name-small {
        font-weight: 600;
        color: #e2e8f0;
        font-size: 0.95rem;
    }
    
    .confidence-small {
        color: #94a3b8;
        font-size: 0.85rem;
        margin-left: auto;
    }
    .horse-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }
    .horse-number {
        display: inline-block;
        width: 30px;
        height: 30px;
        background: #8b5cf6;
        color: white;
        text-align: center;
        line-height: 30px;
        border-radius: 50%;
        font-weight: 700;
        margin-right: 10px;
    }
    .horse-name {
        font-size: 1.2rem;
        font-weight: 700;
        color: #e2e8f0;
    }
    .confidence-score {
        background: linear-gradient(135deg, #f59e0b 0%, #fb923c 100%);
        color: #8b5cf6;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.9rem;
        font-weight: 600;
    }
    .ai-factors {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        margin-top: 15px;
    }
    .factor {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 0.9rem;
    }
    .factor-icon {
        width: 20px;
        height: 20px;
        background: rgba(16, 185, 129, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #10b981;
        font-size: 12px;
    }
    .recommendation-section {
        background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);
        padding: 25px;
        border-radius: 12px;
        border: 1px solid rgba(16, 185, 129, 0.2);
        margin-bottom: 25px;
    }
    .bet-strategy {
        background: rgba(255, 255, 255, 0.05);
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
    }
    .strategy-title {
        font-size: 1.1rem;
        font-weight: 700;
        color: #10b981;
        margin-bottom: 15px;
    }
    .bet-list {
        background: rgba(0, 0, 0, 0.2);
        padding: 15px;
        border-radius: 8px;
        margin-top: 10px;
    }
    .bet-item {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid rgba(148, 163, 184, 0.1);
    }
    .bet-item:last-child {
        border-bottom: none;
    }
    .bet-type {
        color: #3b82f6;
        font-weight: 600;
    }
    .bet-horses {
        color: #e2e8f0;
    }
    .bet-points {
        color: #10b981;
        font-weight: 600;
    }
    .risk-indicator {
        display: flex;
        gap: 5px;
        margin-top: 15px;
    }
    .risk-bar {
        height: 8px;
        width: 60px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
    }
    .risk-bar.active.expectation-high {
        background: #10b981; /* 緑色 - 期待度最高 */
    }
    .risk-bar.active.expectation-medium {
        background: #3b82f6; /* 青色 - 期待度高 */
    }
    .risk-bar.active.expectation-low {
        background: #94a3b8; /* グレー - 期待度標準 */
    }
    
    /* 旧スタイル（フォールバック） */
    .risk-bar.active {
        background: #64748b;
    }
    .expected-return {
        background: rgba(16, 185, 129, 0.1);
        padding: 15px;
        border-radius: 8px;
        margin-top: 15px;
        text-align: center;
    }
    .return-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #10b981;
    }
    .feature-importance {
        margin-top: 20px;
    }
    .importance-bar {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }
    .importance-label {
        width: 120px;
        font-size: 0.85rem;
        color: #94a3b8;
    }
    .importance-value {
        flex: 1;
        height: 20px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 10px;
        overflow: hidden;
    }
    .importance-fill {
        height: 100%;
        background: linear-gradient(90deg, #3b82f6, #8b5cf6);
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding-right: 8px;
        color: white;
        font-size: 0.8rem;
        font-weight: 700;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    }
    
    /* 信頼度プログレスバー */
    .confidence-bar-container {
        margin-top: 20px;
        padding-top: 15px;
        border-top: 1px solid rgba(148, 163, 184, 0.2);
    }
    
    .confidence-bar-label {
        color: #94a3b8;
        font-size: 0.85rem;
        margin-bottom: 8px;
        font-weight: 600;
    }
    
    .confidence-bar {
        height: 24px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid rgba(148, 163, 184, 0.2);
    }
    
    .confidence-bar-fill {
        height: 100%;
        border-radius: 11px;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding-right: 10px;
        transition: width 0.6s ease;
    }
    
    .confidence-bar-text {
        color: white;
        font-size: 0.85rem;
        font-weight: 700;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }
    .premium-masked {
        position: relative;
    }
    .free-member-masked {
        position: relative;
    }
    .premium-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, 
            rgba(15, 23, 42, 0.4) 0%,
            rgba(15, 23, 42, 0.7) 20%,
            rgba(15, 23, 42, 0.9) 60%,
            rgba(15, 23, 42, 0.98) 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 10px;
        backdrop-filter: blur(4px);
    }
    .free-member-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, 
            rgba(15, 23, 42, 0.3) 0%,
            rgba(15, 23, 42, 0.6) 20%,
            rgba(15, 23, 42, 0.85) 60%,
            rgba(15, 23, 42, 0.95) 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 10px;
        backdrop-filter: blur(3px);
    }
    .premium-content, .free-member-content {
        text-align: center;
    }
    .free-member-icon {
        font-size: 2rem;
        margin-bottom: 10px;
    }
    .free-member-text {
        font-size: 1.1rem;
        font-weight: 600;
        color: #3b82f6;
        margin-bottom: 5px;
    }
    .free-member-subtitle {
        font-size: 0.9rem;
        color: #94a3b8;
        margin-bottom: 15px;
    }
    .premium-icon {
        font-size: 2rem;
        margin-bottom: 10px;
    }
    .premium-text {
        font-size: 1.2rem;
        font-weight: 700;
        color: #3b82f6;
        margin-bottom: 5px;
    }
    .premium-subtitle {
        font-size: 0.9rem;
        color: #94a3b8;
        margin-bottom: 15px;
    }
    .premium-button {
        background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 20px;
        font-weight: 600;
        cursor: pointer;
        transition: transform 0.2s;
    }
    .premium-button:hover {
        transform: scale(1.05);
    }
    .free-member-button {
        background: #3b82f6;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 20px;
        font-weight: 600;
        cursor: pointer;
        transition: transform 0.2s;
    }
    .free-member-button:hover {
        transform: scale(1.05);
    }

    /* 戦略説明セクション */
    .strategy-guide {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%);
        border: 1px solid rgba(59, 130, 246, 0.15);
        border-radius: 12px;
        padding: 25px;
        margin-bottom: 30px;
    }
    
    .guide-header {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 1.1rem;
        font-weight: 700;
        color: #3b82f6;
        margin-bottom: 20px;
    }
    
    .strategy-explanations {
        display: grid;
        gap: 15px;
        margin-bottom: 25px;
    }
    
    .strategy-explain {
        background: rgba(15, 23, 42, 0.6);
        border-radius: 8px;
        padding: 15px;
        border-left: 4px solid #3b82f6;
    }
    
    .strategy-type {
        font-weight: 600;
        color: #e2e8f0;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }
    
    .strategy-desc {
        color: #94a3b8;
        font-size: 0.9rem;
        line-height: 1.5;
    }
    
    .risk-guide {
        border-top: 1px solid rgba(148, 163, 184, 0.2);
        padding-top: 20px;
    }
    
    .risk-title {
        font-weight: 600;
        color: #f59e0b;
        margin-bottom: 15px;
        font-size: 1rem;
    }
    
    .risk-examples {
        display: grid;
        gap: 12px;
    }
    
    .risk-example {
        display: grid;
        grid-template-columns: 200px 1fr;
        align-items: center;
        gap: 15px;
        padding: 10px;
        background: rgba(15, 23, 42, 0.4);
        border-radius: 6px;
    }
    
    .risk-demo {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 0.85rem;
        color: #94a3b8;
        font-weight: 600;
    }
    
    .risk-bar-demo {
        display: flex;
        gap: 2px;
        flex: 1;
    }
    
    .risk-bar-fill {
        height: 8px;
        background: rgba(148, 163, 184, 0.2);
        border-radius: 4px;
        flex: 1;
        transition: all 0.3s ease;
    }
    
    .risk-bar-fill.active {
        background: linear-gradient(90deg, #f59e0b 0%, #ef4444 100%);
    }
    
    .risk-desc {
        color: #94a3b8;
        font-size: 0.85rem;
        line-height: 1.4;
    }
    
    /* コンパクトなリスクガイド */
    .risk-guide-compact {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.03) 0%, rgba(139, 92, 246, 0.03) 100%);
        border: 1px solid rgba(59, 130, 246, 0.1);
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 25px;
    }
    
    .accordion-header-compact {
        display: flex;
        justify-content: space-between;
        align-items: center;
        cursor: pointer;
        transition: color 0.3s ease;
    }
    
    .accordion-header-compact:hover {
        color: #3b82f6;
    }
    
    .risk-title-compact {
        font-weight: 600;
        color: #f59e0b;
        font-size: 0.9rem;
    }
    
    .accordion-icon-compact {
        color: #f59e0b;
        font-size: 0.8rem;
        font-weight: 600;
        user-select: none;
    }
    
    .accordion-content-compact {
        max-height: 0;
        opacity: 0;
        overflow: hidden;
        transition: max-height 0.3s ease, opacity 0.3s ease;
        margin-top: 12px;
    }
    
    .risk-examples-compact {
        display: grid;
        gap: 8px;
    }
    
    .risk-item-compact {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 6px 0;
    }
    
    .risk-level {
        font-size: 0.8rem;
        font-weight: 600;
        color: #94a3b8;
        min-width: 50px;
    }
    
    .risk-bar-mini {
        flex: 1;
        height: 6px;
        background: rgba(148, 163, 184, 0.2);
        border-radius: 3px;
        overflow: hidden;
        max-width: 80px;
    }
    
    .risk-fill-mini {
        height: 100%;
        background: linear-gradient(90deg, #f59e0b 0%, #ef4444 100%);
        border-radius: 3px;
        transition: width 0.3s ease;
    }
    
    .risk-text {
        font-size: 0.75rem;
        color: #64748b;
        min-width: 60px;
    }

    /* 技術的背景セクション用の戦略説明 */
    .strategy-explanations-tech {
        display: grid;
        gap: 15px;
        margin-top: 15px;
    }
    
    .strategy-explain-tech {
        background: rgba(139, 92, 246, 0.08);
        border-radius: 8px;
        padding: 15px;
        border-left: 3px solid #8b5cf6;
    }
    
    .strategy-type-tech {
        font-weight: 600;
        color: #e2e8f0;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }
    
    .strategy-desc-tech {
        color: #94a3b8;
        font-size: 0.9rem;
        line-height: 1.6;
    }

    @media (max-width: 768px) {
        .risk-example {
            grid-template-columns: 1fr;
            gap: 8px;
        }
        
        .risk-demo {
            justify-content: space-between;
        }
        
        .strategy-guide {
            padding: 20px;
        }
        
        /* プログレスバーをモバイル向けに最適化 */
        .importance-fill {
            font-size: 0.7rem;
            padding-right: 6px;
        }
        
        .importance-bar {
            margin-bottom: 8px;
        }
        
        .importance-label {
            width: 100px;
            font-size: 0.8rem;
        }
    }

    /* 戦略特徴バッジ */
    .strategy-features {
        display: flex;
        gap: 12px;
        margin-top: 10px;
        flex-wrap: wrap;
    }

    .feature-item {
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .feature-label {
        font-size: 0.85rem;
        color: #94a3b8;
    }

    .feature-badge {
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .feature-badge.green {
        background: rgba(16, 185, 129, 0.2);
        color: #10b981;
    }

    .feature-badge.blue {
        background: rgba(59, 130, 246, 0.2);
        color: #3b82f6;
    }

    .feature-badge.gray {
        background: rgba(148, 163, 184, 0.2);
        color: #94a3b8;
    }
</style>

<script is:inline>
    function toggleAccordion(id) {
        const content = document.getElementById(id);
        const icon = document.getElementById(id + 'Icon');
        
        if (content.style.maxHeight === '0px' || content.style.maxHeight === '') {
            content.style.maxHeight = content.scrollHeight + 'px';
            content.style.opacity = '1';
            icon.textContent = '◎';
        } else {
            content.style.maxHeight = '0px';
            content.style.opacity = '0';
            icon.textContent = '▼';
        }
    }

    // 無料会員アクセス制御
    function checkFreeMemberAccess() {
        // 認証状態の確認
        function getCurrentUserPlan() {
            // 1. 新形式のuser-planチェック（最優先）
            const userPlanData = localStorage.getItem('user-plan');
            if (userPlanData) {
                try {
                    const userData = JSON.parse(userPlanData);
                    return { 
                        user: { email: userData.email }, 
                        plan: userData.plan || 'free' 
                    };
                } catch (error) {
                    console.error('User plan parsing error:', error);
                }
            }

            // 2. 旧形式のisLoggedInチェック（互換性）
            const isLoggedIn = localStorage.getItem('isLoggedIn');
            const userPlan = localStorage.getItem('userPlan');
            if (isLoggedIn === 'true') {
                return { 
                    user: { legacy: true }, 
                    plan: userPlan || 'free' 
                };
            }

            // 3. 旧形式のtest_subscription_データをチェック
            const testSubscriptionKeys = Object.keys(localStorage).filter(key => key.startsWith('test_subscription_'));
            if (testSubscriptionKeys.length > 0) {
                try {
                    const testData = JSON.parse(localStorage.getItem(testSubscriptionKeys[0]));
                    return { 
                        user: { id: testData.userId, legacy: true }, 
                        plan: testData.planType.toLowerCase() 
                    };
                } catch (error) {
                    console.error('Test subscription data parsing error:', error);
                }
            }

            // 4. デフォルトは未登録
            return { user: null, plan: null };
        }

        const { user, plan } = getCurrentUserPlan();
        const isRegistered = user !== null;
        
        console.log('🔍 無料会員アクセスチェック:', { user, plan, isRegistered });

        // 穴馬データのオーバーレイ制御
        const freeMemberOverlay = document.querySelector('.free-member-overlay');
        if (freeMemberOverlay) {
            if (isRegistered) {
                // 登録済み: オーバーレイを非表示
                freeMemberOverlay.style.display = 'none';
                console.log('✅ 穴馬データアクセス許可（登録済みユーザー）');
            } else {
                // 未登録: オーバーレイを表示
                freeMemberOverlay.style.display = 'flex';
                console.log('🔒 穴馬データアクセス拒否（未登録ユーザー）');
            }
        }
    }

    // ページ読み込み後に実行
    document.addEventListener('DOMContentLoaded', function() {
        checkFreeMemberAccess();
    });
</script>