---
import BaseLayout from '../layouts/BaseLayout.astro';
import allRacesData from '../data/allRacesPrediction.json';

// プレミアムプランは全レースにアクセス可能
const premiumRaces = allRacesData.races; // 全レース
const totalRaces = premiumRaces.length;
const todayStats = {
    predictions: totalRaces,
    hitRate: "87.5%",
    returns: "156%"
};
---

<BaseLayout title="プレミアム予想 | NANKANアナリティクス" description="プレミアム会員限定の全12レースAI予想。3つの投資戦略で高配当を狙う完全攻略版。">
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">👑 プレミアム予想</h1>
            <p class="page-subtitle">全12レースのAI分析予想・3戦略すべて提供<br>南関東平日開催の完全攻略版</p>
            <div class="plan-badge">PREMIUM PLAN</div>
        </div>

        <!-- ローディング状態 -->
        <div id="loading-state" class="loading-state">
            <div class="spinner"></div>
            認証情報を確認中...
        </div>

        <!-- アクセス拒否 -->
        <div id="access-denied" class="access-denied" style="display: none;">
            <div class="access-denied-icon">🔒</div>
            <h2 class="access-denied-title">プレミアム会員限定コンテンツ</h2>
            <p class="access-denied-message">
                このコンテンツをご覧いただくには、プレミアム会員への登録が必要です。<br>
                AIによる高精度予想と詳細な分析レポートをお楽しみください。
            </p>
            <a href="/pricing" class="btn">プレミアム会員になる</a>
        </div>

        <!-- プレミアムコンテンツ -->
        <div id="premium-content" style="display: none;">
            <!-- 今日の成績 -->
            <div class="today-stats">
                <div class="stats-title">
                    📊 本日の成績（プレミアム全レース）
                </div>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number">8</div>
                        <div class="stat-desc">的中</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">12</div>
                        <div class="stat-desc">レース</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">66.7%</div>
                        <div class="stat-desc">的中率</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">185%</div>
                        <div class="stat-desc">回収率</div>
                    </div>
                </div>
            </div>

            <div class="predictions-grid" id="predictions-container">
                <div class="loading-state">
                    <div class="spinner"></div>
                    本日のプレミアム予想を読み込み中...
                </div>
            </div>
        </div>
    </div>
</BaseLayout>

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 10px;
    }

    .page-subtitle {
        color: #94a3b8;
        font-size: 1.1rem;
        margin-bottom: 30px;
    }

    .plan-badge {
        display: inline-block;
        background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        color: white;
        padding: 8px 24px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .loading-state {
        text-align: center;
        padding: 60px 20px;
        color: #94a3b8;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 3px solid rgba(139, 92, 246, 0.3);
        border-top: 3px solid #8b5cf6;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: 0 auto 20px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .predictions-grid {
        display: grid;
        gap: 30px;
    }

    .race-card {
        margin-bottom: 40px;
    }

    /* レースヘッダー（free-prediction風） */
    .race-header-section {
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
        padding: 30px;
        border-radius: 12px;
        margin-bottom: 30px;
        border: 1px solid rgba(139, 92, 246, 0.2);
        text-align: center;
    }

    .ai-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: linear-gradient(135deg, rgba(16, 185, 129, 0.2) 0%, rgba(16, 185, 129, 0.3) 100%);
        padding: 6px 16px;
        border-radius: 20px;
        border: 1px solid rgba(16, 185, 129, 0.3);
        margin-bottom: 15px;
    }

    .pulse {
        width: 8px;
        height: 8px;
        background: #ef4444;
        border-radius: 50%;
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }

    .ai-status {
        color: #10b981;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .race-title {
        font-size: 2rem;
        font-weight: 800;
        background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 10px;
    }

    .ai-metrics {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 15px;
        margin-top: 20px;
    }

    .metric {
        background: rgba(255, 255, 255, 0.05);
        padding: 15px;
        border-radius: 8px;
        text-align: center;
    }

    .metric-value {
        font-size: 1.8rem;
        font-weight: 700;
        color: #10b981;
    }

    .metric-label {
        font-size: 0.85rem;
        color: #64748b;
        margin-top: 5px;
    }

    /* 馬情報セクション */
    .analysis-section {
        background: rgba(255, 255, 255, 0.05);
        padding: 25px;
        border-radius: 12px;
        margin-bottom: 25px;
        border: 1px solid rgba(148, 163, 184, 0.1);
    }

    .section-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: #8b5cf6;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    /* 馬カード */
    .horse-card {
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.05) 0%, rgba(168, 85, 247, 0.05) 100%);
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 15px;
        border: 1px solid rgba(139, 92, 246, 0.2);
        position: relative;
    }

    /* ◎印（本命）- 最大サイズ */
    .horse-card-main {
        padding: 30px;
        background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);
        border: 2px solid rgba(16, 185, 129, 0.3);
        box-shadow: 0 4px 15px rgba(16, 185, 129, 0.2);
    }

    /* ○印（対抗）- 中サイズ */
    .horse-card-sub {
        padding: 25px;
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.08) 0%, rgba(168, 85, 247, 0.08) 100%);
        border: 1.5px solid rgba(139, 92, 246, 0.25);
    }

    .horse-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    /* 馬券印マーク */
    .horse-mark-main {
        display: inline-block;
        font-size: 1.8rem;
        color: #10b981;
        font-weight: 900;
        margin-right: 10px;
    }

    .horse-mark-sub {
        display: inline-block;
        font-size: 1.5rem;
        color: #8b5cf6;
        font-weight: 800;
        margin-right: 10px;
    }

    .horse-number {
        display: inline-block;
        width: 30px;
        height: 30px;
        background: #8b5cf6;
        color: white;
        text-align: center;
        line-height: 30px;
        border-radius: 50%;
        font-weight: 700;
        margin-right: 10px;
    }

    .horse-name {
        font-size: 1.2rem;
        font-weight: 700;
        color: #e2e8f0;
    }

    .horse-type {
        margin-left: 10px;
        font-weight: 600;
    }

    .confidence-score {
        background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .ai-factors {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
        margin-top: 15px;
    }

    .factor {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 0.9rem;
        color: #e2e8f0;
    }

    .factor-icon {
        width: 20px;
        height: 20px;
        background: rgba(139, 92, 246, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #8b5cf6;
        font-size: 12px;
    }

    /* 投資戦略セクション */
    .recommendation-section {
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(168, 85, 247, 0.1) 100%);
        padding: 25px;
        border-radius: 12px;
        border: 1px solid rgba(139, 92, 246, 0.2);
        margin-bottom: 25px;
    }

    .bet-strategy {
        background: rgba(255, 255, 255, 0.05);
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .strategy-title {
        font-size: 1.1rem;
        font-weight: 700;
        color: #8b5cf6;
        margin-bottom: 15px;
    }

    .strategy-tabs {
        display: flex;
        gap: 8px;
        margin-bottom: 20px;
        flex-wrap: wrap;
    }

    .strategy-tab {
        padding: 8px 16px;
        background: rgba(139, 92, 246, 0.1);
        border: 1px solid rgba(139, 92, 246, 0.3);
        border-radius: 6px;
        color: #94a3b8;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .strategy-tab.active {
        background: rgba(139, 92, 246, 0.2);
        color: #8b5cf6;
        border-color: #8b5cf6;
    }

    .strategy-content {
        background: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
    }

    .strategy-meta {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
        font-size: 14px;
        flex-wrap: wrap;
        gap: 10px;
    }

    .hit-rate {
        color: #10b981;
        font-weight: 600;
    }

    .return-rate {
        color: #f59e0b;
        font-weight: 600;
    }

    .bet-list {
        list-style: none;
        padding: 0;
    }

    .bet-item {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid rgba(148, 163, 184, 0.1);
    }

    .bet-item:last-child {
        border-bottom: none;
    }

    .bet-type {
        color: #8b5cf6;
        font-weight: 600;
    }

    .bet-horses {
        color: #e2e8f0;
    }

    .bet-points {
        color: #10b981;
        font-weight: 600;
    }

    /* リスクインジケーター */
    .risk-indicator {
        display: flex;
        gap: 5px;
        margin-top: 15px;
    }

    .risk-bar {
        height: 8px;
        width: 60px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
    }

    .risk-bar.active.risk-low {
        background: #10b981;
    }

    .risk-bar.active.risk-medium {
        background: #f59e0b;
    }

    .risk-bar.active.risk-high {
        background: #ef4444;
    }

    .expected-return {
        background: rgba(139, 92, 246, 0.1);
        padding: 15px;
        border-radius: 8px;
        margin-top: 15px;
        text-align: center;
    }

    .return-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #8b5cf6;
    }

    .no-data {
        text-align: center;
        padding: 60px 20px;
        background: rgba(139, 92, 246, 0.1);
        border: 2px dashed rgba(139, 92, 246, 0.3);
        border-radius: 16px;
        margin-top: 40px;
    }

    .no-data-icon {
        font-size: 3rem;
        margin-bottom: 20px;
    }

    .no-data-title {
        color: #8b5cf6;
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .no-data-text {
        color: #94a3b8;
        line-height: 1.6;
    }

    /* アクセス制御 */
    .access-denied {
        text-align: center;
        padding: 80px 40px;
        background: rgba(139, 92, 246, 0.1);
        border: 2px solid rgba(139, 92, 246, 0.3);
        border-radius: 16px;
        margin: 40px 0;
    }

    .access-denied-icon {
        font-size: 4rem;
        margin-bottom: 24px;
    }

    .access-denied-title {
        color: #8b5cf6;
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 16px;
    }

    .access-denied-message {
        color: #94a3b8;
        line-height: 1.6;
        margin-bottom: 32px;
    }

    .btn {
        display: inline-block;
        background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        color: white;
        padding: 12px 32px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(139, 92, 246, 0.3);
    }

    /* 今日の成績 */
    .today-stats {
        background: rgba(139, 92, 246, 0.1);
        border: 1px solid rgba(139, 92, 246, 0.3);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 30px;
    }

    .stats-title {
        color: #8b5cf6;
        font-weight: 600;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 20px;
    }

    .stat-card {
        text-align: center;
        background: rgba(139, 92, 246, 0.1);
        padding: 15px;
        border-radius: 8px;
    }

    .stat-number {
        color: #8b5cf6;
        font-size: 1.5rem;
        font-weight: 700;
    }

    .stat-desc {
        color: #94a3b8;
        font-size: 0.85rem;
        margin-top: 4px;
    }

    @media (max-width: 768px) {
        .page-title {
            font-size: 2rem;
        }

        .container {
            padding: 20px 15px;
        }

        .race-card {
            padding: 20px;
        }

        .horses-grid {
            grid-template-columns: 1fr;
        }

        .strategy-tabs {
            flex-wrap: wrap;
        }

        .strategy-meta {
            flex-direction: column;
            gap: 5px;
        }
    }
</style>

<script type="module">
    // Supabase設定は実際の環境変数に置き換え
    const SUPABASE_URL = 'your-supabase-url';
    const SUPABASE_ANON_KEY = 'your-supabase-anon-key';

    // モックデータ（開発用）
    const mockPremiumPredictions = [
        {
            id: 1,
            race_number: 11,
            race_name: "羽田盃(SIII)",
            race_date: new Date().toISOString().split('T')[0],
            race_track: "大井",
            race_distance: 1800,
            confidence_score: 96.4,
            prediction_data: {
                horses: [
                    {
                        number: 6,
                        name: "エンペラーズカップ",
                        mark: "◎",
                        factors: ["格上挑戦: 95.2%", "距離延長プラス: A+", "重賞実績: S", "調教師手腕: 94.1%"]
                    },
                    {
                        number: 4,
                        name: "ゴールドスター",
                        mark: "○",
                        factors: ["重賞常連: 91.7%", "コース巧者: A+", "陣営信頼度: 94.1%", "ローテ最適: S"]
                    },
                    {
                        number: 9,
                        name: "ダイヤモンドキング",
                        mark: "▲", 
                        factors: ["爆発力: 97.3%", "穴狙い適性: S+", "オッズ妙味: 91.9%", "展開利: A"]
                    },
                    {
                        number: 2,
                        name: "サイレントナイト",
                        mark: "△",
                        factors: ["安定感: 88.4%", "末脚決め手: 89.1%", "枠順良好: A", "騎手腕: 85.7%"]
                    }
                ],
                strategies: {
                    safe: {
                        title: "高的中率型",
                        hitRate: "86.3",
                        returnRate: "142",
                        recommendation: 5,
                        bets: [
                            { type: "馬単", horses: "6→4", points: "1点" },
                            { type: "馬連", horses: "6-4", points: "1点" },
                            { type: "ワイド", horses: "6-4,9", points: "2点" }
                        ]
                    },
                    balance: {
                        title: "バランス型",
                        hitRate: "74.2",
                        returnRate: "198",
                        recommendation: 4,
                        bets: [
                            { type: "馬単", horses: "6→4,9", points: "2点" },
                            { type: "3連複", horses: "6-4-9", points: "1点" },
                            { type: "3連複", horses: "6-4-2", points: "1点" }
                        ]
                    },
                    aggressive: {
                        title: "高配当狙い型",
                        hitRate: "52.1",
                        returnRate: "348",
                        recommendation: 3,
                        bets: [
                            { type: "3連単", horses: "6→4,9→2,3,7", points: "6点" },
                            { type: "3連単", horses: "6→9→4,2,8", points: "3点" },
                            { type: "馬単", horses: "9→6", points: "1点" }
                        ]
                    }
                }
            }
        }
    ];

    let currentUser = null;

    // 初期化
    document.addEventListener('DOMContentLoaded', async () => {
        await checkPremiumAccess();
    });

    // 認証とアクセス権チェック
    async function checkPremiumAccess() {
        // 開発環境では常にアクセス許可
        // 本番環境ではSupabaseでの認証チェック
        const hasAccess = true; // 実際にはSupabaseでプレミアム会員かチェック
        
        const loadingState = document.getElementById('loading-state');
        const accessDenied = document.getElementById('access-denied');
        const premiumContent = document.getElementById('premium-content');
        
        if (hasAccess) {
            loadingState.style.display = 'none';
            premiumContent.style.display = 'block';
            await loadPremiumPredictions();
        } else {
            loadingState.style.display = 'none';
            accessDenied.style.display = 'block';
        }
    }

    // プレミアム予想データ読み込み
    async function loadPremiumPredictions() {
        const container = document.getElementById('predictions-container');
        
        try {
            // 本番環境では実際のAPI呼び出し
            // const predictions = await fetchPremiumPredictions();
            
            // 開発環境ではモックデータを使用
            const predictions = mockPremiumPredictions;
            
            if (predictions.length === 0) {
                container.innerHTML = `
                    <div class="no-data">
                        <div class="no-data-icon">📅</div>
                        <div class="no-data-title">本日の予想はまだ準備中です</div>
                        <div class="no-data-text">
                            プレミアム予想は開催日の前日夜に公開されます。<br>
                            全12レースの精密な予想をお届けします。
                        </div>
                    </div>
                `;
                return;
            }

            container.innerHTML = predictions.map(prediction => `
                <div class="race-card">
                    <!-- レースヘッダー -->
                    <div class="race-header-section">
                        <div class="ai-badge">
                            <span class="pulse"></span>
                            <span class="ai-status">AI分析完了</span>
                        </div>
                        <h1 class="race-title">${prediction.race_track}${prediction.race_number}R ${prediction.race_name}</h1>
                        <div class="ai-metrics">
                            <div class="metric">
                                <div class="metric-value">${prediction.confidence_score}%</div>
                                <div class="metric-label">予測信頼度</div>
                            </div>
                            <div class="metric">
                                <div class="metric-value">94.7</div>
                                <div class="metric-label">能力指数</div>
                            </div>
                            <div class="metric">
                                <div class="metric-value">S+</div>
                                <div class="metric-label">推奨度</div>
                            </div>
                            <div class="metric">
                                <div class="metric-value">248%</div>
                                <div class="metric-label">期待回収率</div>
                            </div>
                        </div>
                    </div>

                    <!-- AI選出馬分析 -->
                    <div class="analysis-section">
                        <h2 class="section-title">
                            <span>🤖</span>
                            <span>AIモデル選出馬 - プレミアム完全版</span>
                        </h2>
                        
                        ${prediction.prediction_data.horses.map(horse => {
                            const markClass = horse.mark === '◎' ? 'main' : 'sub';
                            const typeText = horse.mark === '◎' ? '本命' : 
                                            horse.mark === '○' ? '対抗' : 
                                            horse.mark === '▲' ? '単穴' : '連下';
                            const typeColor = horse.mark === '◎' ? '#10b981' : 
                                            horse.mark === '○' ? '#8b5cf6' : 
                                            horse.mark === '▲' ? '#f59e0b' : '#94a3b8';
                            
                            return `
                                <div class="horse-card horse-card-${markClass}">
                                    <div class="horse-header">
                                        <div>
                                            <span class="horse-mark-${markClass}">${horse.mark}</span>
                                            <span class="horse-number">${horse.number}</span>
                                            <span class="horse-name">${horse.name}</span>
                                            <span class="horse-type" style="color: ${typeColor};">${typeText}</span>
                                        </div>
                                        <span class="confidence-score" style="color: ${typeColor};">信頼度 92%</span>
                                    </div>
                                    <div class="ai-factors">
                                        ${horse.factors.map(factor => `
                                            <div class="factor">
                                                <span class="factor-icon">✓</span>
                                                <span>${factor}</span>
                                            </div>
                                        `).join('')}
                                    </div>
                                </div>
                            `;
                        }).join('')}
                    </div>

                    <!-- 投資戦略（3種類） -->
                    <div class="recommendation-section">
                        <h2 class="section-title">
                            <span>💰</span>
                            <span>投資戦略（プレミアム限定3戦略）</span>
                        </h2>
                        
                        <div class="strategy-tabs">
                            ${Object.entries(prediction.prediction_data.strategies).map(([key, strategy], index) => `
                                <div class="strategy-tab ${index === 0 ? 'active' : ''}" 
                                     onclick="showStrategy(this, '${key}', '${prediction.id}')">
                                    ${strategy.title}
                                </div>
                            `).join('')}
                        </div>
                        
                        ${Object.entries(prediction.prediction_data.strategies).map(([key, strategy], index) => {
                            const riskLevel = key === 'safe' ? 'low' : key === 'balance' ? 'medium' : 'high';
                            const riskBars = key === 'safe' ? 1 : key === 'balance' ? 2 : 3;
                            
                            return `
                                <div class="strategy-content" id="strategy-${key}-${prediction.id}" 
                                     style="${index > 0 ? 'display: none;' : ''}">
                                    <div class="strategy-meta">
                                        <span class="hit-rate">的中率: ${strategy.hitRate}%</span>
                                        <span class="return-rate">期待回収率: ${strategy.returnRate}%</span>
                                    </div>
                                    <div class="bet-list">
                                        ${strategy.bets.map(bet => `
                                            <div class="bet-item">
                                                <div>
                                                    <div class="bet-type">${bet.type}</div>
                                                    <div class="bet-horses">${bet.horses}</div>
                                                </div>
                                                <div class="bet-points">${bet.points}</div>
                                            </div>
                                        `).join('')}
                                    </div>
                                    <div class="risk-indicator">
                                        <span style="color: #64748b; font-size: 0.85rem;">リスク:</span>
                                        ${[1,2,3].map(i => `
                                            <div class="risk-bar ${i <= riskBars ? `active risk-${riskLevel}` : ''}"></div>
                                        `).join('')}
                                    </div>
                                    <div class="expected-return">
                                        <div class="return-value">
                                            ${key === 'safe' ? '推定配当 8-15倍' : 
                                              key === 'balance' ? '推定配当 15-35倍' : 
                                              '推定配当 50-150倍'}
                                        </div>
                                        <div style="color: #94a3b8; font-size: 0.9rem;">
                                            ${key === 'safe' ? '安定的中狙い' : 
                                              key === 'balance' ? '中配当狙い' : 
                                              '一発大当たり狙い'}
                                        </div>
                                    </div>
                                </div>
                            `;
                        }).join('')}
                    </div>
                </div>
            `).join('');

        } catch (error) {
            console.error('予想データの読み込みエラー:', error);
            container.innerHTML = `
                <div class="no-data">
                    <div class="no-data-icon">❌</div>
                    <div class="no-data-title">予想データの読み込みに失敗しました</div>
                    <div class="no-data-text">
                        しばらく時間をおいてから再度お試しください。
                    </div>
                </div>
            `;
        }
    }

    // 戦略タブ切り替え
    window.showStrategy = function(tab, strategyType, predictionId) {
        // 同じカード内のタブのみ更新
        const card = tab.closest('.race-card');
        const tabs = card.querySelectorAll('.strategy-tab');
        const contents = card.querySelectorAll('.strategy-content');
        
        // タブの状態更新
        tabs.forEach(t => t.classList.remove('active'));
        tab.classList.add('active');
        
        // コンテンツ表示切り替え
        contents.forEach(content => {
            if (content.id === `strategy-${strategyType}-${predictionId}`) {
                content.style.display = 'block';
            } else {
                content.style.display = 'none';
            }
        });
    }

    // ページ読み込み時に実行
    document.addEventListener('DOMContentLoaded', checkPremiumAccess);
</script>