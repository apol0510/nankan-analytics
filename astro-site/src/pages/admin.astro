---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="管理者パネル | レース結果入力">
    <style>
        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
            background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
            min-height: 100vh;
        }
        .admin-header {
            text-align: center;
            margin-bottom: 40px;
        }
        .admin-title {
            font-size: 2.5rem;
            font-weight: 800;
            background: linear-gradient(135deg, #10b981 0%, #3b82f6 50%, #8b5cf6 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
        }
        .form-section {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 16px;
            padding: 30px;
            margin-bottom: 30px;
            border: 1px solid rgba(148, 163, 184, 0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-label {
            display: block;
            color: var(--body-text-color);
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 0.95rem;
        }
        .form-input {
            width: 100%;
            padding: 12px 16px;
            background: rgba(255, 255, 255, 0.05);
            border: 2px solid rgba(148, 163, 184, 0.2);
            border-radius: 8px;
            color: var(--body-text-color);
            font-size: 0.95rem;
            transition: border-color 0.3s;
        }
        .form-input:focus {
            outline: none;
            border-color: #3b82f6;
        }
        .form-select {
            width: 100%;
            padding: 12px 16px;
            background: rgba(255, 255, 255, 0.05);
            border: 2px solid rgba(148, 163, 184, 0.2);
            border-radius: 8px;
            color: var(--body-text-color);
            font-size: 0.95rem;
            cursor: pointer;
        }
        .race-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        .race-card {
            background: rgba(255, 255, 255, 0.03);
            border-radius: 12px;
            padding: 20px;
            border: 1px solid rgba(148, 163, 184, 0.1);
        }
        .race-header {
            text-align: center;
            font-weight: 700;
            font-size: 1.1rem;
            color: #3b82f6;
            margin-bottom: 15px;
        }
        .toggle-group {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }
        .toggle-btn {
            flex: 1;
            padding: 10px;
            border: 2px solid rgba(148, 163, 184, 0.2);
            border-radius: 6px;
            background: rgba(255, 255, 255, 0.05);
            color: var(--body-text-color);
            cursor: pointer;
            transition: all 0.3s;
            text-align: center;
            font-weight: 600;
        }
        .toggle-btn.active.hit {
            border-color: #10b981;
            background: rgba(16, 185, 129, 0.2);
            color: #10b981;
        }
        .toggle-btn.active.miss {
            border-color: #ef4444;
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
        }
        .payout-group {
            display: none;
        }
        .payout-group.show {
            display: block;
        }
        .submit-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, #10b981 0%, #3b82f6 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: transform 0.3s;
        }
        .submit-btn:hover {
            transform: translateY(-2px);
        }
        .output-section {
            background: rgba(255, 255, 255, 0.03);
            border-radius: 16px;
            padding: 30px;
            border: 1px solid rgba(148, 163, 184, 0.1);
            margin-top: 30px;
        }
        .json-output {
            background: #1e293b;
            border-radius: 8px;
            padding: 20px;
            color: #10b981;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
            white-space: pre-wrap;
            max-height: 400px;
            overflow-y: auto;
            border: 1px solid rgba(16, 185, 129, 0.3);
        }
    </style>

    <div class="admin-container">
        <div class="admin-header">
            <h1 class="admin-title">🛠️ 管理者パネル</h1>
            <p style="color: var(--accent-text-color); font-size: 1.1rem;">
                レース結果を簡単入力 → 自動でサイト更新
            </p>
        </div>

        <form id="raceForm">
            <!-- 基本情報入力 -->
            <div class="form-section">
                <h2 style="color: #3b82f6; font-size: 1.5rem; margin-bottom: 20px;">📅 基本情報</h2>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px;">
                    <div class="form-group">
                        <label class="form-label">日付</label>
                        <input type="text" class="form-input" id="raceDate" placeholder="8/22" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">競馬場</label>
                        <select class="form-select" id="track" required>
                            <option value="">選択してください</option>
                            <option value="大井競馬">大井競馬</option>
                            <option value="川崎競馬">川崎競馬</option>
                            <option value="浦和競馬">浦和競馬</option>
                            <option value="船橋競馬">船橋競馬</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">総レース数</label>
                        <select class="form-select" id="totalRaces" required>
                            <option value="">選択してください</option>
                            <option value="8">8レース</option>
                            <option value="10">10レース</option>
                            <option value="12">12レース</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- 一括ペースト機能 -->
            <div class="form-section">
                <h2 style="color: #10b981; font-size: 1.5rem; margin-bottom: 20px;">📋 一括ペースト（推奨）</h2>
                <p style="color: var(--accent-text-color); margin-bottom: 15px;">
                    既存の結果データをそのまま貼り付けてください。自動で解析して各レースに振り分けます。
                </p>
                
                <div class="form-group">
                    <label class="form-label">レース結果データを貼り付け</label>
                    <textarea 
                        id="bulkPaste" 
                        class="form-input" 
                        placeholder="例:
8/22川崎競馬予想 結果
１Ｒ 11-８馬単　　920円 的中！
２Ｒ ２-１
３Ｒ ７-１馬単　1,330円 的中！
..."
                        style="height: 200px; resize: vertical;"
                    ></textarea>
                </div>
                
                <div style="display: flex; gap: 15px; margin-top: 15px;">
                    <button type="button" id="parseBtn" style="padding: 12px 24px; background: #10b981; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 600;">
                        🔍 データ解析
                    </button>
                    <button type="button" id="clearBtn" style="padding: 12px 24px; background: #6b7280; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 600;">
                        🗑️ クリア
                    </button>
                </div>
            </div>

            <!-- レース結果入力 -->
            <div class="form-section">
                <h2 style="color: #3b82f6; font-size: 1.5rem; margin-bottom: 20px;">🏇 レース結果（手動入力）</h2>
                <p style="color: var(--accent-text-color); margin-bottom: 15px;">
                    一括ペーストが使えない場合は、こちらで手動入力してください。
                </p>
                
                <div id="raceGrid" class="race-grid">
                    <!-- レースカードは動的に生成されます -->
                </div>
            </div>

            <button type="submit" class="submit-btn">
                🚀 JSONデータ生成
            </button>
        </form>

        <!-- 生成されたJSONの表示 -->
        <div class="output-section">
            <h2 style="color: #10b981; font-size: 1.5rem; margin-bottom: 20px;">📋 生成されたJSON</h2>
            <p style="color: var(--accent-text-color); margin-bottom: 15px;">
                下記のJSONをコピーして <code>src/data/raceResults.json</code> の <code>currentResults</code> セクションに貼り付けてください
            </p>
            <pre id="jsonOutput" class="json-output">ここにJSONが生成されます...</pre>
            <button type="button" id="copyBtn" style="margin-top: 15px; padding: 10px 20px; background: #8b5cf6; color: white; border: none; border-radius: 6px; cursor: pointer;">
                📋 JSONをコピー
            </button>
        </div>
    </div>

    <script is:inline>
    // レース数に応じてレースカードを動的生成
    document.getElementById('totalRaces').addEventListener('change', function() {
        const totalRaces = parseInt(this.value);
        const raceGrid = document.getElementById('raceGrid');
        raceGrid.innerHTML = '';

        for (let i = 1; i <= totalRaces; i++) {
            const raceCard = createRaceCard(i);
            raceGrid.appendChild(raceCard);
        }
    });

    function createRaceCard(raceNum) {
        const card = document.createElement('div');
        card.className = 'race-card';
        card.innerHTML = `
            <div class="race-header">${raceNum}R</div>
            
            <div class="toggle-group">
                <button type="button" class="toggle-btn hit-btn" onclick="toggleResult(${raceNum}, 'hit')">
                    ⭕ 的中
                </button>
                <button type="button" class="toggle-btn miss-btn" onclick="toggleResult(${raceNum}, 'miss')">
                    ❌ 不的中
                </button>
            </div>
            
            <div class="payout-group" id="payout-${raceNum}">
                <label class="form-label">配当金額</label>
                <input type="number" class="form-input" id="amount-${raceNum}" placeholder="例: 1500" min="0">
            </div>
            
            <input type="hidden" id="status-${raceNum}" value="">
        `;
        return card;
    }

    function toggleResult(raceNum, status) {
        // ボタンの状態更新
        const card = document.querySelector(`.race-card:nth-child(${raceNum})`);
        const hitBtn = card.querySelector('.hit-btn');
        const missBtn = card.querySelector('.miss-btn');
        const payoutGroup = document.getElementById(`payout-${raceNum}`);
        const statusInput = document.getElementById(`status-${raceNum}`);

        // リセット
        hitBtn.classList.remove('active', 'hit');
        missBtn.classList.remove('active', 'miss');
        
        // 選択された状態に更新
        if (status === 'hit') {
            hitBtn.classList.add('active', 'hit');
            payoutGroup.classList.add('show');
            statusInput.value = 'hit';
        } else {
            missBtn.classList.add('active', 'miss');
            payoutGroup.classList.remove('show');
            statusInput.value = 'miss';
        }
    }

    // フォーム送信処理
    document.getElementById('raceForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const raceDate = document.getElementById('raceDate').value;
        const track = document.getElementById('track').value;
        const totalRaces = parseInt(document.getElementById('totalRaces').value);
        
        // レース結果を収集
        const races = [];
        let hits = 0;
        let totalPayout = 0;

        for (let i = 1; i <= totalRaces; i++) {
            const status = document.getElementById(`status-${i}`).value;
            const amountInput = document.getElementById(`amount-${i}`);
            const payout = status === 'hit' ? (parseInt(amountInput.value) || 0) : 0;
            
            if (status === 'hit') {
                hits++;
                totalPayout += payout;
            }
            
            races.push({
                race: `${i}R`,
                status: status,
                betType: "馬単",
                payout: payout
            });
        }

        const hitRate = ((hits / totalRaces) * 100).toFixed(1) + '%';
        const returnRate = totalPayout > 0 ? ((totalPayout / (totalRaces * 100)) * 100).toFixed(1) + '%' : '0%';

        // JSONオブジェクト生成
        const jsonData = {
            date: raceDate,
            track: track,
            totalRaces: totalRaces,
            hits: hits,
            hitRate: hitRate,
            payout: totalPayout,
            returnRate: returnRate,
            races: races
        };

        // JSON表示
        const jsonOutput = document.getElementById('jsonOutput');
        jsonOutput.textContent = JSON.stringify(jsonData, null, 2);
    });

    // 一括ペースト解析機能
    document.getElementById('parseBtn').addEventListener('click', function() {
        const bulkText = document.getElementById('bulkPaste').value;
        if (!bulkText.trim()) {
            alert('解析するデータを入力してください。');
            return;
        }

        try {
            // 基本情報を抽出
            const lines = bulkText.split('\n').filter(line => line.trim());
            
            // 日付と競馬場を抽出
            const headerMatch = bulkText.match(/(\d+\/\d+)([^\d]*?)競馬/);
            if (headerMatch) {
                document.getElementById('raceDate').value = headerMatch[1];
                const trackName = headerMatch[2].replace(/[^\u4e00-\u9faf]/g, '') + '競馬';
                document.getElementById('track').value = trackName;
            }

            // レース結果を解析
            const raceResults = [];
            lines.forEach(line => {
                const raceMatch = line.match(/([０-９0-9]+)[ＲRr]/);
                if (raceMatch) {
                    const raceNum = convertToHalfWidth(raceMatch[1]);
                    
                    // 的中判定（配当金額があるかどうか - ドット区切りに対応）
                    const payoutMatch = line.match(/(\d[\d,.]*)[円]/);
                    const isHit = payoutMatch || line.includes('的中');
                    
                    const payout = payoutMatch ? parseInt(payoutMatch[1].replace(/[,.]/g, '')) : 0;
                    
                    raceResults.push({
                        race: parseInt(raceNum),
                        status: isHit ? 'hit' : 'miss',
                        payout: payout
                    });
                }
            });

            if (raceResults.length === 0) {
                alert('レース結果を解析できませんでした。形式を確認してください。');
                return;
            }

            // 総レース数を設定
            const maxRace = Math.max(...raceResults.map(r => r.race));
            document.getElementById('totalRaces').value = maxRace.toString();
            
            // レースカード生成
            document.getElementById('totalRaces').dispatchEvent(new Event('change'));
            
            // 解析結果を各フォームに反映
            setTimeout(() => {
                raceResults.forEach(result => {
                    const statusInput = document.getElementById(`status-${result.race}`);
                    const amountInput = document.getElementById(`amount-${result.race}`);
                    
                    if (statusInput && amountInput) {
                        toggleResult(result.race, result.status);
                        if (result.status === 'hit' && result.payout > 0) {
                            amountInput.value = result.payout;
                        }
                    }
                });

                alert(`解析完了！${raceResults.length}レースのデータを読み込みました。`);
            }, 100);

        } catch (error) {
            console.error('解析エラー:', error);
            alert('データの解析中にエラーが発生しました。形式を確認してください。');
        }
    });

    // 全角数字を半角に変換
    function convertToHalfWidth(str) {
        return str.replace(/[０-９]/g, function(match) {
            return String.fromCharCode(match.charCodeAt(0) - 0xFEE0);
        });
    }

    // クリア機能
    document.getElementById('clearBtn').addEventListener('click', function() {
        document.getElementById('bulkPaste').value = '';
        document.getElementById('raceGrid').innerHTML = '';
        document.getElementById('jsonOutput').textContent = 'ここにJSONが生成されます...';
        
        // フォームリセット
        document.getElementById('raceDate').value = '';
        document.getElementById('track').value = '';
        document.getElementById('totalRaces').value = '';
        
        alert('✅ フォームをクリアしました。');
    });

    // コピー機能
    document.getElementById('copyBtn').addEventListener('click', function() {
        const jsonText = document.getElementById('jsonOutput').textContent;
        navigator.clipboard.writeText(jsonText).then(() => {
            this.textContent = '✅ コピー完了!';
            setTimeout(() => {
                this.textContent = '📋 JSONをコピー';
            }, 2000);
        });
    });
    </script>
</BaseLayout>