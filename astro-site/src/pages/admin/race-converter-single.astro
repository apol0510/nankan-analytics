---
const title = "Âçò‰∏Ä„É¨„Éº„ÇπÂ§âÊèõ„ÉÑ„Éº„É´";
---

<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
            color: #e2e8f0;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: rgba(15, 23, 42, 0.8);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .header h1 {
            font-size: 2.5rem;
            background: linear-gradient(135deg, #3b82f6, #10b981);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }

        .header p {
            color: #94a3b8;
            font-size: 1.1rem;
        }

        .main-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .section {
            background: rgba(30, 41, 59, 0.6);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid #334155;
        }

        .section h2 {
            color: #3b82f6;
            margin-bottom: 20px;
            font-size: 1.4rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .input-group {
            margin-bottom: 20px;
        }

        .input-group label {
            display: block;
            color: #cbd5e1;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .input-group input,
        .input-group textarea,
        .input-group select {
            width: 100%;
            background: rgba(15, 23, 42, 0.8);
            border: 2px solid #334155;
            border-radius: 8px;
            padding: 12px;
            color: #e2e8f0;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .input-group input:focus,
        .input-group textarea:focus,
        .input-group select:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .input-group textarea {
            resize: vertical;
            min-height: 120px;
            font-family: 'Courier New', monospace;
        }

        .inline-inputs {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            margin: 5px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #2563eb, #1e40af);
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.25);
        }

        .btn-secondary {
            background: rgba(100, 116, 139, 0.2);
            color: #e2e8f0;
            border: 1px solid #475569;
        }

        .btn-secondary:hover {
            background: rgba(100, 116, 139, 0.3);
        }

        .btn-success {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }

        .btn-success:hover {
            background: linear-gradient(135deg, #059669, #047857);
        }

        .output-section {
            background: rgba(30, 41, 59, 0.6);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid #334155;
            margin-top: 30px;
        }

        .output-tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 1px solid #334155;
        }

        .tab {
            padding: 12px 20px;
            background: none;
            border: none;
            color: #94a3b8;
            cursor: pointer;
            border-bottom: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .tab.active {
            color: #3b82f6;
            border-bottom-color: #3b82f6;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .output-area {
            width: 100%;
            height: 300px;
            background: rgba(15, 23, 42, 0.8);
            border: 2px solid #334155;
            border-radius: 8px;
            padding: 15px;
            color: #10b981;
            font-family: 'Courier New', monospace;
            font-size: 13px;
            resize: vertical;
            white-space: pre-wrap;
        }

        .horse-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .horse-table th,
        .horse-table td {
            border: 1px solid #334155;
            padding: 8px;
            text-align: left;
        }

        .horse-table th {
            background: rgba(59, 130, 246, 0.1);
            color: #3b82f6;
        }

        .marks-display {
            font-family: monospace;
            font-weight: bold;
            color: #f59e0b;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }

        .stat-card {
            background: rgba(59, 130, 246, 0.1);
            border: 1px solid rgba(59, 130, 246, 0.2);
            border-radius: 10px;
            padding: 15px;
            text-align: center;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: bold;
            color: #3b82f6;
        }

        .stat-label {
            color: #94a3b8;
            margin-top: 5px;
            font-size: 0.9rem;
        }

        .error {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid rgba(239, 68, 68, 0.3);
            color: #fca5a5;
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
        }

        .success {
            background: rgba(16, 185, 129, 0.1);
            border: 1px solid rgba(16, 185, 129, 0.3);
            color: #6ee7b7;
            padding: 15px;
            border-radius: 8px;
            margin: 10px 0;
        }

        .mark-legend {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
            margin: 15px 0;
            padding: 15px;
            background: rgba(16, 185, 129, 0.05);
            border-radius: 8px;
        }

        .mark-item {
            text-align: center;
            padding: 8px;
            border-radius: 6px;
            background: rgba(255, 255, 255, 0.05);
        }

        .mark-symbol {
            font-size: 1.5rem;
            font-weight: bold;
            color: #f59e0b;
        }

        @media (max-width: 768px) {
            .main-grid {
                grid-template-columns: 1fr;
            }

            .inline-inputs {
                grid-template-columns: 1fr;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üèá Âçò‰∏Ä„É¨„Éº„ÇπÂ§âÊèõ„ÉÑ„Éº„É´</h1>
            <p>Âçò‰∏Ä„É¨„Éº„Çπ„ÅÆ‰∫àÊÉ≥„Éá„Éº„Çø„ÇíË§áÊï∞„ÅÆÂΩ¢Âºè„Å´Â§âÊèõ„ÉªÁÆ°ÁêÜ„Åó„Åæ„Åô</p>
        </div>

        <div class="main-grid">
            <!-- ÂÖ•Âäõ„Çª„ÇØ„Ç∑„Éß„É≥ -->
            <div class="section">
                <h2>üìù „É¨„Éº„ÇπÊÉÖÂ†±ÂÖ•Âäõ</h2>

                <div class="input-group">
                    <label for="raceInfo">„É¨„Éº„ÇπÊÉÖÂ†±</label>
                    <div class="inline-inputs">
                        <input type="text" id="raceDate" placeholder="Êó•‰ªò (9/17)">
                        <input type="text" id="raceTrack" placeholder="Á´∂È¶¨Â†¥ (Â§ß‰∫ï)">
                    </div>
                </div>

                <div class="input-group">
                    <div class="inline-inputs">
                        <input type="text" id="raceNumber" placeholder="„É¨„Éº„ÇπÁï™Âè∑ (01R)">
                        <input type="text" id="raceDistance" placeholder="Ë∑ùÈõ¢ (1400m)">
                    </div>
                </div>

                <div class="input-group">
                    <div class="inline-inputs">
                        <input type="text" id="raceHorses" placeholder="È†≠Êï∞ (14È†≠)">
                        <input type="text" id="raceTime" placeholder="Áô∫Ëµ∞ÊôÇÂàª (14:45)">
                    </div>
                </div>

                <div class="input-group">
                    <label for="raceName">„É¨„Éº„ÇπÂêç</label>
                    <input type="text" id="raceName" placeholder="2Ê≠≥Êñ∞È¶¨">
                </div>

                <div class="input-group">
                    <label for="horseData">È¶¨„Éá„Éº„Çø</label>
                    <textarea id="horseData" placeholder="1„ÄÄ„ÄÄ„Ç®„É≥„Éê„Éº„ÇØ&#10;2„ÄÄ‚ñ≥„ÄÄ„É¨„Éá„Ç£„É¥„Ç£„ÇØ„Éà„É™„Ç¢&#10;3„ÄÄ„ÄÄ„Çπ„Ç´„Ç§„É¨„Éá„Ç£&#10;..."></textarea>
                </div>

                <div class="mark-legend">
                    <div class="mark-item">
                        <div class="mark-symbol">‚óé</div>
                        <div>Êú¨ÂëΩ</div>
                    </div>
                    <div class="mark-item">
                        <div class="mark-symbol">‚óã</div>
                        <div>ÂØæÊäó</div>
                    </div>
                    <div class="mark-item">
                        <div class="mark-symbol">‚ñ≤</div>
                        <div>ÂçòÁ©¥</div>
                    </div>
                    <div class="mark-item">
                        <div class="mark-symbol">‚ñ≥</div>
                        <div>ÈÄ£‰∏ã</div>
                    </div>
                </div>

                <div class="button-group">
                    <button class="btn btn-primary" onclick="parseRaceData()">
                        üîÑ „Éá„Éº„ÇøËß£Êûê
                    </button>
                    <button class="btn btn-secondary" onclick="clearInput()">
                        üóëÔ∏è „ÇØ„É™„Ç¢
                    </button>
                </div>
            </div>

            <!-- „Éó„É¨„Éì„É•„Éº„Çª„ÇØ„Ç∑„Éß„É≥ -->
            <div class="section">
                <h2>üëÅÔ∏è „Éá„Éº„Çø„Éó„É¨„Éì„É•„Éº</h2>

                <div id="previewContent">
                    <p style="color: #94a3b8; text-align: center; padding: 40px;">
                        „Éá„Éº„Çø„ÇíÂÖ•Âäõ„Åó„Å¶„Äå„Éá„Éº„ÇøËß£Êûê„Äç„Éú„Çø„É≥„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ
                    </p>
                </div>
            </div>
        </div>

        <!-- Áµ±Ë®àÊÉÖÂ†± -->
        <div class="stats-grid" id="statsContainer" style="display: none;">
            <div class="stat-card">
                <div class="stat-number" id="totalHorses">0</div>
                <div class="stat-label">Á∑èÈ†≠Êï∞</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalMarks">0</div>
                <div class="stat-label">Á∑èÂç∞Êï∞</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="honmeiCount">0</div>
                <div class="stat-label">Êú¨ÂëΩ(‚óé)</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="taikouCount">0</div>
                <div class="stat-label">ÂØæÊäó(‚óã)</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="tananaCount">0</div>
                <div class="stat-label">ÂçòÁ©¥(‚ñ≤)</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="renkagaCount">0</div>
                <div class="stat-label">ÈÄ£‰∏ã(‚ñ≥)</div>
            </div>
        </div>

        <!-- Âá∫Âäõ„Çª„ÇØ„Ç∑„Éß„É≥ -->
        <div class="output-section">
            <h2>üìä Â§âÊèõÁµêÊûú</h2>

            <div class="output-tabs">
                <button class="tab active" onclick="switchTab('admin')">AdminÂΩ¢Âºè</button>
                <button class="tab" onclick="switchTab('json')">JSONÂΩ¢Âºè</button>
                <button class="tab" onclick="switchTab('csv')">CSVÂΩ¢Âºè</button>
                <button class="tab" onclick="switchTab('text')">„ÉÜ„Ç≠„Çπ„ÉàÂΩ¢Âºè</button>
            </div>

            <div id="admin-content" class="tab-content active">
                <textarea id="adminOutput" class="output-area" readonly placeholder="AdminÁÆ°ÁêÜÁîªÈù¢Áî®„ÅÆÂΩ¢Âºè„ÅßÂá∫Âäõ„Åï„Çå„Åæ„Åô..."></textarea>
                <button class="btn btn-success" onclick="copyOutput('adminOutput')">üìã AdminÂΩ¢Âºè„Çí„Ç≥„Éî„Éº</button>
            </div>

            <div id="json-content" class="tab-content">
                <textarea id="jsonOutput" class="output-area" readonly placeholder="JSONÂΩ¢Âºè„ÅßÂá∫Âäõ„Åï„Çå„Åæ„Åô..."></textarea>
                <button class="btn btn-success" onclick="copyOutput('jsonOutput')">üìã JSONÂΩ¢Âºè„Çí„Ç≥„Éî„Éº</button>
            </div>

            <div id="csv-content" class="tab-content">
                <textarea id="csvOutput" class="output-area" readonly placeholder="CSVÂΩ¢Âºè„ÅßÂá∫Âäõ„Åï„Çå„Åæ„Åô..."></textarea>
                <button class="btn btn-success" onclick="copyOutput('csvOutput')">üìã CSVÂΩ¢Âºè„Çí„Ç≥„Éî„Éº</button>
            </div>

            <div id="text-content" class="tab-content">
                <textarea id="textOutput" class="output-area" readonly placeholder="„Éó„É¨„Éº„É≥„ÉÜ„Ç≠„Çπ„ÉàÂΩ¢Âºè„ÅßÂá∫Âäõ„Åï„Çå„Åæ„Åô..."></textarea>
                <button class="btn btn-success" onclick="copyOutput('textOutput')">üìã „ÉÜ„Ç≠„Çπ„ÉàÂΩ¢Âºè„Çí„Ç≥„Éî„Éº</button>
            </div>
        </div>
    </div>

    <script>
        let raceData = {
            horses: [],
            raceInfo: {},
            markStats: {}
        };

        function parseRaceData() {
            try {
                const horseDataInput = document.getElementById('horseData').value.trim();
                if (!horseDataInput) {
                    showError('È¶¨„Éá„Éº„Çø„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
                    return;
                }

                // „É¨„Éº„ÇπÊÉÖÂ†±„ÇíÂèñÂæó
                raceData.raceInfo = {
                    date: document.getElementById('raceDate').value || '9/17',
                    track: document.getElementById('raceTrack').value || 'Â§ß‰∫ï',
                    number: document.getElementById('raceNumber').value || '01R',
                    distance: document.getElementById('raceDistance').value || '1400m',
                    horses: document.getElementById('raceHorses').value || '14È†≠',
                    time: document.getElementById('raceTime').value || '14:45',
                    name: document.getElementById('raceName').value || '2Ê≠≥Êñ∞È¶¨'
                };

                // È¶¨„Éá„Éº„Çø„ÇíËß£Êûê
                raceData.horses = parseHorseData(horseDataInput);

                // Áµ±Ë®à„ÇíË®àÁÆó
                calculateStats();

                // „Éó„É¨„Éì„É•„Éº„ÇíÊõ¥Êñ∞
                updatePreview();

                // Âá∫Âäõ„ÇíÁîüÊàê
                generateOutputs();

                showSuccess('„Éá„Éº„Çø„ÅÆËß£Êûê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ');

            } catch (error) {
                showError('„Éá„Éº„ÇøËß£Êûê‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ' + error.message);
                console.error('Error:', error);
            }
        }

        function parseHorseData(input) {
            const horses = [];
            const lines = input.split('\n').filter(line => line.trim());

            for (const line of lines) {
                const match = line.match(/^(\d+)\s*([‚óé‚óã‚ñ≤‚ñ≥]*)\s*(.+)$/);
                if (match) {
                    const [, number, marks, name] = match;
                    horses.push({
                        number: parseInt(number),
                        marks: marks || '',
                        name: name.trim()
                    });
                }
            }

            return horses;
        }

        function calculateStats() {
            const stats = {
                totalHorses: raceData.horses.length,
                totalMarks: 0,
                honmeiCount: 0,
                taikouCount: 0,
                tananaCount: 0,
                renkagaCount: 0
            };

            for (const horse of raceData.horses) {
                stats.totalMarks += horse.marks.length;
                stats.honmeiCount += (horse.marks.match(/‚óé/g) || []).length;
                stats.taikouCount += (horse.marks.match(/‚óã/g) || []).length;
                stats.tananaCount += (horse.marks.match(/‚ñ≤/g) || []).length;
                stats.renkagaCount += (horse.marks.match(/‚ñ≥/g) || []).length;
            }

            raceData.markStats = stats;
            updateStatsDisplay();
        }

        function updateStatsDisplay() {
            const stats = raceData.markStats;
            document.getElementById('totalHorses').textContent = stats.totalHorses;
            document.getElementById('totalMarks').textContent = stats.totalMarks;
            document.getElementById('honmeiCount').textContent = stats.honmeiCount;
            document.getElementById('taikouCount').textContent = stats.taikouCount;
            document.getElementById('tananaCount').textContent = stats.tananaCount;
            document.getElementById('renkagaCount').textContent = stats.renkagaCount;
            document.getElementById('statsContainer').style.display = 'grid';
        }

        function updatePreview() {
            const content = document.getElementById('previewContent');
            let html = `
                <div style="background: rgba(59, 130, 246, 0.1); padding: 15px; border-radius: 8px; margin-bottom: 15px;">
                    <h3 style="color: #3b82f6; margin-bottom: 10px;">${raceData.raceInfo.date} ${raceData.raceInfo.track}${raceData.raceInfo.number}</h3>
                    <p style="color: #cbd5e1;">${raceData.raceInfo.distance}Ôºà${raceData.raceInfo.horses}ÔºâÁô∫Ëµ∞ÊôÇÂàª${raceData.raceInfo.time} ${raceData.raceInfo.name}</p>
                </div>
                <table class="horse-table">
                    <thead>
                        <tr>
                            <th>È¶¨Áï™</th>
                            <th>Âç∞</th>
                            <th>È¶¨Âêç</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            for (const horse of raceData.horses) {
                html += `
                    <tr>
                        <td>${horse.number}</td>
                        <td class="marks-display">${horse.marks || '-'}</td>
                        <td>${horse.name}</td>
                    </tr>
                `;
            }

            html += '</tbody></table>';
            content.innerHTML = html;
        }

        function generateOutputs() {
            generateAdminOutput();
            generateJsonOutput();
            generateCsvOutput();
            generateTextOutput();
        }

        function generateAdminOutput() {
            const info = raceData.raceInfo;
            let output = `${info.date}${info.track}${info.number} ${info.distance}Ôºà${info.horses}ÔºâÁô∫Ëµ∞ÊôÇÂàª${info.time} ${info.name}\n`;

            for (const horse of raceData.horses) {
                output += `${horse.number}Áï™ ${horse.marks} ${horse.name}\n`;
            }

            document.getElementById('adminOutput').value = output;
        }

        function generateJsonOutput() {
            const jsonData = {
                raceInfo: raceData.raceInfo,
                horses: raceData.horses,
                statistics: raceData.markStats,
                generatedAt: new Date().toISOString()
            };

            document.getElementById('jsonOutput').value = JSON.stringify(jsonData, null, 2);
        }

        function generateCsvOutput() {
            let csv = 'È¶¨Áï™,Âç∞,È¶¨Âêç\n';
            for (const horse of raceData.horses) {
                csv += `${horse.number},"${horse.marks}","${horse.name}"\n`;
            }
            document.getElementById('csvOutput').value = csv;
        }

        function generateTextOutput() {
            const info = raceData.raceInfo;
            let output = `„Äê${info.date} ${info.track}${info.number}„Äë\n`;
            output += `${info.distance}Ôºà${info.horses}ÔºâÁô∫Ëµ∞ÊôÇÂàª${info.time} ${info.name}\n\n`;

            for (const horse of raceData.horses) {
                output += `${horse.number}\t${horse.marks}\t${horse.name}\n`;
            }

            document.getElementById('textOutput').value = output;
        }

        function switchTab(tabName) {
            // „Åô„Åπ„Å¶„ÅÆ„Çø„Éñ„Å®„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÈùû„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å´
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));

            // ÈÅ∏Êäû„Åï„Çå„Åü„Çø„Éñ„Å®„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çí„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å´
            event.target.classList.add('active');
            document.getElementById(tabName + '-content').classList.add('active');
        }

        function copyOutput(outputId) {
            const output = document.getElementById(outputId);
            output.select();
            document.execCommand('copy');
            showSuccess('ÁµêÊûú„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„ÅüÔºÅ');
        }

        function clearInput() {
            document.getElementById('horseData').value = '';
            document.getElementById('raceDate').value = '';
            document.getElementById('raceTrack').value = '';
            document.getElementById('raceNumber').value = '';
            document.getElementById('raceDistance').value = '';
            document.getElementById('raceHorses').value = '';
            document.getElementById('raceTime').value = '';
            document.getElementById('raceName').value = '';

            document.getElementById('previewContent').innerHTML = '<p style="color: #94a3b8; text-align: center; padding: 40px;">„Éá„Éº„Çø„ÇíÂÖ•Âäõ„Åó„Å¶„Äå„Éá„Éº„ÇøËß£Êûê„Äç„Éú„Çø„É≥„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ</p>';
            document.getElementById('statsContainer').style.display = 'none';

            ['adminOutput', 'jsonOutput', 'csvOutput', 'textOutput'].forEach(id => {
                document.getElementById(id).value = '';
            });

            clearMessages();
        }

        function showError(message) {
            clearMessages();
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error';
            errorDiv.textContent = '‚ùå ' + message;
            document.querySelector('.container').appendChild(errorDiv);
        }

        function showSuccess(message) {
            clearMessages();
            const successDiv = document.createElement('div');
            successDiv.className = 'success';
            successDiv.textContent = '‚úÖ ' + message;
            document.querySelector('.container').appendChild(successDiv);
        }

        function clearMessages() {
            document.querySelectorAll('.error, .success').forEach(el => el.remove());
        }

        // „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„ÅÆÂàùÊúüÂåñ
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Âçò‰∏Ä„É¨„Éº„ÇπÂ§âÊèõ„ÉÑ„Éº„É´Ë™≠„ÅøËæº„ÅøÂÆå‰∫Ü');
        });
    </script>
</body>
</html>