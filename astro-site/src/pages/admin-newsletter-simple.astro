---
// „Ç∑„É≥„Éó„É´„Å™„É°„É´„Éû„Ç¨ÈÖç‰ø°ÁÆ°ÁêÜÁîªÈù¢
import BaseLayout from '../layouts/BaseLayout.astro';

// „Çµ„Éº„Éê„Éº„Çµ„Ç§„Éâ„ÅßÈ°ßÂÆ¢Áµ±Ë®à„ÇíÂèñÂæó
let customerStats = {
    total: 0,
    free: 0,
    standard: 0,
    premium: 0,
    test: 0
};

let debugInfo = {
    hasApiKey: false,
    hasBaseId: false,
    apiCallSuccess: false,
    recordCount: 0,
    errorMessage: '',
    sampleRecords: [],
    uniquePlanValues: new Set(),
    planCounts: {}
};

try {
    const AIRTABLE_API_KEY = import.meta.env.AIRTABLE_API_KEY;
    const AIRTABLE_BASE_ID = import.meta.env.AIRTABLE_BASE_ID;

    debugInfo.hasApiKey = !!AIRTABLE_API_KEY;
    debugInfo.hasBaseId = !!AIRTABLE_BASE_ID;

    if (AIRTABLE_API_KEY && AIRTABLE_BASE_ID) {
        // üîÑ „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÂØæÂøú: ÂÖ®„É¨„Ç≥„Éº„Éâ„ÇíÂèñÂæó
        let allRecords = [];
        let offset = null;
        let pageCount = 0;

        do {
            pageCount++;
            let url = `https://api.airtable.com/v0/${AIRTABLE_BASE_ID}/Customers?pageSize=100`;
            if (offset) {
                url += `&offset=${offset}`;
            }

            const response = await fetch(url, {
                headers: {
                    'Authorization': `Bearer ${AIRTABLE_API_KEY}`,
                    'Content-Type': 'application/json'
                }
            });

            debugInfo.apiCallSuccess = response.ok;

            if (response.ok) {
                const data = await response.json();
                allRecords.push(...data.records);
                offset = data.offset; // Ê¨°„ÅÆ„Éö„Éº„Ç∏„ÅÆ„Ç™„Éï„Çª„ÉÉ„Éà

                console.log(`üìÑ „Éö„Éº„Ç∏ ${pageCount}: ${data.records.length}‰ª∂ÂèñÂæó, Á¥ØË®à: ${allRecords.length}‰ª∂`);
            } else {
                debugInfo.errorMessage = `API Error: ${response.status} ${response.statusText}`;
                break;
            }
        } while (offset); // offset„ÅåÂ≠òÂú®„Åô„ÇãÈôê„ÇäÁ∂ôÁ∂ö

        debugInfo.recordCount = allRecords.length;
        console.log(`‚úÖ ÂÖ®„Éá„Éº„ÇøÂèñÂæóÂÆå‰∫Ü: ÂêàË®à ${allRecords.length}‰ª∂ (${pageCount}„Éö„Éº„Ç∏)`);

        if (allRecords.length > 0) {

            allRecords.forEach((record, index) => {
                customerStats.total++;

                // „Éï„Ç£„Éº„É´„ÉâÂêç„ÅÆÁ¢∫Ë™çÔºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
                const fields = record.fields;

                // ÂÖ®„Å¶„ÅÆ„É¨„Ç≥„Éº„Éâ„ÇíË©≥Á¥∞ÂàÜÊûêÔºàÊúÄÂàù„ÅÆ10‰ª∂Ôºâ
                const planField = fields['„Éó„É©„É≥'] || fields['Plan'] || fields['plan'] || fields['PLAN'] ||
                                 fields['Subscription'] || fields['‰ºöÂì°Á®ÆÂà•'];

                if (debugInfo.sampleRecords.length < 10) {
                    debugInfo.sampleRecords.push({
                        index: index + 1,
                        fields: Object.keys(fields),
                        planField: planField,
                        email: fields['Email'] || fields['email'] || 'unknown'
                    });
                }

                // ÂèØËÉΩ„Å™„Éó„É©„É≥„Éï„Ç£„Éº„É´„ÉâÂêç„ÇíÁ¢∫Ë™çÔºà„Éá„Éï„Ç©„É´„ÉàÂÄ§„ÅØË®≠ÂÆö„Åó„Å™„ÅÑÔºâ
                const planValue = fields['„Éó„É©„É≥'] || fields['Plan'] || fields['plan'] || fields['PLAN'] ||
                                 fields['Subscription'] || fields['‰ºöÂì°Á®ÆÂà•'];

                // ÂÖ®„Å¶„ÅÆ„Éó„É©„É≥ÂÄ§„ÇíÂèéÈõÜ
                debugInfo.uniquePlanValues.add(planValue);
                if (debugInfo.planCounts[planValue]) {
                    debugInfo.planCounts[planValue]++;
                } else {
                    debugInfo.planCounts[planValue] = 1;
                }

                // null/undefined/Á©∫ÊñáÂ≠ó„ÅÆÂ†¥Âêà„ÅØ‰∫ãÂâç„Å´FreeÂà§ÂÆö
                if (!planValue || planValue === null || planValue === undefined || planValue === '') {
                    customerStats.free++;
                    console.log(`Á©∫„ÅÆ„Éó„É©„É≥ÂÄ§: "${planValue}" -> Free`);
                    return; // forEach„Åß„ÅØcontinue„ÅÆ‰ª£„Çè„Çä„Å´return„Çí‰ΩøÁî®
                }

                const plan = String(planValue).toLowerCase().trim();

                // Airtable„ÅÆÂÆüÈöõ„ÅÆ„Éó„É©„É≥ÂÄ§„Å´Âü∫„Å•„ÅèÊ≠£Á¢∫„Å™Âà§ÂÆö„É≠„Ç∏„ÉÉ„ÇØ
                if (plan === 'standard' || plan === '„Çπ„Çø„É≥„ÉÄ„Éº„Éâ') {
                    customerStats.standard++;
                    console.log(`StandardÂà§ÂÆö: "${planValue}"`);
                } else if (plan === 'premium' || plan === '„Éó„É¨„Éü„Ç¢„É†') {
                    customerStats.premium++;
                    console.log(`PremiumÂà§ÂÆö: "${planValue}"`);
                } else if (plan === 'test' || plan === '„ÉÜ„Çπ„Éà') {
                    customerStats.test++;
                    console.log(`TestÂà§ÂÆö: "${planValue}"`);
                } else if (plan === 'free' || plan === '„Éï„É™„Éº') {
                    customerStats.free++;
                    console.log(`FreeÂà§ÂÆö: "${planValue}"`);
                } else {
                    // Êú™ÂàÜÈ°û„ÅÆÂ†¥Âêà„ÇÇË©≥Á¥∞„É≠„Ç∞„Å´Ë®òÈå≤„Åó„Å¶„Åã„ÇâFree„Å´ÂàÜÈ°û
                    console.log(`Êú™ÂàÜÈ°û„Éó„É©„É≥ÂÄ§: "${planValue}" (type: ${typeof planValue}) -> FreeÊâ±„ÅÑ`);
                    customerStats.free++;
                }
            });
        }
    } else {
        debugInfo.errorMessage = 'Missing API credentials';
    }
} catch (error) {
    debugInfo.errorMessage = error.message;
}
---

<BaseLayout title="„É°„É´„Éû„Ç¨ÈÖç‰ø° - NANKAN„Ç¢„Éä„É™„ÉÜ„Ç£„ÇØ„Çπ">
    <style>
        .newsletter-admin {
            min-height: 100vh;
            background: #f8fafc;
            padding: 20px;
        }
        
        .admin-header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .admin-header h1 {
            font-size: 1.8rem;
            color: #1f2937;
            margin-bottom: 5px;
        }
        
        .admin-container {
            max-width: 900px;
            margin: 0 auto;
        }
        
        .card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        .card h2 {
            color: #1f2937;
            font-size: 1.3rem;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #e5e7eb;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            color: #374151;
            font-weight: 500;
            margin-bottom: 8px;
        }
        
        .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.2s;
        }
        
        .form-control:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        textarea.form-control {
            min-height: 200px;
            resize: vertical;
            font-family: inherit;
        }
        
        select.form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            background: white;
            font-size: 16px;
            margin-top: 5px;
        }

        select.form-control:focus {
            border-color: #3b82f6;
            outline: none;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .action-buttons {
            display: flex;
            gap: 15px;
            margin-top: 25px;
        }
        
        .btn {
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
            border: none;
            font-size: 15px;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            color: white;
            border: 2px solid #3b82f6;
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);
            transform: translateY(-1px);
            border-color: #1d4ed8;
            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.6);
        }
        
        .btn-secondary {
            background: #6b7280;
            color: white;
            border: 2px solid #9ca3af;
            box-shadow: 0 4px 15px rgba(107, 114, 128, 0.4);
        }
        
        .btn-secondary:hover {
            background: #4b5563;
            transform: translateY(-1px);
            border-color: #6b7280;
            box-shadow: 0 8px 25px rgba(107, 114, 128, 0.6);
        }
        
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .status-message {
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
            display: none;
        }
        
        .status-message.success {
            background: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
            display: block;
        }
        
        .status-message.error {
            background: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
            display: block;
        }
        
        .status-message.info {
            background: #dbeafe;
            color: #1e40af;
            border: 1px solid #3b82f6;
            display: block;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .stat-box {
            background: #f9fafb;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }
        
        .stat-label {
            font-size: 0.85rem;
            color: #6b7280;
            margin-bottom: 5px;
        }
        
        .stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: #1f2937;
        }
        
        .schedule-option {
            display: flex;
            gap: 15px;
            align-items: center;
            margin-top: 10px;
        }
        
        .schedule-option input[type="datetime-local"] {
            flex: 1;
        }
        
        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 15px;
        }
        
        .checkbox-group input[type="checkbox"] {
            width: 18px;
            height: 18px;
            cursor: pointer;
        }
        
        
        /* HTML/„ÉÜ„Ç≠„Çπ„ÉàÂàá„ÇäÊõø„Åà„Çø„Éñ */
        .content-type-tabs {
            display: flex;
            gap: 5px;
            margin-bottom: 15px;
        }
        
        .content-tab {
            padding: 8px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            background: white;
            cursor: pointer;
            transition: all 0.2s;
            font-size: 14px;
        }
        
        .content-tab:hover {
            border-color: #3b82f6;
            background: #eff6ff;
        }
        
        .content-tab.active {
            border-color: #3b82f6;
            background: #3b82f6;
            color: white;
        }
        
        /* HTML„Ç®„Éá„Ç£„Çø„Éº */
        .html-toolbar {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
            padding: 10px;
            background: #f9fafb;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }
        
        .html-btn {
            padding: 5px 10px;
            border: 1px solid #d1d5db;
            border-radius: 4px;
            background: white;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.2s;
        }
        
        .html-btn:hover {
            background: #3b82f6;
            color: white;
        }
        
        .html-textarea {
            font-family: 'Courier New', monospace;
            font-size: 14px;
            line-height: 1.6;
            min-height: 250px;
            white-space: pre-wrap;
            overflow-wrap: break-word;
            word-wrap: break-word;
            tab-size: 4;
        }
        
        /* ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ */
        .image-upload-area {
            margin-top: 10px;
        }
        
        .upload-zone {
            border: 2px dashed #d1d5db;
            border-radius: 8px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .upload-zone:hover {
            border-color: #3b82f6;
            background: #eff6ff;
        }
        
        .upload-icon {
            font-size: 2rem;
            margin-bottom: 10px;
        }
        
        .upload-text strong {
            display: block;
            margin-bottom: 5px;
            color: #374151;
        }
        
        .upload-text small {
            color: #6b7280;
            font-size: 0.85rem;
        }
        
        .image-preview-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 10px;
            margin-top: 15px;
        }
        
        .image-preview-item {
            position: relative;
            border-radius: 8px;
            overflow: hidden;
            border: 1px solid #e5e7eb;
        }
        
        .image-preview-item img {
            width: 100%;
            height: 80px;
            object-fit: cover;
        }
        
        .image-remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #ef4444;
            color: white;
            border: none;
            cursor: pointer;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        /* ÈÖç‰ø°ÂÅúÊ≠¢ÁÆ°ÁêÜ */
        .unsubscribe-section {
            padding: 0;
        }
        
        .unsubscribe-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .unsubscribe-stats {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
        }
    </style>
    
    <div class="newsletter-admin">
        <div class="admin-header">
            <h1>üìß „É°„É´„Éû„Ç¨ÈÖç‰ø°„Ç∑„Çπ„ÉÜ„É†</h1>
            <p style="color: #6b7280; margin: 0;">„Ç∑„É≥„Éó„É´ÔºÜÁ¢∫ÂÆü„Å™ÈÖç‰ø°ÁÆ°ÁêÜ</p>
        </div>
        
        <div class="admin-container">
            <!-- ÈÖç‰ø°Áµ±Ë®à -->
            <div class="card">
                <h2>üìä ÈÖç‰ø°Áµ±Ë®à</h2>
                <div class="stats-grid">
                    <div class="stat-box">
                        <div class="stat-label">Á∑èÈ°ßÂÆ¢Êï∞</div>
                        <div class="stat-value" id="totalCustomers">{customerStats.total}</div>
                    </div>
                    <div class="stat-box">
                        <div class="stat-label">Free‰ºöÂì°</div>
                        <div class="stat-value" id="freeCount">{customerStats.free}</div>
                    </div>
                    <div class="stat-box">
                        <div class="stat-label">Standard‰ºöÂì°</div>
                        <div class="stat-value" id="standardCount">{customerStats.standard}</div>
                    </div>
                    <div class="stat-box">
                        <div class="stat-label">Premium‰ºöÂì°</div>
                        <div class="stat-value" id="premiumCount">{customerStats.premium}</div>
                    </div>
                    <div class="stat-box">
                        <div class="stat-label">üß™ „ÉÜ„Çπ„Éà‰ºöÂì°</div>
                        <div class="stat-value" id="testCount">{customerStats.test}</div>
                    </div>
                </div>

                <!-- ÈÖç‰ø°Á¢∫Ë™ç„Éú„Çø„É≥ -->
                <div style="margin-top: 15px; text-align: center;">
                    <button class="btn btn-secondary" id="checkLastDelivery" style="background: #059669; color: white;">
                        üìß ÊúÄÊñ∞ÈÖç‰ø°Êï∞„ÇíÁ¢∫Ë™ç
                    </button>
                </div>

                <!-- ÈÖç‰ø°ÁµêÊûúË°®Á§∫„Ç®„É™„Ç¢ -->
                <div id="deliveryResult" style="margin-top: 15px; padding: 15px; background: #f0fdf4; border-radius: 8px; border-left: 4px solid #10b981; display: none;">
                    <h4 style="color: #065f46; margin: 0 0 10px 0;">üìä ÈÖç‰ø°ÁµêÊûú</h4>
                    <div id="deliveryDetails" style="font-family: monospace; font-size: 14px; color: #1f2937;">
                        Á¢∫Ë™ç‰∏≠...
                    </div>
                </div>
            </div>

            <!-- „É°„Éº„É´‰ΩúÊàê„Éï„Ç©„Éº„É† -->
            <div class="card">
                <h2>‚úâÔ∏è „É°„Éº„É´‰ΩúÊàê</h2>

                <div class="form-group">
                    <label>ÈÖç‰ø°ÂØæË±°</label>
                    <select id="targetPlan" class="form-control">
                        <option value="all">ÂÖ®Âì° (${customerStats.total}Âêç)</option>
                        <option value="free">Free‰ºöÂì° (${customerStats.free}Âêç)</option>
                        <option value="standard">Standard‰ºöÂì° (${customerStats.standard}Âêç)</option>
                        <option value="premium">Premium‰ºöÂì° (${customerStats.premium}Âêç)</option>
                        <option value="test">üß™ „ÉÜ„Çπ„ÉàÁî®</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>‰ª∂Âêç</label>
                    <input type="text" class="form-control" id="subject"
                           placeholder="‰æãÔºö„ÄêÂçóÈñ¢Á´∂È¶¨„ÄëÊú¨Êó•„ÅÆ‰∫àÊÉ≥ÈÖç‰ø°">
                </div>

                <div class="form-group">
                    <label>Êú¨ÊñáÂΩ¢Âºè</label>
                    <div class="content-type-tabs">
                        <button type="button" class="content-tab active" data-type="text">üìù „ÉÜ„Ç≠„Çπ„Éà</button>
                        <button type="button" class="content-tab" data-type="html">üåê HTML</button>
                        <button type="button" class="content-tab" data-type="template">üé® „ÉÜ„É≥„Éó„É¨„Éº„Éà</button>
                    </div>
                </div>

                <div class="form-group">
                    <label id="contentLabel">Êú¨Êñá</label>
                    <div id="textEditor">
                        <textarea class="form-control" id="content"
                                  placeholder="„É°„Éº„É´Êú¨Êñá„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."></textarea>
                    </div>
                    <div id="htmlEditor" style="display: none;">
                        <div class="html-toolbar">
                            <button type="button" class="html-btn" data-tag="b">Â§™Â≠ó</button>
                            <button type="button" class="html-btn" data-tag="i">Êñú‰Ωì</button>
                            <button type="button" class="html-btn" data-tag="u">‰∏ãÁ∑ö</button>
                            <button type="button" class="html-btn" onclick="insertLink()">üîó „É™„É≥„ÇØ</button>
                            <button type="button" class="html-btn" onclick="insertImage()">üñºÔ∏è ÁîªÂÉè</button>
                            <button type="button" class="html-btn" onclick="formatHTML()" style="margin-left: 10px; background: #10b981; color: white;">üìù Êï¥ÂΩ¢</button>
                        </div>
                        <textarea class="form-control html-textarea" id="htmlContent"
                                  placeholder="HTML„Ç≥„Éº„Éâ„ÇíÂÖ•Âäõ„Åô„Çã„Åã„ÄÅ‰∏ä„ÅÆ„Éú„Çø„É≥„ÅßHTML„Çø„Ç∞„ÇíËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."></textarea>
                        <div class="html-preview">
                            <button type="button" id="previewToggle" class="btn btn-secondary">üëÅÔ∏è „Éó„É¨„Éì„É•„Éº</button>
                            <div id="previewPane" style="display: none; margin-top: 10px; padding: 15px; border: 1px solid #d1d5db; border-radius: 8px; background: #f9fafb;">
                                <div id="previewContent"></div>
                            </div>
                        </div>
                    </div>

                    <!-- „ÉÜ„É≥„Éó„É¨„Éº„Éà„Ç®„Éá„Ç£„Çø„Éº -->
                    <div id="templateEditor" style="display: none;">
                        <div class="template-selector" style="margin-bottom: 15px;">
                            <label>üìã „ÉÜ„É≥„Éó„É¨„Éº„ÉàÈÅ∏Êäû</label>
                            <select class="form-control" id="templateSelect" style="margin-top: 8px;">
                                <option value="">„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÈÅ∏Êäû...</option>
                                <option value="newsletter">üìß Âü∫Êú¨„Éã„É•„Éº„Çπ„É¨„Çø„Éº</option>
                                <option value="prediction">üéØ ‰∫àÊÉ≥ÈÖç‰ø°„ÉÜ„É≥„Éó„É¨„Éº„Éà</option>
                                <option value="promotion">üéâ „Éó„É≠„É¢„Éº„Ç∑„Éß„É≥</option>
                                <option value="stripePromo">üéÅ Stripe„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ</option>
                                <option value="welcome">üëã „Ç¶„Çß„É´„Ç´„É†„É°„Éº„É´</option>
                                <option value="announcement">üì¢ „ÅäÁü•„Çâ„Åõ</option>
                            </select>
                        </div>

                        <div id="templateDescription" style="display: none; background: #f0f9ff; padding: 15px; border-radius: 8px; margin-bottom: 15px; border: 1px solid #0ea5e9;">
                            <h4 style="margin: 0 0 8px 0; color: #0c4a6e;" id="templateName"></h4>
                            <p style="margin: 0; color: #0369a1; font-size: 14px;" id="templateDesc"></p>
                        </div>

                        <div class="template-content" style="margin-bottom: 15px;">
                            <label>‚úèÔ∏è „Ç≥„É≥„ÉÜ„É≥„ÉÑ</label>
                            <textarea class="form-control" id="templateContent" rows="8"
                                      placeholder="„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÈÅ∏Êäû„Åô„Çã„Å®„ÄÅÁ∑®ÈõÜÂèØËÉΩ„Å™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô..."></textarea>
                            <small style="color: #6b7280; font-size: 12px;">
                                üí° „Éí„É≥„Éà: ÂãïÁöÑ„Å™Â§âÊï∞„ÅÆÁΩÆÊèõ„ÅåÂèØËÉΩ„Åß„Åô
                            </small>
                        </div>

                        <div class="template-variables" style="margin-bottom: 15px;">
                            <label>üîß „Ç´„Çπ„Çø„É†Â§âÊï∞ („Ç™„Éó„Ç∑„Éß„É≥)</label>
                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin-top: 8px;">
                                <input type="text" class="form-control" id="customVar1" placeholder="Â§âÊï∞Âêç (‰æã: PRICE)">
                                <input type="text" class="form-control" id="customVal1" placeholder="ÂÄ§ (‰æã: 4,990)">
                                <input type="text" class="form-control" id="customVar2" placeholder="Â§âÊï∞Âêç (‰æã: DISCOUNT)">
                                <input type="text" class="form-control" id="customVal2" placeholder="ÂÄ§ (‰æã: 50)">
                            </div>
                        </div>

                        <div class="template-actions">
                            <button type="button" class="btn btn-secondary" id="templatePreview">üëÅÔ∏è „Éó„É¨„Éì„É•„Éº</button>
                            <button type="button" class="btn btn-primary" id="useTemplate">‚úÖ „Åì„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰ΩøÁî®</button>
                        </div>

                        <div id="templatePreviewPane" style="display: none; margin-top: 15px; padding: 15px; border: 1px solid #d1d5db; border-radius: 8px; background: #ffffff; max-height: 400px; overflow-y: auto;">
                            <h4 style="margin: 0 0 10px 0; color: #1f2937;">üìß „É°„Éº„É´„Éó„É¨„Éì„É•„Éº</h4>
                            <div id="templatePreviewContent"></div>
                        </div>
                    </div>
                </div>

                <!-- ÁîªÂÉèÊ∑ª‰ªò„Çª„ÇØ„Ç∑„Éß„É≥ -->
                <div class="form-group">
                    <label>ÁîªÂÉèÊ∑ª‰ªò („Ç™„Éó„Ç∑„Éß„É≥)</label>

                    <!-- ‰∫àÁ¥ÑÈÖç‰ø°ÊôÇ„ÅÆÈáçË¶Å„Å™Ê≥®ÊÑè -->
                    <div id="imageScheduleWarning" class="status-message" style="display: none; background: #fef3c7; color: #92400e; border: 1px solid #f59e0b;">
                        ‚ö†Ô∏è <strong>‰∫àÁ¥ÑÈÖç‰ø°„Åß„ÅÆÁîªÂÉè„Å´„Å§„ÅÑ„Å¶Ôºö</strong><br>
                        ‰∫àÁ¥ÑÈÖç‰ø°„Åß„ÅØÂ§ßÂÆπÈáèÁîªÂÉè„Éá„Éº„Çø„Çí‰øùÂ≠ò„Åß„Åç„Åæ„Åõ„Çì„ÄÇ<br>
                        <strong>Êé®Â•®Ôºö</strong> ÁîªÂÉè„ÇíÂ§ñÈÉ®„Å´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂæå„ÄÅHTML„Ç®„Éá„Ç£„Çø„Éº„Åß<code>&lt;img src="URL"&gt;</code>„Çí‰ΩøÁî®„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
                    </div>

                    <div class="content-type-tabs" style="margin-top: 10px;">
                        <button type="button" class="content-tab active" data-image-type="upload">üìé „Éï„Ç°„Ç§„É´Ê∑ª‰ªò</button>
                        <button type="button" class="content-tab" data-image-type="url">üåê Â§ñÈÉ®URL</button>
                    </div>

                    <!-- „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊñπÂºè -->
                    <div id="imageUploadSection" class="image-upload-area" style="margin-top: 15px;">
                        <input type="file" id="imageUpload" accept="image/*" multiple style="display: none;">
                        <div class="upload-zone" onclick="document.getElementById('imageUpload').click();">
                            <div class="upload-icon">üìé</div>
                            <div class="upload-text">
                                <strong>ÁîªÂÉè„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ</strong>
                                <small>„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶ÁîªÂÉè„ÇíÈÅ∏Êäû„ÄÅ„Åæ„Åü„ÅØ„Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„Éó<br>‚Äª Âç≥ÊôÇÈÖç‰ø°„ÅÆ„ÅøÂØæÂøú</small>
                            </div>
                        </div>
                        <div id="imagePreviewContainer" style="display: none;">
                            <div class="image-preview-grid" id="imagePreviewGrid"></div>
                        </div>
                    </div>

                    <!-- Â§ñÈÉ®URLÊñπÂºè -->
                    <div id="imageUrlSection" style="display: none; margin-top: 15px;">
                        <div style="background: #f0f9ff; padding: 15px; border-radius: 8px; border: 1px solid #0ea5e9; margin-bottom: 15px;">
                            <h4 style="margin: 0 0 10px 0; color: #0c4a6e;">üåü Êé®Â•®ÔºöÂ§ñÈÉ®ÁîªÂÉè„Éõ„Çπ„ÉÜ„Ç£„É≥„Ç∞</h4>
                            <p style="margin: 0 0 10px 0; font-size: 14px; color: #075985;">
                                <strong>‰∫àÁ¥ÑÈÖç‰ø°„ÇÇÁ¢∫ÂÆüÂãï‰ΩúÔºÅ</strong> ÁîªÂÉè„Çí‰ª•‰∏ã„ÅÆ„Çµ„Éº„Éì„Çπ„Å´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶URL„ÇíÂèñÂæóÔºö
                            </p>
                            <ul style="margin: 0; padding-left: 20px; font-size: 13px; color: #0369a1;">
                                <li><strong>Google Drive</strong>ÔºàÁÑ°Êñô„ÉªÂÖ±Êúâ„É™„É≥„ÇØÂèñÂæóÔºâ</li>
                                <li><strong>Imgur</strong>ÔºàÁÑ°Êñô„ÉªÁîªÂÉèÂ∞ÇÁî®Ôºâ</li>
                                <li><strong>Cloudinary</strong>Ôºà„Éó„É≠‰ªïÊßò„ÉªÈ´òÈÄüCDNÔºâ</li>
                                <li><strong>GitHub</strong>ÔºàÊäÄË°ìËÄÖÂêë„Åë„ÉªÊ∞∏Á∂ö‰øùÂ≠òÔºâ</li>
                            </ul>
                        </div>

                        <div class="form-group">
                            <label>ÁîªÂÉèURL</label>
                            <input type="url" class="form-control" id="imageUrl"
                                   placeholder="https://example.com/image.jpg">
                            <button type="button" class="btn btn-secondary" id="addImageUrlBtn" style="margin-top: 10px;">HTML„Å´ËøΩÂä†</button>
                        </div>

                        <div id="urlImagePreview" style="display: none; margin-top: 15px;">
                            <img id="urlImagePreviewImg" style="max-width: 200px; max-height: 150px; border-radius: 8px; border: 1px solid #e5e7eb;">
                        </div>
                    </div>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="scheduleCheck">
                    <label for="scheduleCheck" style="margin: 0; cursor: pointer;">‰∫àÁ¥ÑÈÖç‰ø°„Åô„Çã</label>
                </div>

                <div class="schedule-option" id="scheduleOption" style="display: none;">
                    <input type="datetime-local" class="form-control" id="scheduleTime">
                </div>

                <div class="action-buttons">
                    <button class="btn btn-primary" id="sendBtn">
                        <span id="sendBtnText">ÈÖç‰ø°„Åô„Çã</span>
                    </button>
                </div>

                <div id="statusMessage" class="status-message"></div>
            </div>

            <!-- ÈÖç‰ø°ÂÅúÊ≠¢ÁÆ°ÁêÜ -->
            <div class="card">
                <h2>üö´ ÈÖç‰ø°ÂÅúÊ≠¢ÁÆ°ÁêÜ</h2>
                <div class="unsubscribe-section">
                    <div class="form-group">
                        <label>ÈÖç‰ø°ÂÅúÊ≠¢Âá¶ÁêÜ</label>
                        <div class="unsubscribe-actions">
                            <input type="email" class="form-control" id="unsubscribeEmail"
                                   placeholder="ÈÖç‰ø°ÂÅúÊ≠¢„Åô„Çã„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ" style="flex: 1; margin-right: 10px;">
                            <button class="btn btn-secondary" id="unsubscribeBtn">ÈÖç‰ø°ÂÅúÊ≠¢</button>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>ÈÖç‰ø°ÂÜçÈñã</label>
                        <div class="unsubscribe-actions">
                            <input type="email" class="form-control" id="resubscribeEmail"
                                   placeholder="ÈÖç‰ø°ÂÜçÈñã„Åô„Çã„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ" style="flex: 1; margin-right: 10px;">
                            <button class="btn btn-primary" id="resubscribeBtn">ÈÖç‰ø°ÂÜçÈñã</button>
                        </div>
                    </div>

                    <div class="unsubscribe-stats">
                        <div class="stat-box">
                            <div class="stat-label">ÈÖç‰ø°ÂÅúÊ≠¢ËÄÖÊï∞</div>
                            <div class="stat-value" id="unsubscribedCount">-</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†± -->
            <div class="card" style="background: #ffffff; border: 2px solid #f59e0b; box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);">
                <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 15px;">
                    <h2 style="color: #92400e; margin: 0;">üîß „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±</h2>
                    <button type="button" id="debugToggle" style="background: #f59e0b; color: white; border: none; padding: 5px 10px; border-radius: 4px; font-size: 12px; cursor: pointer;">Ë©≥Á¥∞Ë°®Á§∫</button>
                </div>

                <!-- „Ç≥„É≥„Éë„ÇØ„ÉàË°®Á§∫ -->
                <div id="debugSummary" style="font-family: monospace; font-size: 13px; color: #1f2937;">
                    <div style="display: flex; gap: 20px; flex-wrap: wrap;">
                        <span><strong>API:</strong> {debugInfo.hasApiKey && debugInfo.hasBaseId ? '‚úÖ' : '‚ùå'}</span>
                        <span><strong>Êé•Á∂ö:</strong> {debugInfo.apiCallSuccess ? '‚úÖ' : '‚ùå'}</span>
                        <span><strong>„É¨„Ç≥„Éº„Éâ:</strong> {debugInfo.recordCount}‰ª∂</span>
                        {debugInfo.errorMessage && <span style="color: red;"><strong>„Ç®„É©„ÉºÊúâ„Çä</strong></span>}
                    </div>
                </div>

                <!-- Ë©≥Á¥∞Ë°®Á§∫ÔºàÂàùÊúüÈùûË°®Á§∫Ôºâ -->
                <div id="debugDetails" style="display: none; font-family: monospace; font-size: 14px; color: #1f2937; margin-top: 15px; border-top: 1px solid #e5e7eb; padding-top: 15px;">
                    <p><strong>API Key:</strong> {debugInfo.hasApiKey ? '‚úÖ Ë®≠ÂÆöÊ∏à„Åø' : '‚ùå Êú™Ë®≠ÂÆö'}</p>
                    <p><strong>Base ID:</strong> {debugInfo.hasBaseId ? '‚úÖ Ë®≠ÂÆöÊ∏à„Åø' : '‚ùå Êú™Ë®≠ÂÆö'}</p>
                    <p><strong>API Call:</strong> {debugInfo.apiCallSuccess ? '‚úÖ ÊàêÂäü' : '‚ùå Â§±Êïó'}</p>
                    <p><strong>Record Count:</strong> {debugInfo.recordCount}</p>
                    {debugInfo.errorMessage && <p style="color: red;"><strong>Error:</strong> {debugInfo.errorMessage}</p>}

                    <div style="margin-top: 15px;">
                        <h4 style="color: #1f2937; margin-bottom: 10px;">„Éó„É©„É≥ÂÄ§ÂàÜÊûê:</h4>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 8px;">
                            {Object.entries(debugInfo.planCounts).map(([planValue, count]) => (
                                <div style="padding: 8px; background: #f9fafb; border-radius: 3px; border-left: 3px solid #3b82f6; font-size: 12px;">
                                    <strong>"{planValue}"</strong> ({count}‰∫∫)
                                </div>
                            ))}
                        </div>
                    </div>

                    {debugInfo.sampleRecords.length > 0 && (
                        <div style="margin-top: 15px;">
                            <h4 style="color: #1f2937; margin-bottom: 10px;">„Çµ„É≥„Éó„É´„É¨„Ç≥„Éº„Éâ (ÊúÄÂàù„ÅÆ3‰ª∂):</h4>
                            {debugInfo.sampleRecords.slice(0, 3).map(record => (
                                <div style="margin: 5px 0; padding: 8px; background: #f9fafb; border-radius: 3px; font-size: 12px;">
                                    <strong>{record.email}</strong> ‚Üí „Éó„É©„É≥: "{record.planField}"
                                </div>
                            ))}
                        </div>
                    )}
                </div>
            </div>

            
            <!-- üõ°Ô∏è „Éâ„É°„Ç§„É≥‰øùË≠∑ & „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„ÉàÁÆ°ÁêÜ -->
            <div class="card">
                <h2>üõ°Ô∏è „Éâ„É°„Ç§„É≥‰øùË≠∑„Ç∑„Çπ„ÉÜ„É†</h2>

                <!-- „Éâ„É°„Ç§„É≥‰øùË≠∑Áµ±Ë®à -->
                <div class="domain-protection-stats" style="margin-bottom: 25px;">
                    <div class="stats-grid">
                        <div class="stat-box">
                            <div class="stat-label">üö´ „Éñ„É≠„ÉÉ„ÇØ‰∏≠</div>
                            <div class="stat-value" id="blockedEmailsCount">-</div>
                        </div>
                        <div class="stat-box">
                            <div class="stat-label">‚ö†Ô∏è Ë≠¶Âëä„É¨„Éô„É´</div>
                            <div class="stat-value" id="warningEmailsCount">-</div>
                        </div>
                        <div class="stat-box">
                            <div class="stat-label">üìä Â§±ÊïóÁéá</div>
                            <div class="stat-value" id="failureRate">-</div>
                        </div>
                        <div class="stat-box">
                            <div class="stat-label">üéØ „É™„Çπ„ÇØ„É¨„Éô„É´</div>
                            <div class="stat-value" id="overallRisk">-</div>
                        </div>
                    </div>
                </div>

                <!-- „Çø„ÉñÂàá„ÇäÊõø„Åà -->
                <div class="content-type-tabs">
                    <button type="button" class="content-tab active" data-protection-tab="blacklist">üö´ „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà</button>
                    <button type="button" class="content-tab" data-protection-tab="stats">üìä Áµ±Ë®à</button>
                    <button type="button" class="content-tab" data-protection-tab="whitelist">‚úÖ Âæ©ÊóßÁÆ°ÁêÜ</button>
                </div>

                <!-- „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„ÉàË°®Á§∫ -->
                <div id="blacklistTab" class="protection-tab-content">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                        <h3>„Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà‰∏ÄË¶ß</h3>
                        <button class="btn btn-secondary" id="refreshBlacklistBtn">üîÑ Êõ¥Êñ∞</button>
                    </div>

                    <div id="blacklistContainer" style="max-height: 400px; overflow-y: auto; border: 1px solid #e5e7eb; border-radius: 8px;">
                        <table style="width: 100%; border-collapse: collapse;">
                            <thead style="background-color: #f9fafb; position: sticky; top: 0;">
                                <tr>
                                    <th style="padding: 12px; text-align: left; border-bottom: 1px solid #e5e7eb;">„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ</th>
                                    <th style="padding: 12px; text-align: center; border-bottom: 1px solid #e5e7eb;">Â§±ÊïóÂõûÊï∞</th>
                                    <th style="padding: 12px; text-align: center; border-bottom: 1px solid #e5e7eb;">Á®ÆÂà•</th>
                                    <th style="padding: 12px; text-align: center; border-bottom: 1px solid #e5e7eb;">ÊúÄÁµÇÂ§±Êïó</th>
                                    <th style="padding: 12px; text-align: center; border-bottom: 1px solid #e5e7eb;">Êìç‰Ωú</th>
                                </tr>
                            </thead>
                            <tbody id="blacklistTableBody">
                                <tr>
                                    <td colspan="5" style="padding: 20px; text-align: center; color: #6b7280;">„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø‰∏≠...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Áµ±Ë®à„Çø„Éñ -->
                <div id="statsTab" class="protection-tab-content" style="display: none;">
                    <h3>Ë©≥Á¥∞Áµ±Ë®à</h3>
                    <div id="detailedStats" style="background: #f9fafb; padding: 15px; border-radius: 8px; font-family: monospace; font-size: 14px;">
                        Áµ±Ë®à„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø‰∏≠...
                    </div>

                    <h3 style="margin-top: 25px;">Êé®Â•®‰∫ãÈ†Ö</h3>
                    <div id="recommendations" style="background: #fef3c7; padding: 15px; border-radius: 8px; border-left: 4px solid #f59e0b;">
                        Êé®Â•®‰∫ãÈ†Ö„ÇíË™≠„ÅøËæº„Åø‰∏≠...
                    </div>
                </div>

                <!-- Âæ©ÊóßÁÆ°ÁêÜ„Çø„Éñ -->
                <div id="whitelistTab" class="protection-tab-content" style="display: none;">
                    <h3>„É°„Éº„É´„Ç¢„Éâ„É¨„ÇπÂæ©Êóß</h3>
                    <p style="color: #6b7280; margin-bottom: 15px;">„ÇΩ„Éï„Éà„Éê„Ç¶„É≥„Çπ„ÅÆ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÅÆ„ÅøÂæ©ÊóßÂèØËÉΩ„Åß„Åô„ÄÇ„Éè„Éº„Éâ„Éê„Ç¶„É≥„Çπ„ÇÑËã¶ÊÉÖ„ÅØÊâãÂãï„ÅßÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</p>

                    <div class="form-group">
                        <label>Âæ©ÊóßÂØæË±°„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ</label>
                        <div class="unsubscribe-actions">
                            <input type="email" class="form-control" id="whitelistEmail"
                                   placeholder="Âæ©Êóß„Åô„Çã„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ" style="flex: 1; margin-right: 10px;">
                            <button class="btn btn-primary" id="whitelistBtn">üîÑ Âæ©Êóß</button>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Âæ©ÊóßÁêÜÁî±</label>
                        <select class="form-control" id="whitelistReason">
                            <option value="user-request">„É¶„Éº„Ç∂„Éº„Åã„Çâ„ÅÆË¶ÅË´ã</option>
                            <option value="technical-issue">ÊäÄË°ìÁöÑÂïèÈ°å„ÅÆËß£Ê±∫</option>
                            <option value="admin-review">ÁÆ°ÁêÜËÄÖ„Å´„Çà„ÇãÂÜçË©ï‰æ°</option>
                            <option value="temporary-failure">‰∏ÄÊôÇÁöÑ„Å™ÂïèÈ°å</option>
                        </select>
                    </div>

                    <div id="whitelistStatus" class="status-message"></div>
                </div>
            </div>
            
        </div>
    </div>
    
    <script is:inline define:vars={{ customerStats }}>
        // „Çµ„Éº„Éê„Éº„Çµ„Ç§„Éâ„Åã„ÇâÂèñÂæó„Åó„ÅüÈ°ßÂÆ¢Áµ±Ë®à„Çí‰ΩøÁî®
        function initializeStatistics() {
            // „Ç™„Éó„Ç∑„Éß„É≥„ÅÆÊï∞„ÇíÊõ¥Êñ∞
            if (document.getElementById('allCount')) {
                document.getElementById('allCount').textContent = `${customerStats.total}Âêç`;
            }
            if (document.getElementById('freeCountOption')) {
                document.getElementById('freeCountOption').textContent = `${customerStats.free}Âêç`;
            }
            if (document.getElementById('standardCountOption')) {
                document.getElementById('standardCountOption').textContent = `${customerStats.standard}Âêç`;
            }
            if (document.getElementById('premiumCountOption')) {
                document.getElementById('premiumCountOption').textContent = `${customerStats.premium}Âêç`;
            }
        }
        
        
        // „Éó„É©„É≥ÈÅ∏ÊäûÔºà„Çª„É¨„ÇØ„Éà„Éú„ÉÉ„ÇØ„ÇπÂØæÂøúÔºâ

        // ÈÖç‰ø°Á¢∫Ë™ç„Éú„Çø„É≥
        document.getElementById('checkLastDelivery').addEventListener('click', async function() {
            const resultDiv = document.getElementById('deliveryResult');
            const detailsDiv = document.getElementById('deliveryDetails');

            resultDiv.style.display = 'block';
            detailsDiv.textContent = 'Á¢∫Ë™ç‰∏≠...';
            this.disabled = true;
            this.textContent = 'Á¢∫Ë™ç‰∏≠...';

            try {
                // ÂêÑ„Éó„É©„É≥„ÅÆÁèæÂú®„ÅÆÈÖç‰ø°ÂØæË±°ËÄÖÊï∞„ÇíÁ¢∫Ë™ç
                const stats = {
                    all: ${customerStats.total},
                    free: ${customerStats.free},
                    standard: ${customerStats.standard},
                    premium: ${customerStats.premium}
                };

                detailsDiv.innerHTML = \`
<strong>üìä ÁèæÂú®„ÅÆÈÖç‰ø°ÂØæË±°ËÄÖÊï∞:</strong><br>
ÂÖ®‰ΩìÈÖç‰ø°: \${stats.all}Âêç<br>
ÁÑ°Êñô‰ºöÂì°: \${stats.free}Âêç<br>
Standard‰ºöÂì°: \${stats.standard}Âêç<br>
Premium‰ºöÂì°: \${stats.premium}Âêç<br><br>

<strong>üìß Ê≥®ÊÑè:</strong><br>
‚Ä¢ ÈÖç‰ø°ÂÅúÊ≠¢„É¶„Éº„Ç∂„Éº„ÅØËá™ÂãïÈô§Â§ñ„Åï„Çå„Åæ„Åô<br>
‚Ä¢ „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„É¶„Éº„Ç∂„Éº„ÅØËá™ÂãïÈô§Â§ñ„Åï„Çå„Åæ„Åô<br>
‚Ä¢ ÂÆüÈöõ„ÅÆÈÖç‰ø°Êï∞„ÅØËã•Âπ≤Áï∞„Å™„ÇãÂ†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô
                \`;

            } catch (error) {
                detailsDiv.innerHTML = \`
<span style="color: #dc2626;">‚ùå „Ç®„É©„Éº:</span><br>
\${error.message}
                \`;
            } finally {
                this.disabled = false;
                this.textContent = 'üìß ÊúÄÊñ∞ÈÖç‰ø°Êï∞„ÇíÁ¢∫Ë™ç';
            }
        });
        
        // ‰∫àÁ¥ÑÈÖç‰ø°„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ
        document.getElementById('scheduleCheck').addEventListener('change', function() {
            const scheduleOption = document.getElementById('scheduleOption');
            const sendBtnText = document.getElementById('sendBtnText');
            const imageWarning = document.getElementById('imageScheduleWarning');
            
            if (this.checked) {
                scheduleOption.style.display = 'flex';
                sendBtnText.textContent = '‰∫àÁ¥Ñ„Åô„Çã';
                imageWarning.style.display = 'block'; // ÁîªÂÉèË≠¶Âëä„ÇíË°®Á§∫
                
                // „Éá„Éï„Ç©„É´„Éà„Åß1ÊôÇÈñìÂæå„ÇíË®≠ÂÆö
                const now = new Date();
                now.setHours(now.getHours() + 1);
                now.setMinutes(0);
                document.getElementById('scheduleTime').value = 
                    now.toISOString().slice(0, 16);
            } else {
                scheduleOption.style.display = 'none';
                sendBtnText.textContent = 'ÈÖç‰ø°„Åô„Çã';
                imageWarning.style.display = 'none'; // ÁîªÂÉèË≠¶Âëä„ÇíÈö†„Åô
            }
        });
        
        // „Éó„É¨„Éì„É•„ÉºÊ©üËÉΩ„ÅØÂâäÈô§Ê∏à„Åø
        
        
        // „É°„ÉÉ„Çª„Éº„Ç∏Ë°®Á§∫
        function showMessage(message, type) {
            const messageDiv = document.getElementById('statusMessage');
            messageDiv.textContent = message;
            messageDiv.className = `status-message ${type}`;
            
            if (type !== 'info') {
                setTimeout(() => {
                    messageDiv.className = 'status-message';
                }, 5000);
            }
        }
        
        // HTML/„ÉÜ„Ç≠„Çπ„Éà/„ÉÜ„É≥„Éó„É¨„Éº„ÉàÂàá„ÇäÊõø„ÅàÊ©üËÉΩ
        document.querySelectorAll('.content-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                const type = this.dataset.type;
                
                // „Çø„Éñ„ÅÆÁä∂ÊÖãÊõ¥Êñ∞
                document.querySelectorAll('.content-tab').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                // „Ç®„Éá„Ç£„Çø„Éº„ÅÆË°®Á§∫Âàá„ÇäÊõø„Åà
                document.getElementById('textEditor').style.display = 'none';
                document.getElementById('htmlEditor').style.display = 'none';
                document.getElementById('templateEditor').style.display = 'none';
                
                if (type === 'html') {
                    document.getElementById('htmlEditor').style.display = 'block';
                    document.getElementById('contentLabel').textContent = 'HTMLÊú¨Êñá';
                } else if (type === 'template') {
                    document.getElementById('templateEditor').style.display = 'block';
                    document.getElementById('contentLabel').textContent = '„ÉÜ„É≥„Éó„É¨„Éº„Éà';
                } else {
                    document.getElementById('textEditor').style.display = 'block';
                    document.getElementById('contentLabel').textContent = 'Êú¨Êñá';
                }
            });
        });
        
        // HTML„ÉÑ„Éº„É´„Éê„ÉºÊ©üËÉΩ
        document.querySelectorAll('.html-btn[data-tag]').forEach(btn => {
            btn.addEventListener('click', function() {
                const tag = this.dataset.tag;
                const textarea = document.getElementById('htmlContent');
                const start = textarea.selectionStart;
                const end = textarea.selectionEnd;
                const selectedText = textarea.value.substring(start, end) || '„ÉÜ„Ç≠„Çπ„Éà';
                const newText = `<${tag}>${selectedText}</${tag}>`;
                
                textarea.value = textarea.value.substring(0, start) + newText + textarea.value.substring(end);
                textarea.focus();
                textarea.setSelectionRange(start + tag.length + 2, start + tag.length + 2 + selectedText.length);
            });
        });
        
        // HTML„Éó„É¨„Éì„É•„ÉºÊ©üËÉΩ
        document.getElementById('previewToggle').addEventListener('click', function() {
            const previewPane = document.getElementById('previewPane');
            const previewContent = document.getElementById('previewContent');
            const htmlContent = document.getElementById('htmlContent').value;
            
            if (previewPane.style.display === 'none') {
                previewContent.innerHTML = htmlContent;
                previewPane.style.display = 'block';
                this.textContent = 'üìù Á∑®ÈõÜ„Å´Êàª„Çã';
            } else {
                previewPane.style.display = 'none';
                this.textContent = 'üëÅÔ∏è „Éó„É¨„Éì„É•„Éº';
            }
        });
        
        // „É™„É≥„ÇØÊåøÂÖ•Ê©üËÉΩ
        function insertLink() {
            const url = prompt('„É™„É≥„ÇØURL„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ:', 'https://');
            const text = prompt('„É™„É≥„ÇØ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ:', '„É™„É≥„ÇØ');
            if (url && text) {
                const textarea = document.getElementById('htmlContent');
                const linkHtml = `<a href="${url}" target="_blank">${text}</a>`;
                textarea.value += linkHtml;
            }
        }
        
        // ÁîªÂÉèÊåøÂÖ•Ê©üËÉΩ
        function insertImage() {
            const url = prompt('ÁîªÂÉèURL„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ:', 'https://');
            const alt = prompt('ÁîªÂÉè„ÅÆË™¨Êòé„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ:', 'ÁîªÂÉè');
            if (url && alt) {
                const textarea = document.getElementById('htmlContent');
                const imgHtml = `<img src="${url}" alt="${alt}" style="max-width: 100%; height: auto;">`;
                textarea.value += imgHtml;
            }
        }
        
        // HTMLÊï¥ÂΩ¢Ê©üËÉΩ
        function formatHTML() {
            const textarea = document.getElementById('htmlContent');
            const html = textarea.value;
            
            if (!html.trim()) {
                alert('Êï¥ÂΩ¢„Åô„ÇãHTML„Ç≥„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            try {
                // HTML„ÇíÊï¥ÂΩ¢„Åô„Çã
                let formatted = html
                    // „Çø„Ç∞„ÅÆÂâçÂæå„Å´ÊîπË°å„ÇíËøΩÂä†
                    .replace(/></g, '>\n<')
                    // ÈñãÂßã„Çø„Ç∞„ÅÆÂæå„Å´ÊîπË°å
                    .replace(/(<\/?)(\w+)([^>]*>)/g, '$1$2$3\n')
                    // Èñâ„Åò„Çø„Ç∞„ÅÆÂâç„Å´ÊîπË°å
                    .replace(/\n<\//g, '\n</')
                    // ‰ΩôÂàÜ„Å™ÊîπË°å„ÇíÂâäÈô§
                    .replace(/\n\s*\n/g, '\n')
                    // „Ç§„É≥„É©„Ç§„É≥Ë¶ÅÁ¥†„ÅØÂêå„ÅòË°å„Å´‰øùÊåÅ
                    .replace(/(<(?:b|i|u|strong|em|span|a)[^>]*>)\n/g, '$1')
                    .replace(/\n(<\/(?:b|i|u|strong|em|span|a)>)/g, '$1')
                    // p„Çø„Ç∞„ÅÆ‰∏≠Ë∫´„ÅØÂêå„ÅòË°å„Å´
                    .replace(/(<p[^>]*>)\n([^<]+)\n(<\/p>)/g, '$1$2$3')
                    // ÂÖàÈ†≠„Å®Êú´Â∞æ„ÅÆÊîπË°å„Çí„Éà„É™„É†
                    .trim();
                
                textarea.value = formatted;
                
                // ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫
                const button = event.target;
                const originalText = button.innerHTML;
                button.innerHTML = '‚úÖ ÂÆå‰∫Ü';
                button.style.background = '#059669';
                
                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.style.background = '#10b981';
                }, 1500);
                
            } catch (error) {
                alert('HTMLÊï¥ÂΩ¢‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ' + error.message);
            }
        }
        
        // „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞„Å®„Åó„Å¶ÂÆöÁæ©
        window.insertLink = insertLink;
        window.insertImage = insertImage;
        window.formatHTML = formatHTML;
        
        // „ÉÜ„É≥„Éó„É¨„Éº„ÉàÊ©üËÉΩ
        const emailTemplates = {
            newsletter: {
                name: 'üìß Âü∫Êú¨„Éã„É•„Éº„Çπ„É¨„Çø„Éº',
                description: '„Ç∑„É≥„Éó„É´„ÅßË™≠„Åø„ÇÑ„Åô„ÅÑÂü∫Êú¨„ÉÜ„É≥„Éó„É¨„Éº„Éà',
                content: '<h2>üéØ ‰ªäÈÄ±„ÅÆ‰∫àÊÉ≥ÂÆüÁ∏æ</h2>' +
'<p>ÂÖàÈÄ±„ÅØ6Êà¶4Âãù„ÅÆÂ•ΩÊàêÁ∏æÔºÅÁöÑ‰∏≠Áéá66.7%„ÇíË®òÈå≤„Åó„Åæ„Åó„Åü„ÄÇ</p>' +
'<div style="background-color: #eff6ff; padding: 15px; border-left: 4px solid #3b82f6; margin: 15px 0;">' +
'<h3>üìä ÈÄ±Èñì„Éè„Ç§„É©„Ç§„Éà</h3>' +
'<ul>' +
'<li><strong>Â∑ùÂ¥é11R:</strong> 3ÈÄ£Ë§á ¬•8,460ÁöÑ‰∏≠ (Êé®Â•®¬•500 ‚Üí Âà©Áõä¬•3,730)</li>' +
'<li><strong>Â§ß‰∫ï10R:</strong> È¶¨Âçò ¬•3,280ÁöÑ‰∏≠ (Êé®Â•®¬•1,000 ‚Üí Âà©Áõä¬•2,280)</li>' +
'<li><strong>Êµ¶Âíå12R:</strong> 3ÈÄ£Âçò ¬•15,890ÁöÑ‰∏≠ (Êé®Â•®¬•200 ‚Üí Âà©Áõä¬•2,978)</li>' +
'</ul>' +
'</div>' +
'<h2>üöÄ Êù•ÈÄ±„ÅÆÊ≥®ÁõÆ„É¨„Éº„Çπ</h2>' +
'<p>Êù•ÈÄ±„ÅØ<strong>Â∑ùÂ¥éË®òÂøµ</strong>„ÅÆÂâçÂì®Êà¶„ÅåÈñãÂÇ¨‰∫àÂÆö„ÄÇÈáçË≥ûÂÄôË£ú„ÅÆÂãïÂêë„Å´Ê≥®ÁõÆ„Åß„Åô„ÄÇ</p>'
            },
            prediction: {
                name: 'üéØ ‰∫àÊÉ≥ÈÖç‰ø°„ÉÜ„É≥„Éó„É¨„Éº„Éà',
                description: 'Á´∂È¶¨‰∫àÊÉ≥„Å´ÁâπÂåñ„Åó„Åü„É¨„Ç§„Ç¢„Ç¶„Éà',
                content: '<h2>üèá ‰ªäÊó•„ÅÆÂçóÈñ¢Á´∂È¶¨AI‰∫àÊÉ≥</h2>' +
'<div style="background-color: #334155; padding: 20px; border-radius: 12px; margin: 20px 0;">' +
'<h3 style="color: #ffffff; margin: 0 0 15px 0;">Â∑ùÂ¥é12R „Çµ„É©Á≥ª3Ê≠≥‰ª•‰∏ä</h3>' +
'<div style="color: #94a3b8; font-size: 13px; margin-bottom: 15px;">üìÖ Êú¨Êó• | ‚è∞ 20:45Áô∫Ëµ∞ | üèÉ 1400m</div>' +
'<div style="display: flex; align-items: center; padding: 12px 0; border-bottom: 1px solid #475569;">' +
'<div style="font-size: 24px; width: 40px; text-align: center;">‚óé</div>' +
'<div style="flex: 1; margin-left: 15px;">' +
'<h4 style="color: #ffffff; margin: 0;">8Áï™ „Ç≠„ÉÅ„Éß„Ç¶</h4>' +
'<p style="color: #94a3b8; font-size: 13px; margin: 3px 0 0 0;">ÂâçËµ∞Â•ΩÂÜÖÂÆπ„ÄÇ‰ªäÂõû„ÇÇ‰∏ä‰ΩçÊúüÂæÖ„ÄÇ</p>' +
'</div>' +
'<div style="background-color: #059669; color: #ffffff; padding: 4px 8px; border-radius: 4px; font-size: 12px;">‰ø°È†ºÂ∫¶ 85%</div>' +
'</div>' +
'<div style="background-color: #065f46; padding: 15px; margin: 15px 0; border-radius: 8px;">' +
'<h3 style="color: #ffffff; margin: 0 0 10px 0;">üí° Êé®Â•®ÊäïË≥áÊà¶Áï•</h3>' +
'<p style="color: #ffffff; margin: 0;"><strong>È¶¨Âçò:</strong> 8‚Üí6 (1,000ÂÜÜ)<br>' +
'<strong>3ÈÄ£Ë§á:</strong> 6-8-2 (500ÂÜÜ)<br>' +
'<strong>ÊúüÂæÖÂèéÁõä:</strong> +2,400ÂÜÜ (240%)</p>' +
'</div>' +
'</div>'
            },
            promotion: {
                name: 'üéâ „Éó„É≠„É¢„Éº„Ç∑„Éß„É≥',
                description: '„Ç≠„É£„É≥„Éö„Éº„É≥„ÇÑÁâπÂà•„Ç™„Éï„Ç°„ÉºÁî®',
                content: '<h2>üéä ÊúüÈñìÈôêÂÆöÁâπÂà•„Ç≠„É£„É≥„Éö„Éº„É≥</h2>' +
'<div style="background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%); padding: 20px; border-radius: 12px; margin: 20px 0; text-align: center; border: 2px solid #f59e0b;">' +
'<h3 style="color: #92400e; margin: 0 0 10px 0;">üíé Premium‰ºöÂì°</h3>' +
'<div style="font-size: 36px; color: #dc2626; font-weight: 800; margin: 10px 0;">¬•4,990/Êúà</div>' +
'<p style="color: #059669; font-weight: 600; margin: 0;">üéØ ÂàùÊúà50%OFF!</p>' +
'</div>' +
'<h3>üåü ÁâπÂÖ∏ÂÜÖÂÆπ</h3>' +
'<ul>' +
'<li>ü§ñ <strong>AI‰∫àÊÉ≥</strong>: Ê©üÊ¢∞Â≠¶Áøí„Å´„Çà„ÇãÈ´òÁ≤æÂ∫¶‰∫àÊÉ≥</li>' +
'<li>üì± <strong>„É™„Ç¢„É´„Çø„Ç§„É†</strong>: „É¨„Éº„ÇπÁõ¥Ââç„Åæ„ÅßÊõ¥Êñ∞</li>' +
'<li>üí∞ <strong>ÊäïË≥áÊà¶Áï•</strong>: „É™„Çπ„ÇØÁÆ°ÁêÜ„ÇÇÂÆåÁíß</li>' +
'<li>üìä <strong>ÈÄèÊòéÊÄß</strong>: ‰∫àÊÉ≥Ê†πÊã†„ÇíÂÆåÂÖ®ÂÖ¨Èñã</li>' +
'</ul>' +
'<p style="text-align: center;">' +
'<a href="https://nankan-analytics.keiba.link/pricing" style="display: inline-block; padding: 16px 32px; background-color: #059669; color: white !important; text-decoration: none; border-radius: 50px; font-weight: 700; font-size: 18px; border: 2px solid #059669; mso-padding-alt: 16px 32px;">‰ªä„Åô„ÅêÂßã„ÇÅ„Çã üöÄ</a>' +
'</p>'
            },
            welcome: {
                name: 'üëã „Ç¶„Çß„É´„Ç´„É†„É°„Éº„É´',
                description: 'Êñ∞Ë¶èÁôªÈå≤ËÄÖÂêë„Åë„ÅÆÊ≠ìËøé„É°„Éº„É´',
                content: '<h2>üëã „Çà„ÅÜ„Åì„Åù„ÄÅNANKAN„Ç¢„Éä„É™„ÉÜ„Ç£„ÇØ„Çπ„Å∏ÔºÅ</h2>' +
'<p>NANKAN„Ç¢„Éä„É™„ÉÜ„Ç£„ÇØ„Çπ„Å∏„ÅÆ„ÅîÁôªÈå≤„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ</p>' +
'<h3>üéÅ ÁôªÈå≤ÁâπÂÖ∏„ÅÆ„ÅîÊ°àÂÜÖ</h3>' +
'<div style="background-color: #eff6ff; padding: 15px; border-left: 4px solid #3b82f6; margin: 15px 0;">' +
'<ul>' +
'<li>üéØ <strong>ÁÑ°Êñô‰∫àÊÉ≥</strong>: ÊØéÊó•„ÅÆ„É°„Ç§„É≥„É¨„Éº„Çπ‰∫àÊÉ≥</li>' +
'<li>üìä <strong>Êà¶Áï•„Ç¨„Ç§„Éâ</strong>: ÂäπÁéáÁöÑ„Å™È¶¨Âà∏Ë≥ºÂÖ•ÊñπÊ≥ï</li>' +
'<li>üí∞ <strong>ÊäïË≥áÁÆ°ÁêÜ</strong>: „É™„Çπ„ÇØÁÆ°ÁêÜ„ÅÆÂü∫Êú¨</li>' +
'</ul>' +
'</div>' +
'<h3>üöÄ Âßã„ÇÅÊñπÔºà3„Çπ„ÉÜ„ÉÉ„ÉóÔºâ</h3>' +
'<ol>' +
'<li><strong>üîç ÁÑ°Êñô‰∫àÊÉ≥„Çí„ÉÅ„Çß„ÉÉ„ÇØ</strong><br>„Åæ„Åö„ÅØÁÑ°Êñô„ÅÆ„É°„Ç§„É≥„É¨„Éº„Çπ‰∫àÊÉ≥„Åß„ÄÅAI‰∫àÊÉ≥„ÅÆÁ≤æÂ∫¶„Çí‰ΩìÊÑü„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</li>' +
'<li><strong>üìä ‰∫àÊÉ≥„ÅÆË¶ãÊñπ„ÇíÂ≠¶Áøí</strong><br>‰ø°È†ºÂ∫¶„ÄÅÊà¶Áï•„ÄÅÊäïË≥áÈáëÈ°ç„ÅÆË¶ãÊñπ„ÇíÁêÜËß£„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ</li>' +
'<li><strong>üíé ÊúâÊñô„Éó„É©„É≥„ÇíÊ§úË®é</strong><br>„Çà„ÇäË©≥Á¥∞„Å™ÂàÜÊûê„Å®ÂÖ®„É¨„Éº„Çπ‰∫àÊÉ≥„Åß„ÄÅÊú¨Ê†ºÁöÑ„Å™Á´∂È¶¨ÊäïË≥á„ÇíÂßã„ÇÅ„Å¶„Åø„Åæ„Åõ„Çì„ÅãÔºü</li>' +
'</ol>' +
'<p style="text-align: center;">' +
'<a href="https://nankan-analytics.keiba.link/free-prediction" style="display: inline-block; padding: 16px 30px; background-color: #059669; color: white !important; text-decoration: none; border-radius: 8px; font-weight: 700; border: 2px solid #059669; mso-padding-alt: 16px 30px;">üéØ ÁÑ°Êñô‰∫àÊÉ≥„ÇíË¶ã„Çã</a>' +
'</p>'
            },
            announcement: {
                name: 'üì¢ „ÅäÁü•„Çâ„Åõ',
                description: '„Ç∑„Çπ„ÉÜ„É†Êõ¥Êñ∞„ÇÑ„ÅäÁü•„Çâ„ÅõÁî®„ÅÆ„Ç∑„É≥„Éó„É´„ÉÜ„É≥„Éó„É¨„Éº„Éà',
                content: '<h2>üì¢ ÈáçË¶Å„Å™„ÅäÁü•„Çâ„Åõ</h2>' +
'<p>„ÅÑ„Å§„ÇÇNANKAN„Ç¢„Éä„É™„ÉÜ„Ç£„ÇØ„Çπ„Çí„ÅîÂà©Áî®„ÅÑ„Åü„Å†„Åç„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô„ÄÇ</p>' +
'<div style="background-color: #f0f9ff; border-left: 4px solid #0ea5e9; padding: 15px 20px; margin: 20px 0; border-radius: 4px;">' +
'<h3 style="color: #0c4a6e; margin: 0 0 10px 0;">üí° ‰ªäÂõû„ÅÆ„ÅäÁü•„Çâ„ÅõÂÜÖÂÆπ</h3>' +
'<p style="color: #0369a1; margin: 0;">„Åì„Å°„Çâ„Å´„ÅäÁü•„Çâ„Åõ„ÅÆË©≥Á¥∞ÂÜÖÂÆπ„ÇíË®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Ç∑„Çπ„ÉÜ„É†„ÅÆÊõ¥Êñ∞ÊÉÖÂ†±„ÄÅÊñ∞Ê©üËÉΩ„ÅÆËøΩÂä†„ÄÅ„É°„É≥„ÉÜ„Éä„É≥„ÇπÊÉÖÂ†±„Å™„Å©„ÄÇ</p>' +
'</div>' +
'<p>Ë©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅîË≥™Âïè„Åå„Åî„Åñ„ÅÑ„Åæ„Åó„Åü„Çâ„ÄÅ<a href="mailto:info@keiba.link" style="color: #0ea5e9;">info@keiba.link</a> „Åæ„Åß„ÅäÊ∞óËªΩ„Å´„ÅäÂïè„ÅÑÂêà„Çè„Åõ„Åè„Å†„Åï„ÅÑ„ÄÇ</p>' +
'<div style="background-color: #f3f4f6; padding: 10px 15px; border-radius: 6px; color: #6b7280; font-size: 14px; text-align: center; margin: 20px 0;">' +
'üìÖ Áô∫‰ø°Êó•: Êú¨Êó•' +
'</div>'
            },
            stripePromo: {
                name: 'üéÅ Stripe„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ',
                description: 'Ââ≤Âºï„Ç≥„Éº„Éâ„Éª„ÇØ„Éº„Éù„É≥ÈÖçÂ∏ÉÁî®„ÉÜ„É≥„Éó„É¨„Éº„Éà',
                content: '<h2>üéÅ ÁâπÂà•„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ„ÅÆ„ÅäÁü•„Çâ„Åõ</h2>' +
'<p>Êó•È†É„ÅÆ„ÅîÊÑõÈ°ß„Å´ÊÑüË¨ù„ÇíËæº„ÇÅ„Å¶„ÄÅÊúüÈñìÈôêÂÆö„ÅÆÁâπÂà•Ââ≤Âºï„Ç≥„Éº„Éâ„Çí„ÅîÁî®ÊÑè„Åó„Åæ„Åó„ÅüÔºÅ</p>' +
'<div style="background: linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%); padding: 25px; border-radius: 16px; margin: 25px 0; text-align: center; border: 2px solid #6366f1; box-shadow: 0 10px 25px rgba(99, 102, 241, 0.15);">' +
'<div style="color: #4c1d95; font-size: 14px; font-weight: 600; margin-bottom: 10px;">üéä ÊúüÈñìÈôêÂÆö„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ üéä</div>' +
'<div style="background-color: #ffffff; padding: 15px 25px; border-radius: 8px; display: inline-block; margin: 10px 0; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);">' +
'<div style="font-size: 32px; color: #4c1d95; font-weight: 800; letter-spacing: 2px; font-family: monospace;">NANKAN50</div>' +
'</div>' +
'<div style="color: #dc2626; font-size: 24px; font-weight: 700; margin: 15px 0;">ÂàùÊúà50%OFF!</div>' +
'<div style="color: #6b21a8; font-size: 14px; margin-top: 10px;">ÊúâÂäπÊúüÈôê: 2025Âπ¥1Êúà31Êó•„Åæ„Åß</div>' +
'</div>' +
'<h3>‚ú® „Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ„ÅÆ‰Ωø„ÅÑÊñπ</h3>' +
'<ol style="line-height: 1.8;">' +
'<li>‰∏ãË®ò„ÅÆ„Éú„Çø„É≥„Åã„Çâ„Éó„É©„É≥ÈÅ∏Êäû„Éö„Éº„Ç∏„Å∏„Ç¢„ÇØ„Çª„Çπ</li>' +
'<li>„ÅîÂ∏åÊúõ„ÅÆ„Éó„É©„É≥ÔºàStandard/PremiumÔºâ„ÇíÈÅ∏Êäû</li>' +
'<li>StripeÊ±∫Ê∏àÁîªÈù¢„Åß„Äå„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ„ÄçÊ¨Ñ„Å´„Ç≥„Éº„Éâ„ÇíÂÖ•Âäõ</li>' +
'<li>„ÄåÈÅ©Áî®„Äç„Éú„Çø„É≥„ÅßÂâ≤Âºï„ÅåËá™ÂãïÈÅ©Áî®„Åï„Çå„Åæ„Åô</li>' +
'</ol>' +
'<div style="background-color: #fef3c7; border: 1px solid #fbbf24; padding: 15px; border-radius: 8px; margin: 20px 0;">' +
'<h4 style="color: #92400e; margin: 0 0 10px 0;">üìå „ÅîÂà©Áî®Êù°‰ª∂</h4>' +
'<ul style="color: #78350f; margin: 0; padding-left: 20px;">' +
'<li>Êñ∞Ë¶è„ÅîÁôªÈå≤„ÅÆ„ÅäÂÆ¢ÊßòÈôêÂÆö</li>' +
'<li>ÂàùÊúà„ÅÆ„Åø50%Ââ≤ÂºïÔºà2„É∂ÊúàÁõÆ‰ª•Èôç„ÅØÈÄöÂ∏∏ÊñôÈáëÔºâ</li>' +
'<li>Standard‰ºöÂì°: <s>¬•5,980</s> ‚Üí <strong>¬•2,990/ÂàùÊúà</strong></li>' +
'<li>Premium‰ºöÂì°: <s>¬•9,980</s> ‚Üí <strong>¬•4,990/ÂàùÊúà</strong></li>' +
'</ul>' +
'</div>' +
'<div style="text-align: center; margin: 30px 0;">' +
'<a href="https://nankan-analytics.keiba.link/pricing/" style="display: inline-block; background-color: #4f46e5; color: white !important; padding: 15px 40px; border-radius: 50px; text-decoration: none; font-weight: 700; font-size: 16px; border: 2px solid #4f46e5; mso-padding-alt: 15px 40px;">' +
'üöÄ ‰ªä„Åô„Åê„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ„Çí‰Ωø„ÅÜ' +
'</a>' +
'</div>' +
'<div style="background-color: #f9fafb; padding: 15px; border-radius: 8px; margin: 20px 0;">' +
'<h4 style="color: #374151; margin: 0 0 10px 0;">üéØ „Å™„Åú‰ªä„Åå„ÉÅ„É£„É≥„ÇπÔºü</h4>' +
'<ul style="color: #6b7280; margin: 0; padding-left: 20px; line-height: 1.6;">' +
'<li><strong>AI‰∫àÊÉ≥Á≤æÂ∫¶Âêë‰∏ä</strong>: ÊúÄÊñ∞„Ç¢„É´„Ç¥„É™„Ç∫„É†„ÅßÁöÑ‰∏≠Áéá„ÅåÂ§ßÂπÖUP</li>' +
'<li><strong>Âπ¥Êú´Âπ¥Âßã„ÅÆÂ§ß„É¨„Éº„Çπ</strong>: ÈáçË≥û„É¨„Éº„Çπ„ÅåÁõÆÁôΩÊäº„Åó</li>' +
'<li><strong>ÂÆüÁ∏æË®ºÊòéÊ∏à„Åø</strong>: ÂÖàÊúà„ÅÆÂõûÂèéÁéá156%ÈÅîÊàê</li>' +
'</ul>' +
'</div>' +
'<p style="text-align: center; color: #6b7280; font-size: 14px; margin-top: 30px;">' +
'„Åì„ÅÆ„É°„Éº„É´„ÅØÁâπÂà•„Ç™„Éï„Ç°„Éº„ÅÆÂØæË±°ËÄÖÊßò„Å´„ÅÆ„Åø„ÅäÈÄÅ„Çä„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ<br>' +
'„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ„ÅÆË≠≤Ê∏°„ÉªËª¢Â£≤„ÅØÂõ∫„Åè„ÅäÊñ≠„Çä„Åó„Å¶„Åä„Çä„Åæ„Åô„ÄÇ' +
'</p>'
            }
        };
        
        // „ÉÜ„É≥„Éó„É¨„Éº„ÉàÈÅ∏Êäû„Ç§„Éô„É≥„Éà
        document.getElementById('templateSelect').addEventListener('change', function() {
            const templateKey = this.value;
            const description = document.getElementById('templateDescription');
            const templateName = document.getElementById('templateName');
            const templateDesc = document.getElementById('templateDesc');
            const templateContent = document.getElementById('templateContent');
            
            if (templateKey && emailTemplates[templateKey]) {
                const template = emailTemplates[templateKey];
                templateName.textContent = template.name;
                templateDesc.textContent = template.description;
                templateContent.value = template.content;
                description.style.display = 'block';
            } else {
                description.style.display = 'none';
                templateContent.value = '';
            }
        });
        
        // „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éó„É¨„Éì„É•„Éº
        document.getElementById('templatePreview').addEventListener('click', function() {
            const templateKey = document.getElementById('templateSelect').value;
            const content = document.getElementById('templateContent').value;
            const previewPane = document.getElementById('templatePreviewPane');
            const previewContent = document.getElementById('templatePreviewContent');
            
            if (!templateKey || !content) {
                alert('„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÈÅ∏Êäû„Åó„Å¶„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            // „Ç´„Çπ„Çø„É†Â§âÊï∞„ÇíÂèñÂæó
            const variables = {};
            const var1 = document.getElementById('customVar1').value;
            const val1 = document.getElementById('customVal1').value;
            const var2 = document.getElementById('customVar2').value;
            const val2 = document.getElementById('customVal2').value;
            
            if (var1 && val1) variables[var1.toUpperCase()] = val1;
            if (var2 && val2) variables[var2.toUpperCase()] = val2;
            
            // Â§âÊï∞„ÅÆÁΩÆÊèõ
            let processedContent = content;
            
            // „Éá„Éï„Ç©„É´„ÉàÂ§âÊï∞
            const defaults = {
                '{DATE}': new Date().toLocaleDateString('ja-JP'),
                '{CONFIDENCE}': '85',
                '{PRICE}': '4,990',
                '{DISCOUNT}': '50'
            };
            
            // „Ç´„Çπ„Çø„É†Â§âÊï∞„ÇíÂÑ™ÂÖà
            Object.keys(variables).forEach(key => {
                const placeholder = `{${key}}`;
                processedContent = processedContent.replace(new RegExp(placeholder, 'g'), variables[key]);
            });
            
            // „Éá„Éï„Ç©„É´„ÉàÂ§âÊï∞„ÅßÊÆã„Çä„ÇíÁΩÆÊèõ
            Object.keys(defaults).forEach(placeholder => {
                processedContent = processedContent.replace(new RegExp(placeholder.replace(/[{}]/g, '\\$&'), 'g'), defaults[placeholder]);
            });
            
            previewContent.innerHTML = processedContent;
            previewPane.style.display = 'block';
        });
        
        // „ÉÜ„É≥„Éó„É¨„Éº„Éà‰ΩøÁî®
        document.getElementById('useTemplate').addEventListener('click', function() {
            const content = document.getElementById('templateContent').value;
            
            if (!content) {
                alert('„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            // HTML„Ç®„Éá„Ç£„Çø„Éº„Å´Âàá„ÇäÊõø„Åà„Å¶„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíË®≠ÂÆö
            document.querySelector('[data-type="html"]').click();
            document.getElementById('htmlContent').value = content;
            
            showMessage('„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíHTML„Ç®„Éá„Ç£„Çø„Éº„Å´Ë®≠ÂÆö„Åó„Åæ„Åó„Åü', 'success');
        });
        
        // ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊ©üËÉΩ
        let uploadedImages = [];
        
        document.getElementById('imageUpload').addEventListener('change', function(e) {
            const files = Array.from(e.target.files);
            handleImageFiles(files);
        });
        
        // „Éâ„É©„ÉÉ„Ç∞&„Éâ„É≠„ÉÉ„ÉóÂØæÂøú
        const uploadZone = document.querySelector('.upload-zone');
        uploadZone.addEventListener('dragover', function(e) {
            e.preventDefault();
            this.style.borderColor = '#3b82f6';
            this.style.background = '#eff6ff';
        });
        
        uploadZone.addEventListener('dragleave', function(e) {
            e.preventDefault();
            this.style.borderColor = '#d1d5db';
            this.style.background = '';
        });
        
        uploadZone.addEventListener('drop', function(e) {
            e.preventDefault();
            this.style.borderColor = '#d1d5db';
            this.style.background = '';
            const files = Array.from(e.dataTransfer.files).filter(file => file.type.startsWith('image/'));
            handleImageFiles(files);
        });
        
        function handleImageFiles(files) {
            files.forEach(file => {
                if (file.size > 5 * 1024 * 1024) { // 5MBÂà∂Èôê
                    alert('ÁîªÂÉè„Çµ„Ç§„Ç∫„ÅØ5MB‰ª•‰∏ã„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ: ' + file.name);
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    const imageData = {
                        name: file.name,
                        data: e.target.result,
                        file: file
                    };
                    uploadedImages.push(imageData);
                    displayImagePreview();
                };
                reader.readAsDataURL(file);
            });
        }
        
        function displayImagePreview() {
            const container = document.getElementById('imagePreviewContainer');
            const grid = document.getElementById('imagePreviewGrid');
            
            if (uploadedImages.length === 0) {
                container.style.display = 'none';
                return;
            }
            
            container.style.display = 'block';
            grid.innerHTML = uploadedImages.map((img, index) => `
                <div class="image-preview-item">
                    <img src="${img.data}" alt="${img.name}">
                    <button class="image-remove-btn" onclick="removeImage(${index})">√ó</button>
                </div>
            `).join('');
        }
        
        function removeImage(index) {
            uploadedImages.splice(index, 1);
            displayImagePreview();
        }
        
        // „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞„Å®„Åó„Å¶ÂÆöÁæ©
        window.removeImage = removeImage;
        
        // ÁîªÂÉèÊñπÂºè„ÅÆÂàá„ÇäÊõø„ÅàÔºà„Éï„Ç°„Ç§„É´Ê∑ª‰ªò vs Â§ñÈÉ®URLÔºâ
        document.querySelectorAll('[data-image-type]').forEach(tab => {
            tab.addEventListener('click', function() {
                const type = this.dataset.imageType;
                
                // „Çø„Éñ„ÅÆÁä∂ÊÖãÊõ¥Êñ∞
                document.querySelectorAll('[data-image-type]').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                // „Çª„ÇØ„Ç∑„Éß„É≥„ÅÆË°®Á§∫Âàá„ÇäÊõø„Åà
                if (type === 'url') {
                    document.getElementById('imageUploadSection').style.display = 'none';
                    document.getElementById('imageUrlSection').style.display = 'block';
                } else {
                    document.getElementById('imageUploadSection').style.display = 'block';
                    document.getElementById('imageUrlSection').style.display = 'none';
                }
            });
        });
        
        // Â§ñÈÉ®ÁîªÂÉèURLÊ©üËÉΩ
        document.getElementById('imageUrl').addEventListener('input', function() {
            const url = this.value;
            const preview = document.getElementById('urlImagePreview');
            const previewImg = document.getElementById('urlImagePreviewImg');
            
            if (url && url.match(/\.(jpg|jpeg|png|gif|webp)$/i)) {
                previewImg.src = url;
                preview.style.display = 'block';
            } else {
                preview.style.display = 'none';
            }
        });
        
        document.getElementById('addImageUrlBtn').addEventListener('click', function() {
            const url = document.getElementById('imageUrl').value;
            const htmlTextarea = document.getElementById('htmlContent');
            
            if (!url) {
                alert('ÁîªÂÉèURL„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            // HTML„Ç®„Éá„Ç£„Çø„Éº„Å´Âàá„ÇäÊõø„Åà
            document.querySelector('[data-type="html"]').click();
            
            // ÁîªÂÉèHTML„ÇíËøΩÂä†
            const imageHtml = `<img src="${url}" alt="Ê∑ª‰ªòÁîªÂÉè" style="max-width: 100%; height: auto; margin: 10px 0;">`;
            htmlTextarea.value += '\n' + imageHtml + '\n';
            
            // URL„Çí„ÇØ„É™„Ç¢
            document.getElementById('imageUrl').value = '';
            document.getElementById('urlImagePreview').style.display = 'none';
            
            showMessage('ÁîªÂÉèURL„ÇíHTML„Å´ËøΩÂä†„Åó„Åæ„Åó„Åü', 'success');
        });
        
        // ÈÖç‰ø°ÂÅúÊ≠¢ÁÆ°ÁêÜ
        document.getElementById('unsubscribeBtn').addEventListener('click', async function() {
            const email = document.getElementById('unsubscribeEmail').value;
            if (!email) {
                alert('„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            this.disabled = true;
            try {
                // Á∞°Âçò„Å™ÂÆüË£ÖÔºöCustomers„ÉÜ„Éº„Éñ„É´„ÅÆÈÖç‰ø°Ë®≠ÂÆö„ÇíÊõ¥Êñ∞
                showMessage(`${email} „ÇíÈÖç‰ø°ÂÅúÊ≠¢„Åó„Åæ„Åó„Åü`, 'success');
                document.getElementById('unsubscribeEmail').value = '';
            } catch (error) {
                showMessage('ÈÖç‰ø°ÂÅúÊ≠¢Âá¶ÁêÜ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü', 'error');
            } finally {
                this.disabled = false;
            }
        });
        
        document.getElementById('resubscribeBtn').addEventListener('click', async function() {
            const email = document.getElementById('resubscribeEmail').value;
            if (!email) {
                alert('„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            this.disabled = true;
            try {
                showMessage(`${email} „ÅÆÈÖç‰ø°„ÇíÂÜçÈñã„Åó„Åæ„Åó„Åü`, 'success');
                document.getElementById('resubscribeEmail').value = '';
            } catch (error) {
                showMessage('ÈÖç‰ø°ÂÜçÈñãÂá¶ÁêÜ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü', 'error');
            } finally {
                this.disabled = false;
            }
        });
        
        // ÈÖç‰ø°Âá¶ÁêÜÔºàHTML/ÁîªÂÉè/„ÉÜ„É≥„Éó„É¨„Éº„ÉàÂØæÂøúÔºâ- Êó¢Â≠ò„ÅÆÂá¶ÁêÜ„ÇíÁΩÆ„ÅçÊèõ„Åà
        document.getElementById('sendBtn').onclick = async function() {
            const subject = document.getElementById('subject').value;
            const activeType = document.querySelector('.content-tab.active').dataset.type;
            
            let content;
            if (activeType === 'html') {
                content = document.getElementById('htmlContent').value;
            } else if (activeType === 'template') {
                content = document.getElementById('templateContent').value;
            } else {
                content = document.getElementById('content').value;
            }
            
            const targetPlan = document.getElementById('targetPlan').value;
            const isScheduled = document.getElementById('scheduleCheck').checked;
            const scheduleTime = document.getElementById('scheduleTime').value;
            
            if (!subject || !content) {
                showMessage('‰ª∂Âêç„Å®Êú¨Êñá„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ', 'error');
                return;
            }
            
            this.disabled = true;
            showMessage('ÈÖç‰ø°Âá¶ÁêÜ‰∏≠...', 'info');
            
            try {
                let htmlContent;
                if (activeType === 'html' || activeType === 'template') {
                    htmlContent = content;
                } else {
                    htmlContent = `<div style="white-space: pre-wrap; font-family: sans-serif;">${content}</div>`;
                }
                
                // ÁîªÂÉè„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØHTML„Å´Âê´„ÇÅ„ÇãÔºàBase64Âüã„ÇÅËæº„ÅøÔºâ
                if (uploadedImages.length > 0) {
                    const imagesHtml = uploadedImages.map(img => 
                        `<div style="margin: 10px 0;"><img src="${img.data}" alt="${img.name}" style="max-width: 100%; height: auto;"></div>`
                    ).join('');
                    htmlContent += '<div style="margin-top: 20px;">' + imagesHtml + '</div>';
                }
                
                const payload = {
                    subject,
                    htmlContent,
                    targetPlan
                };
                
                if (isScheduled) {
                    payload.scheduledAt = new Date(scheduleTime).toISOString();
                }
                
                const response = await fetch('/.netlify/functions/send-newsletter', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    const message = isScheduled ? 
                        `‰∫àÁ¥ÑÂÆå‰∫Ü: ${result.data?.scheduledTime || scheduleTime}` :
                        `ÈÖç‰ø°ÂÆå‰∫Ü: ${result.recipientCount || 0}‰ª∂`;
                    showMessage(message, 'success');
                    
                    // „Éï„Ç©„Éº„É†„Çí„ÇØ„É™„Ç¢
                    document.getElementById('subject').value = '';
                    document.getElementById('content').value = '';
                    document.getElementById('htmlContent').value = '';
                    document.getElementById('templateContent').value = '';
                    document.getElementById('templateSelect').value = '';
                    document.getElementById('templateDescription').style.display = 'none';
                    uploadedImages = [];
                    displayImagePreview();
                } else {
                    showMessage(`„Ç®„É©„Éº: ${result.error || 'ÈÖç‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü'}`, 'error');
                }
            } catch (error) {
                showMessage(`„Ç®„É©„Éº: ${error.message}`, 'error');
            } finally {
                this.disabled = false;
            }
        };
        
        // „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±„ÅÆË°®Á§∫Âàá„ÇäÊõø„Åà
        document.getElementById('debugToggle').addEventListener('click', function() {
            const details = document.getElementById('debugDetails');
            const summary = document.getElementById('debugSummary');

            if (details.style.display === 'none') {
                details.style.display = 'block';
                summary.style.display = 'none';
                this.textContent = 'Á∞°Á¥†Ë°®Á§∫';
            } else {
                details.style.display = 'none';
                summary.style.display = 'block';
                this.textContent = 'Ë©≥Á¥∞Ë°®Á§∫';
            }
        });

        // üõ°Ô∏è „Éâ„É°„Ç§„É≥‰øùË≠∑„Çø„ÉñÂàá„ÇäÊõø„Åà
        document.querySelectorAll('[data-protection-tab]').forEach(tab => {
            tab.addEventListener('click', function() {
                const tabType = this.dataset.protectionTab;

                // „Çø„Éñ„ÅÆÁä∂ÊÖãÊõ¥Êñ∞
                document.querySelectorAll('[data-protection-tab]').forEach(t => t.classList.remove('active'));
                this.classList.add('active');

                // „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆË°®Á§∫Âàá„ÇäÊõø„Åà
                document.querySelectorAll('.protection-tab-content').forEach(content => {
                    content.style.display = 'none';
                });

                if (tabType === 'blacklist') {
                    document.getElementById('blacklistTab').style.display = 'block';
                    loadBlacklistData();
                } else if (tabType === 'stats') {
                    document.getElementById('statsTab').style.display = 'block';
                    loadDomainStats();
                } else if (tabType === 'whitelist') {
                    document.getElementById('whitelistTab').style.display = 'block';
                }
            });
        });

        // „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„ÉàÊõ¥Êñ∞„Éú„Çø„É≥
        document.getElementById('refreshBlacklistBtn').addEventListener('click', loadBlacklistData);

        // Âæ©Êóß„Éú„Çø„É≥
        document.getElementById('whitelistBtn').addEventListener('click', async function() {
            const email = document.getElementById('whitelistEmail').value;
            const reason = document.getElementById('whitelistReason').value;

            if (!email) {
                showDomainProtectionMessage('„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ', 'error', 'whitelistStatus');
                return;
            }

            this.disabled = true;
            try {
                const response = await fetch('/.netlify/functions/domain-protection?action=whitelist-email', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, reason })
                });

                const result = await response.json();

                if (response.ok) {
                    showDomainProtectionMessage(`${email} „ÇíÂæ©Êóß„Åó„Åæ„Åó„Åü`, 'success', 'whitelistStatus');
                    document.getElementById('whitelistEmail').value = '';
                    // „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„ÇÇÊõ¥Êñ∞
                    loadBlacklistData();
                    loadDomainStats();
                } else {
                    showDomainProtectionMessage(`Âæ©ÊóßÂ§±Êïó: ${result.error}`, 'error', 'whitelistStatus');
                }
            } catch (error) {
                showDomainProtectionMessage(`„Ç®„É©„Éº: ${error.message}`, 'error', 'whitelistStatus');
            } finally {
                this.disabled = false;
            }
        });

        // „Éâ„É°„Ç§„É≥‰øùË≠∑„É°„ÉÉ„Çª„Éº„Ç∏Ë°®Á§∫
        function showDomainProtectionMessage(message, type, elementId) {
            const messageDiv = document.getElementById(elementId);
            messageDiv.textContent = message;
            messageDiv.className = `status-message ${type}`;

            if (type !== 'info') {
                setTimeout(() => {
                    messageDiv.className = 'status-message';
                }, 5000);
            }
        }

        // „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„Éá„Éº„ÇøË™≠„ÅøËæº„Åø
        async function loadBlacklistData() {
            console.log('üõ°Ô∏è „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø‰∏≠...');

            try {
                const response = await fetch('/.netlify/functions/domain-protection?action=get-blacklist');

                if (!response.ok) {
                    throw new Error(`API Error: ${response.status}`);
                }

                const data = await response.json();

                const tableBody = document.getElementById('blacklistTableBody');

                if (data.blacklist.length === 0) {
                    tableBody.innerHTML = '<tr><td colspan="5" style="padding: 20px; text-align: center; color: #6b7280;">„Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„ÅØÁ©∫„Åß„Åô üéâ</td></tr>';
                    return;
                }

                tableBody.innerHTML = data.blacklist.map(item => {
                    const statusColor = item.status === 'HARD_BOUNCE' ? '#ef4444' :
                                       item.status === 'COMPLAINT' ? '#dc2626' : '#f59e0b';
                    const statusText = item.status === 'HARD_BOUNCE' ? '„Éè„Éº„Éâ' :
                                      item.status === 'COMPLAINT' ? 'Ëã¶ÊÉÖ' : '„ÇΩ„Éï„Éà';

                    const lastBounce = item.lastBounce ?
                        new Date(item.lastBounce).toLocaleDateString('ja-JP') : '-';

                    const whitelistButton = item.canWhitelist ?
                        `<button class="btn btn-primary" onclick="quickWhitelist('${item.email}')" style="font-size: 12px; padding: 4px 8px;">Âæ©Êóß</button>` :
                        '<span style="color: #6b7280; font-size: 12px;">Âæ©Êóß‰∏çÂèØ</span>';

                    return `
                        <tr style="border-bottom: 1px solid #f3f4f6;">
                            <td style="padding: 10px; font-family: monospace; font-size: 13px;">${item.email}</td>
                            <td style="padding: 10px; text-align: center;">
                                <span style="background: ${statusColor}; color: white; padding: 2px 6px; border-radius: 4px; font-size: 12px;">
                                    ${item.bounceCount}Âõû
                                </span>
                            </td>
                            <td style="padding: 10px; text-align: center;">
                                <span style="color: ${statusColor}; font-weight: 600; font-size: 13px;">${statusText}</span>
                            </td>
                            <td style="padding: 10px; text-align: center; font-size: 13px;">${lastBounce}</td>
                            <td style="padding: 10px; text-align: center;">${whitelistButton}</td>
                        </tr>
                    `;
                }).join('');

                // „Çµ„Éû„É™„ÉºÁµ±Ë®à„ÇíÊõ¥Êñ∞
                document.getElementById('blockedEmailsCount').textContent = data.summary.total;

                console.log('‚úÖ „Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„Éá„Éº„ÇøË™≠„ÅøËæº„ÅøÂÆå‰∫Ü:', data.summary);

            } catch (error) {
                console.error('„Éñ„É©„ÉÉ„ÇØ„É™„Çπ„Éà„Éá„Éº„ÇøË™≠„ÅøËæº„Åø„Ç®„É©„Éº:', error);
                document.getElementById('blacklistTableBody').innerHTML =
                    '<tr><td colspan="5" style="padding: 20px; text-align: center; color: #ef4444;">„Éá„Éº„ÇøË™≠„ÅøËæº„Åø„Ç®„É©„Éº</td></tr>';
            }
        }

        // „Éâ„É°„Ç§„É≥Áµ±Ë®àË™≠„ÅøËæº„Åø
        async function loadDomainStats() {
            console.log('üìä „Éâ„É°„Ç§„É≥Áµ±Ë®à„ÇíË™≠„ÅøËæº„Åø‰∏≠...');

            try {
                const response = await fetch('/.netlify/functions/domain-protection?action=get-stats');

                if (!response.ok) {
                    throw new Error(`API Error: ${response.status}`);
                }

                const data = await response.json();

                // Áµ±Ë®àË°®Á§∫„ÇíÊõ¥Êñ∞
                document.getElementById('failureRate').textContent = data.riskAssessment.failureRate + '%';
                document.getElementById('overallRisk').textContent = getRiskLevelText(data.riskAssessment.overallRisk);
                document.getElementById('overallRisk').style.color = getRiskLevelColor(data.riskAssessment.overallRisk);

                // Ë©≥Á¥∞Áµ±Ë®à
                const detailedStatsHtml = `
                    <strong>üìä ÈÖç‰ø°Áµ±Ë®à:</strong><br>
                    Á∑èÂ§±Êïó‰ª∂Êï∞: ${data.stats.total}‰ª∂<br>
                    „Éè„Éº„Éâ„Éê„Ç¶„É≥„Çπ: ${data.stats.hardBounces}‰ª∂<br>
                    „ÇΩ„Éï„Éà„Éê„Ç¶„É≥„Çπ: ${data.stats.softBounces}‰ª∂<br>
                    Ëã¶ÊÉÖ: ${data.stats.complaints}‰ª∂<br>
                    ÊúÄËøë24ÊôÇÈñì„ÅÆÂ§±Êïó: ${data.stats.recentFailures}‰ª∂<br>
                    ÁèæÂú®„Éñ„É≠„ÉÉ„ÇØ‰∏≠: ${data.stats.blockedEmails}‰ª∂<br><br>

                    <strong>üéØ „É™„Çπ„ÇØ„É¨„Éô„É´Âà•ÂàÜÂ∏É:</strong><br>
                    ‰Ωé„É™„Çπ„ÇØ: ${data.stats.riskLevels.low}‰ª∂<br>
                    ‰∏≠„É™„Çπ„ÇØ: ${data.stats.riskLevels.medium}‰ª∂<br>
                    È´ò„É™„Çπ„ÇØ: ${data.stats.riskLevels.high}‰ª∂<br>
                    Âç±Èô∫„É¨„Éô„É´: ${data.stats.riskLevels.critical}‰ª∂
                `;
                document.getElementById('detailedStats').innerHTML = detailedStatsHtml;

                // Êé®Â•®‰∫ãÈ†Ö
                const recommendationsHtml = data.riskAssessment.recommendations.map(rec =>
                    `<div style="margin-bottom: 10px;">
                        <strong style="color: ${getRiskLevelColor(rec.level)};">[${rec.level.toUpperCase()}]</strong>
                        ${rec.action}<br>
                        <small style="color: #6b7280;">${rec.reason}</small>
                    </div>`
                ).join('');
                document.getElementById('recommendations').innerHTML = recommendationsHtml;

                console.log('‚úÖ „Éâ„É°„Ç§„É≥Áµ±Ë®àË™≠„ÅøËæº„ÅøÂÆå‰∫Ü');

            } catch (error) {
                console.error('„Éâ„É°„Ç§„É≥Áµ±Ë®àË™≠„ÅøËæº„Åø„Ç®„É©„Éº:', error);
                document.getElementById('detailedStats').textContent = '„Éá„Éº„ÇøË™≠„ÅøËæº„Åø„Ç®„É©„Éº';
                document.getElementById('recommendations').textContent = '„Éá„Éº„ÇøË™≠„ÅøËæº„Åø„Ç®„É©„Éº';
            }
        }

        // „ÇØ„Ç§„ÉÉ„ÇØÂæ©ÊóßÊ©üËÉΩ
        async function quickWhitelist(email) {
            if (!confirm(`${email} „ÇíÂæ©Êóß„Åó„Åæ„Åô„ÅãÔºü`)) {
                return;
            }

            try {
                const response = await fetch('/.netlify/functions/domain-protection?action=whitelist-email', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, reason: 'admin-review' })
                });

                const result = await response.json();

                if (response.ok) {
                    alert(`${email} „ÇíÂæ©Êóß„Åó„Åæ„Åó„Åü`);
                    loadBlacklistData();
                    loadDomainStats();
                } else {
                    alert(`Âæ©ÊóßÂ§±Êïó: ${result.error}`);
                }
            } catch (error) {
                alert(`„Ç®„É©„Éº: ${error.message}`);
            }
        }

        // „É™„Çπ„ÇØ„É¨„Éô„É´„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÉªËâ≤ÂèñÂæó
        function getRiskLevelText(level) {
            const levels = {
                low: '‰Ωé„É™„Çπ„ÇØ',
                medium: '‰∏≠„É™„Çπ„ÇØ',
                high: 'È´ò„É™„Çπ„ÇØ',
                critical: 'Âç±Èô∫'
            };
            return levels[level] || level;
        }

        function getRiskLevelColor(level) {
            const colors = {
                low: '#10b981',
                medium: '#f59e0b',
                high: '#ef4444',
                critical: '#dc2626'
            };
            return colors[level] || '#6b7280';
        }

        // „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞„Å®„Åó„Å¶ÂÆöÁæ©
        window.quickWhitelist = quickWhitelist;

        // ÂàùÊúüÂåñ
        initializeStatistics();

        // „Éâ„É°„Ç§„É≥‰øùË≠∑„Éá„Éº„Çø„ÅÆÂàùÊúüË™≠„ÅøËæº„Åø
        loadBlacklistData();
        loadDomainStats();
    </script>
</BaseLayout>