---
export const prerender = true;
import BaseLayout from '../layouts/BaseLayout.astro';
import AccessControl from '../components/AccessControl.astro';
import allRacesData from '../data/allRacesPrediction.json';
import { processRaceData, getHorseConfidenceFromMark } from '../lib/shared-prediction-logic.js';

// 共有ロジックを使用してデータを処理
const { sortedRaces } = processRaceData(allRacesData);

// 日付と会場を取得
const raceDate = allRacesData.raceDate;
const track = allRacesData.track;
const totalRaces = allRacesData.totalRaces || 12;

// 日付を日本語形式に変換
const [year, month, day] = raceDate.split('-');
const formattedDate = `${year}年${parseInt(month)}月${parseInt(day)}日`;

/**
 * 買い目から馬番を抽出してスコアでソート
 */
function extractAndSortBets(bets, allHorses) {
    const betList = [];

    // 買い目文字列を解析
    bets.forEach(bet => {
        // オブジェクトの場合はnumbersプロパティから文字列を取得
        const betStr = typeof bet === 'string' ? bet : bet.numbers;
        if (!betStr) return;

        // "8 → 7,2,5　3点" の形式をパース
        const match = betStr.match(/(.+?)\s+[→⇔]\s+(.+?)(?:\s+(\d+)点)?/);
        if (!match) return;

        const [, first, second] = match;
        const firstNums = first.split(',').map(n => parseInt(n.trim()));
        const secondNums = second.split(',').map(n => parseInt(n.trim()));

        // 双方向チェック
        const isBidirectional = betStr.includes('⇔');

        // 買い目展開
        firstNums.forEach(f => {
            secondNums.forEach(s => {
                // 🛡️ 復活防止対策: 同じ馬番同士の買い目を除外（例: 1 → 1）
                if (f === s) return;

                const horse1 = allHorses.find(h => h.number === f);
                const horse2 = allHorses.find(h => h.number === s);
                const avgScore = ((horse1?.confidence || 0) + (horse2?.confidence || 0)) / 2;

                betList.push({
                    display: `${f} → ${s}`,
                    score: avgScore,
                    originalBet: betStr
                });

                // 双方向の場合は逆も追加
                if (isBidirectional && f !== s) {
                    betList.push({
                        display: `${s} → ${f}`,
                        score: avgScore,
                        originalBet: betStr
                    });
                }
            });
        });
    });

    // スコアでソート（降順）
    betList.sort((a, b) => b.score - a.score);

    return betList;
}

/**
 * Premium Select専用買い目生成
 * 累積スコアに基づく戦略ミックス
 */
function generatePremiumSelectBets(raceData) {
    const horses = raceData.horses || {};
    const strategies = raceData.strategies || {};

    // 全馬リスト
    const allHorses = [
        horses.main,
        horses.sub,
        ...(horses.hole1 ? [horses.hole1] : []),
        ...(horses.hole2 ? [horses.hole2] : []),
        ...(horses.minor || []),
        ...(horses.choices || []),
        ...(horses.extras || []),
        ...(horses.low || []),
        ...(horses.other || [])
    ].filter(Boolean);

    // 本命の累積スコア取得
    const mainScore = horses.main?.confidence || getHorseConfidenceFromMark(horses.main) || 0;

    let selectedBets = [];
    let targetPoints = 5;
    let strategyType = '';

    if (mainScore >= 89) {
        // 89pt以上: 少点数型 + バランス型ミックス → 上位5点
        strategyType = '🎯 少点数型+バランス型ミックス（上位5点）';
        const safeBets = strategies.safe?.bets || [];
        const balanceBets = strategies.balance?.bets || [];
        const mixedBets = extractAndSortBets([...safeBets, ...balanceBets], allHorses);
        selectedBets = mixedBets.slice(0, 5);
        targetPoints = 5;

    } else if (mainScore === 88) {
        // 🛡️ 復活防止対策: 88pt少点数型寄りは、少点数戦略だけでは点数不足の場合がある
        // 解決策: 少点数戦略 + バランス型戦略をミックスして確実に7点確保
        strategyType = '🎯 少点数型寄り（上位7点）';
        const safeBets = strategies.safe?.bets || [];
        const balanceBets = strategies.balance?.bets || [];
        const mixedBets = extractAndSortBets([...safeBets, ...balanceBets], allHorses);
        selectedBets = mixedBets.slice(0, 7);
        targetPoints = 7;

    } else if (mainScore === 87) {
        // 🛡️ 復活防止対策: 87ptバランス型も、戦略1つだけでは点数不足の場合がある
        // 解決策: バランス型 + 少点数型戦略をミックスして確実に10点確保
        strategyType = '⚖️ バランス型（上位10点）';
        const balanceBets = strategies.balance?.bets || [];
        const safeBets = strategies.safe?.bets || [];
        const mixedBets = extractAndSortBets([...balanceBets, ...safeBets], allHorses);
        selectedBets = mixedBets.slice(0, 10);
        targetPoints = 10;

    } else if (mainScore === 86) {
        // 86pt: バランス型 + 高配当型ミックス → 10点
        strategyType = '⚖️ バランス型+高配当型ミックス（10点）';
        const balanceBets = strategies.balance?.bets || [];
        const aggressiveBets = strategies.aggressive?.bets || [];
        const mixedBets = extractAndSortBets([...balanceBets, ...aggressiveBets], allHorses);
        selectedBets = mixedBets.slice(0, 10);
        targetPoints = 10;

    } else if (mainScore <= 85 && mainScore > 0) {
        // 🛡️ 復活防止対策: 85pt以下高配当型も、戦略1つだけでは点数不足の場合がある
        // 解決策: 高配当型 + バランス型戦略をミックスして確実に10点確保
        strategyType = '🔥 高配当型（上位10点）';
        const aggressiveBets = strategies.aggressive?.bets || [];
        const balanceBets = strategies.balance?.bets || [];
        const mixedBets = extractAndSortBets([...aggressiveBets, ...balanceBets], allHorses);
        selectedBets = mixedBets.slice(0, 10);
        targetPoints = 10;

    } else {
        // スコア不明の場合はバランス型
        strategyType = '⚖️ バランス型（デフォルト）';
        const balanceBets = strategies.balance?.bets || [];
        const sortedBets = extractAndSortBets(balanceBets, allHorses);
        selectedBets = sortedBets.slice(0, 10);
        targetPoints = 10;
    }

    return {
        strategyType,
        mainScore,
        selectedBets,
        targetPoints
    };
}

// 全レースの買い目生成
const premiumSelectRaces = sortedRaces.map(raceData => {
    const result = generatePremiumSelectBets(raceData);
    return {
        ...raceData,
        premiumSelect: result
    };
});

---

<BaseLayout
    title={`プレミアムセレクト予想 | ${track} ${formattedDate}`}
    description={`AI技術による${track}競馬の超厳選予想。累積スコアに基づく戦略ミックスで最適な買い目のみを提供。`}
>
    <AccessControl requiredPlan="premium">
        <div class="page-container">
            <!-- ヘッダーセクション -->
            <div class="header-section">
                <div class="ai-badge premium-select-badge">
                    <span class="pulse"></span>
                    <span class="ai-status">✨ Premium Select</span>
                </div>
                <h1 class="race-title">{formattedDate} {track} - Premium Select 厳選予想</h1>
                <div class="premium-select-description">
                    <p class="select-intro">
                        累積スコアに基づき、<strong>3つの戦略を自動ミックス</strong>。
                        各レースごとに<strong>最適な買い目のみ</strong>を厳選してお届けします。
                    </p>
                </div>
                <div class="ai-metrics">
                    <div class="metric">
                        <div class="metric-value">{totalRaces}</div>
                        <div class="metric-label">厳選レース</div>
                    </div>
                    <div class="metric">
                        <div class="metric-value">戦略ミックス</div>
                        <div class="metric-label">AI自動選択</div>
                    </div>
                    <div class="metric">
                        <div class="metric-value">5-10点</div>
                        <div class="metric-label">厳選買い目数</div>
                    </div>
                    <div class="metric">
                        <div class="metric-value">¥30,000/月</div>
                        <div class="metric-label">Premium会員専用</div>
                    </div>
                </div>
            </div>

            <!-- 特徴説明セクション -->
            <div class="feature-explanation">
                <h3 class="feature-title">🎯 Premium Selectの特徴</h3>
                <div class="feature-grid">
                    <div class="feature-card">
                        <span class="feature-icon">🤖</span>
                        <h4>累積スコアベース自動判定</h4>
                        <p>89pt以上は少点数型+バランス型、85pt以下は高配当型など、AIが自動で最適戦略を選択</p>
                    </div>
                    <div class="feature-card">
                        <span class="feature-icon">🎨</span>
                        <h4>戦略ミックス</h4>
                        <p>単一戦略ではなく、複数戦略の買い目を組み合わせ、上位スコアのみ抽出</p>
                    </div>
                    <div class="feature-card">
                        <span class="feature-icon">📊</span>
                        <h4>買い目厳選</h4>
                        <p>5-10点に絞り込み、的中率と購入負担のバランスを最適化</p>
                    </div>
                </div>
            </div>

            <!-- フローティングレースセレクター（右下固定） -->
            <div class="floating-race-selector">
                <button class="floating-selector-toggle" id="raceSelectorToggle">
                    <span class="toggle-icon">🏇</span>
                    <span class="toggle-text">レース選択</span>
                </button>
                <div class="floating-selector-menu" id="raceSelectorMenu" style="display: none;">
                    <div class="selector-header">📍 レースを選択</div>
                    <div class="selector-grid">
                        {premiumSelectRaces.map((raceData) => (
                            <button
                                class="selector-race-btn"
                                data-race-number={raceData.raceNumber}
                                onclick={`document.getElementById('race-${raceData.raceNumber}').scrollIntoView({behavior: 'smooth', block: 'start'}); document.getElementById('raceSelectorMenu').style.display = 'none';`}
                            >
                                {raceData.raceNumber}
                            </button>
                        ))}
                    </div>
                </div>
            </div>

            <!-- 全レース予想 -->
            <div class="races-container">
                {premiumSelectRaces.map((raceData, index) => {
                    const premiumSelect = raceData.premiumSelect;
                    const horses = raceData.horses;
                    const strategies = raceData.strategies;

                    return (
                        <div class="race-card" id={`race-${raceData.raceNumber}`}>
                            <div class="race-header">
                                <div class="race-number">{raceData.raceNumber}</div>
                                <div class="race-info">
                                    <h3 class="race-name">{raceData.raceName}</h3>
                                </div>
                            </div>

                            <!-- AI選出馬分析（最初に配置） -->
                            <div class="analysis-section">
                                <h4 class="section-title">🤖 AIモデル選出馬 - 詳細分析</h4>

                                {/* 本命（最も大きく表示） */}
                                {horses.main && (
                                    <div class="horse-card horse-card-main">
                                        <div class="horse-header">
                                            <span class="horse-mark-main">◎</span>
                                            <span class="horse-number-main">{horses.main.number}</span>
                                            <span class="horse-name-main">{horses.main.name}</span>
                                            <span class="horse-type-main">本命</span>
                                        </div>
                                        <div class="ai-factors">
                                            {horses.main.factors && horses.main.factors.filter(factor =>
                                                factor.text.includes('累積スコア') ||
                                                factor.text.includes('総合評価')
                                            ).map(factor => (
                                                <div class="factor">
                                                    <span class="factor-icon">{factor.icon}</span>
                                                    <span>{factor.text}</span>
                                                </div>
                                            ))}
                                        </div>
                                        {horses.main.importance && (
                                            <div class="feature-importance">
                                                <h5 style="color: #94a3b8; font-size: 0.9rem; margin-bottom: 10px;">特徴量重要度</h5>
                                                {horses.main.importance.map(item => (
                                                    <div class="importance-bar">
                                                        <span class="importance-label">{item.label}</span>
                                                        <div class="importance-value">
                                                            <div class="importance-fill" style={`width: ${item.value * 100}%;`}>{Math.round(item.value * 100)}%</div>
                                                        </div>
                                                    </div>
                                                ))}
                                            </div>
                                        )}
                                    </div>
                                )}

                                {/* 対抗（中サイズ表示） */}
                                {horses.sub && (
                                    <div class="horse-card horse-card-sub">
                                        <div class="horse-header">
                                            <span class="horse-mark-sub">○</span>
                                            <span class="horse-number-sub">{horses.sub.number}</span>
                                            <span class="horse-name-sub">{horses.sub.name}</span>
                                            <span class="horse-type-sub">対抗</span>
                                        </div>
                                        <div class="ai-factors">
                                            {horses.sub.factors && horses.sub.factors.filter(factor =>
                                                factor.text.includes('累積スコア') ||
                                                factor.text.includes('総合評価')
                                            ).map(factor => (
                                                <div class="factor">
                                                    <span class="factor-icon">{factor.icon}</span>
                                                    <span>{factor.text}</span>
                                                </div>
                                            ))}
                                        </div>
                                        {horses.sub.importance && (
                                            <div class="feature-importance">
                                                <h5 style="color: #94a3b8; font-size: 0.9rem; margin-bottom: 10px;">特徴量重要度</h5>
                                                {horses.sub.importance.map(item => (
                                                    <div class="importance-bar">
                                                        <span class="importance-label">{item.label}</span>
                                                        <div class="importance-value">
                                                            <div class="importance-fill" style={`width: ${item.value * 100}%;`}>{Math.round(item.value * 100)}%</div>
                                                        </div>
                                                    </div>
                                                ))}
                                            </div>
                                        )}
                                    </div>
                                )}

                                {/* 単穴1（中サイズ表示） */}
                                {horses.hole1 && (
                                    <div class="horse-card horse-card-sub">
                                        <div class="horse-header">
                                            <span class="horse-mark-sub">▲</span>
                                            <span class="horse-number-sub">{horses.hole1.number}</span>
                                            <span class="horse-name-sub">{horses.hole1.name}</span>
                                            <span class="horse-type-hole">単穴</span>
                                        </div>
                                        <div class="ai-factors">
                                            {horses.hole1.factors && horses.hole1.factors.filter(factor =>
                                                factor.text.includes('累積スコア') ||
                                                factor.text.includes('総合評価')
                                            ).map(factor => (
                                                <div class="factor">
                                                    <span class="factor-icon">{factor.icon}</span>
                                                    <span>{factor.text}</span>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                )}

                                {/* 単穴2（中サイズ表示） */}
                                {horses.hole2 && (
                                    <div class="horse-card horse-card-sub">
                                        <div class="horse-header">
                                            <span class="horse-mark-sub">▲</span>
                                            <span class="horse-number-sub">{horses.hole2.number}</span>
                                            <span class="horse-name-sub">{horses.hole2.name}</span>
                                            <span class="horse-type-hole">単穴</span>
                                        </div>
                                        <div class="ai-factors">
                                            {horses.hole2.factors && horses.hole2.factors.filter(factor =>
                                                factor.text.includes('累積スコア') ||
                                                factor.text.includes('総合評価')
                                            ).map(factor => (
                                                <div class="factor">
                                                    <span class="factor-icon">{factor.icon}</span>
                                                    <span>{factor.text}</span>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                )}

                                {/* 連下候補馬（まとめて表示） */}
                                {horses.connect && horses.connect.length > 0 && (
                                    <div class="horse-card horse-card-minor">
                                        <div class="horse-header">
                                            <span class="horse-mark-minor">△</span>
                                            <span class="minor-title">連下候補馬</span>
                                        </div>
                                        <div class="horse-grid">
                                            {horses.connect.map(horse => {
                                                const scoreText = horse.factors?.find(f => f.text.includes('累積スコア'))?.text;
                                                const score = scoreText ? scoreText.match(/\d+/)?.[0] : '';
                                                return (
                                                    <div class="horse-grid-item">
                                                        <span class="horse-number-small">{horse.number}</span>
                                                        <span class="horse-name-small">{horse.name}{score ? ` (${score}pt)` : ''}</span>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                    </div>
                                )}

                                {/* 抑え候補馬（まとめて表示） */}
                                {horses.reserve && horses.reserve.length > 0 && (
                                    <div class="horse-card horse-card-minor">
                                        <div class="horse-header">
                                            <span class="horse-mark-minor">×</span>
                                            <span class="minor-title">抑え候補馬</span>
                                        </div>
                                        <div class="horse-grid">
                                            {horses.reserve.map(horse => {
                                                const scoreText = horse.factors?.find(f => f.text.includes('累積スコア'))?.text;
                                                const score = scoreText ? scoreText.match(/\d+/)?.[0] : '';
                                                return (
                                                    <div class="horse-grid-item">
                                                        <span class="horse-number-small">{horse.number}</span>
                                                        <span class="horse-name-small">{horse.name}{score ? ` (${score}pt)` : ''}</span>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                    </div>
                                )}
                            </div>

                            <!-- Premium Select絞り込みボタン -->
                            <button class="premium-select-filter-btn" data-race-index={index}>
                                <span class="filter-icon">🎯</span>
                                <span class="filter-text">Premium Select 絞り込む</span>
                                <span class="filter-arrow">▼</span>
                            </button>

                            <!-- Premium Select厳選買い目（初期非表示・絞り込み後表示） -->
                            <div class="premium-select-highlight" data-race-content={index} style="display: none;">
                                <div class="select-header">
                                    <div class="select-badge">✨ Premium Select 厳選買い目</div>
                                    <div class="select-strategy-type">{premiumSelect.strategyType}</div>
                                </div>

                                <div class="score-display">
                                    <span class="score-label">本命累積スコア:</span>
                                    <span class="score-value">{premiumSelect.mainScore}pt</span>
                                </div>

                                <div class="select-bets-list">
                                    {premiumSelect.selectedBets.map((bet, i) => (
                                        <div class="select-bet-item">
                                            <span class="bet-number">{i + 1}</span>
                                            <span class="bet-display">馬単 {bet.display}</span>
                                            <span class="bet-score">スコア {bet.score.toFixed(1)}</span>
                                        </div>
                                    ))}
                                </div>

                                <div class="total-points-display">
                                    💰 合計: {premiumSelect.targetPoints}点
                                </div>
                            </div>

                            <!-- 3戦略買い目（全表示） -->
                            <div class="three-strategies-section">
                                <h4 class="strategies-title">📊 3戦略買い目（参考・全表示）</h4>

                                {/* 少点数的中型 */}
                                {strategies?.safe && (
                                    <div class="strategy-card">
                                        <div class="strategy-header">🎯 少点数的中型モデル</div>
                                        <div class="strategy-bets">
                                            {strategies.safe.bets.map(bet => {
                                                const betStr = typeof bet === 'string' ? bet : bet.numbers;
                                                return (
                                                    <div class="strategy-bet-item">
                                                        <span class="bet-type">馬単</span>
                                                        <span class="bet-text">{betStr}</span>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                        <div class="strategy-info">
                                            AI予測: {strategies.safe.confidence || strategies.safe.hitRate}%
                                        </div>
                                    </div>
                                )}

                                {/* バランス型 */}
                                {strategies?.balance && (
                                    <div class="strategy-card">
                                        <div class="strategy-header">⚖️ バランス型モデル</div>
                                        <div class="strategy-bets">
                                            {strategies.balance.bets.map(bet => {
                                                const betStr = typeof bet === 'string' ? bet : bet.numbers;
                                                return (
                                                    <div class="strategy-bet-item">
                                                        <span class="bet-type">馬単</span>
                                                        <span class="bet-text">{betStr}</span>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                        <div class="strategy-info">
                                            AI予測: {strategies.balance.confidence || strategies.balance.hitRate}%
                                        </div>
                                    </div>
                                )}

                                {/* 高配当追求型 */}
                                {strategies?.aggressive && (
                                    <div class="strategy-card">
                                        <div class="strategy-header">🔥 高配当追求型モデル</div>
                                        <div class="strategy-bets">
                                            {strategies.aggressive.bets.map(bet => {
                                                const betStr = typeof bet === 'string' ? bet : bet.numbers;
                                                return (
                                                    <div class="strategy-bet-item">
                                                        <span class="bet-type">馬単</span>
                                                        <span class="bet-text">{betStr}</span>
                                                    </div>
                                                );
                                            })}
                                        </div>
                                        <div class="strategy-info">
                                            AI予測: {strategies.aggressive.confidence || strategies.aggressive.hitRate}%
                                        </div>
                                    </div>
                                )}
                            </div>
                        </div>
                    );
                })}
            </div>

            <!-- Stripe Payment Linkは後で追加（Phase 1はmanual） -->
            <div class="upgrade-notice">
                <h3>💎 Premium Select アップグレード</h3>
                <p>現在Premium会員の方は、管理者（nankan.analytics@gmail.com）までお問い合わせください。</p>
                <p><strong>月額¥30,000</strong> で累積スコアベースの厳選買い目をご利用いただけます。</p>
            </div>
        </div>
    </AccessControl>
</BaseLayout>

<style>
    .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    /* 背景パターン強化（ガラスモーフィズム効果を可視化） */
    body {
        background:
            linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, transparent 50%),
            linear-gradient(45deg, rgba(251, 191, 36, 0.05) 0%, transparent 50%),
            linear-gradient(225deg, rgba(16, 185, 129, 0.05) 0%, transparent 50%),
            radial-gradient(circle at 20% 50%, rgba(139, 92, 246, 0.1) 0%, transparent 50%),
            radial-gradient(circle at 80% 50%, rgba(239, 68, 68, 0.1) 0%, transparent 50%),
            #0f172a;
        background-attachment: fixed;
    }

    /* ヘッダーセクション */
    .header-section {
        background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
        border-radius: 16px;
        padding: 40px;
        margin-bottom: 30px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .premium-select-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.25) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        color: rgb(251, 191, 36);
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 400;
        margin-bottom: 20px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 2px 8px rgba(251, 191, 36, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .race-title {
        font-size: 2rem;
        margin-bottom: 20px;
        color: #fff;
    }

    .premium-select-description {
        background: rgba(251, 191, 36, 0.1);
        border-left: 4px solid #fbbf24;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 30px;
    }

    .select-intro {
        color: #e2e8f0;
        font-size: 1.1rem;
        line-height: 1.8;
    }

    .ai-metrics {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 30px;
    }

    .metric {
        text-align: center;
    }

    .metric-value {
        font-size: 1.8rem;
        font-weight: 700;
        color: #fbbf24;
        margin-bottom: 8px;
    }

    .metric-label {
        font-size: 0.9rem;
        color: #94a3b8;
    }

    /* 特徴説明セクション */
    .feature-explanation {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 4px 16px rgba(0, 0, 0, 0.1);
    }

    .feature-title {
        font-size: 1.5rem;
        margin-bottom: 20px;
        color: #fbbf24;
    }

    .feature-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
    }

    .feature-card {
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.15) 0%, rgba(30, 41, 59, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 12px;
        padding: 20px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    .feature-icon {
        font-size: 2rem;
        display: block;
        margin-bottom: 15px;
    }

    .feature-card h4 {
        font-size: 1.1rem;
        margin-bottom: 10px;
        color: #fbbf24;
    }

    .feature-card p {
        color: #cbd5e1;
        font-size: 0.9rem;
        line-height: 1.6;
    }

    /* レースカード */
    .races-container {
        display: flex;
        flex-direction: column;
        gap: 25px;
    }

    .race-card {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 30px;
        box-shadow:
            inset 0 0 0 0.5px rgba(59, 130, 246, 0.4),
            0 4px 16px rgba(0, 0, 0, 0.1);
    }

    .race-header {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
    }

    .race-number {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.15) 0%, rgba(37, 99, 235, 0.25) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        color: rgb(96, 165, 250);
        padding: 10px 20px;
        border-radius: 12px;
        font-weight: 400;
        font-size: 1.2rem;
        box-shadow:
            inset 0 0 0 0.5px rgba(96, 165, 250, 0.5),
            0 2px 8px rgba(96, 165, 250, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .race-name {
        color: #e2e8f0;
        font-size: 1.1rem;
    }

    .strategy-type-badge {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.25) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        color: rgb(251, 191, 36);
        padding: 12px 20px;
        border-radius: 12px;
        font-weight: 400;
        font-size: 1.1rem;
        margin-bottom: 20px;
        display: inline-block;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 2px 8px rgba(251, 191, 36, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .score-display {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.2) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 8px;
        padding: 12px 16px;
        margin-bottom: 20px;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.4),
            0 2px 8px rgba(251, 191, 36, 0.15);
    }

    .score-label {
        color: #cbd5e1;
        font-size: 0.95rem;
    }

    .score-value {
        color: rgb(251, 191, 36);
        font-weight: 400;
        font-size: 1.2rem;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    /* Premium Select絞り込みボタン */
    .premium-select-filter-btn {
        width: 100%;
        background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
        border: none;
        border-radius: 12px;
        padding: 18px 25px;
        margin-bottom: 20px;
        color: #000;
        font-size: 1.1rem;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
        box-shadow: 0 4px 15px rgba(251, 191, 36, 0.3);
    }

    .premium-select-filter-btn:hover {
        background: linear-gradient(135deg, #f59e0b 0%, #ea580c 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(245, 158, 11, 0.4);
    }

    .premium-select-filter-btn:active {
        transform: translateY(0);
    }

    .premium-select-filter-btn.filtering {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        animation: pulse 1s ease-in-out infinite;
    }

    .premium-select-filter-btn.filtered {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    }

    @keyframes pulse {
        0%, 100% {
            opacity: 1;
        }
        50% {
            opacity: 0.7;
        }
    }

    .filter-icon {
        font-size: 1.3rem;
    }

    .filter-text {
        flex: 1;
        text-align: center;
    }

    .filter-arrow {
        transition: transform 0.3s ease;
    }

    .premium-select-filter-btn.filtered .filter-arrow {
        transform: rotate(180deg);
    }

    /* Premium Select厳選買い目（最優先表示） */
    .premium-select-highlight {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 4px 16px rgba(251, 191, 36, 0.15);
        animation: slideDown 0.5s ease;
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .select-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        flex-wrap: wrap;
        gap: 15px;
    }

    .select-badge {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.25) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        color: rgb(251, 191, 36);
        padding: 10px 20px;
        border-radius: 12px;
        font-weight: 400;
        font-size: 1.1rem;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 2px 8px rgba(251, 191, 36, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .select-strategy-type {
        color: #fbbf24;
        font-weight: 600;
        font-size: 1rem;
    }

    .select-bets-list {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 15px;
    }

    .select-bet-item {
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.15) 0%, rgba(30, 41, 59, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 10px;
        padding: 14px 18px;
        display: flex;
        align-items: center;
        gap: 15px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    .total-points-display {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 10px;
        padding: 15px;
        margin-top: 20px;
        text-align: center;
        font-size: 1.2rem;
        color: rgb(251, 191, 36);
        font-weight: 400;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 2px 8px rgba(251, 191, 36, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    /* 3戦略セクション */
    .three-strategies-section {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow:
            inset 0 0 0 0.5px rgba(96, 165, 250, 0.4),
            0 4px 16px rgba(0, 0, 0, 0.1);
    }

    .strategies-title {
        color: #60a5fa;
        font-size: 1.2rem;
        margin-bottom: 20px;
        font-weight: 600;
    }

    .strategy-card {
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.15) 0%, rgba(30, 41, 59, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 15px;
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    .strategy-card:last-child {
        margin-bottom: 0;
    }

    .strategy-header {
        font-size: 1.1rem;
        font-weight: 700;
        margin-bottom: 15px;
        color: #e2e8f0;
    }

    .strategy-bets {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-bottom: 15px;
    }

    .strategy-bet-item {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 8px;
        padding: 10px 14px;
        display: flex;
        align-items: center;
        gap: 12px;
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.3),
            0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .bet-type {
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.15) 0%, rgba(168, 85, 247, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(196, 181, 253);
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 400;
        box-shadow:
            inset 0 0 0 0.5px rgba(139, 92, 246, 0.5),
            0 2px 8px rgba(139, 92, 246, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .bet-text {
        flex: 1;
        color: #e2e8f0;
        font-family: 'Courier New', monospace;
        font-size: 0.95rem;
    }

    .strategy-info {
        color: #94a3b8;
        font-size: 0.9rem;
        text-align: right;
        font-weight: 600;
    }

    /* 買い目セクション（旧） - 削除または統合 */
    .select-bets-section {
        background: rgba(15, 23, 42, 0.6);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
    }

    .section-title {
        color: #fbbf24;
        font-size: 1.1rem;
        margin-bottom: 15px;
        font-weight: 600;
    }

    .bets-list {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .bet-item {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 8px;
        padding: 12px 16px;
        display: flex;
        align-items: center;
        gap: 15px;
        box-shadow:
            inset 0 0 0 0.5px rgba(255, 255, 255, 0.05),
            0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .bet-number {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.15) 0%, rgba(37, 99, 235, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(96, 165, 250);
        width: 28px;
        height: 28px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 400;
        font-size: 0.9rem;
        box-shadow:
            inset 0 0 0 0.5px rgba(96, 165, 250, 0.5),
            0 2px 8px rgba(96, 165, 250, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .bet-display {
        flex: 1;
        color: #e2e8f0;
        font-family: 'Courier New', monospace;
        font-weight: 600;
    }

    .bet-score {
        color: #fbbf24;
        font-size: 0.85rem;
        background: rgba(251, 191, 36, 0.15);
        padding: 4px 10px;
        border-radius: 6px;
    }

    /* AI選出馬分析セクション */
    .analysis-section {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow:
            inset 0 0 0 0.5px rgba(96, 165, 250, 0.4),
            0 4px 16px rgba(0, 0, 0, 0.1);
    }

    /* 馬カード共通 */
    .horse-card {
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.15) 0%, rgba(30, 41, 59, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 15px;
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    /* 本命カード */
    .horse-card-main {
        box-shadow:
            inset 0 0 0 0.5px rgba(239, 68, 68, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    .horse-mark-main {
        font-size: 2rem;
        margin-right: 12px;
    }

    .horse-number-main {
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.15) 0%, rgba(220, 38, 38, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(248, 113, 113);
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: 400;
        font-size: 1.4rem;
        margin-right: 12px;
        box-shadow:
            inset 0 0 0 0.5px rgba(239, 68, 68, 0.5),
            0 2px 8px rgba(239, 68, 68, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .horse-name-main {
        font-size: 1.4rem;
        font-weight: 700;
        color: #e2e8f0;
        margin-right: 12px;
    }

    .horse-type-main {
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.15) 0%, rgba(220, 38, 38, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(248, 113, 113);
        padding: 6px 14px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 400;
        box-shadow:
            inset 0 0 0 0.5px rgba(239, 68, 68, 0.5),
            0 2px 8px rgba(239, 68, 68, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    /* 対抗・単穴カード */
    .horse-card-sub {
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    .horse-mark-sub {
        font-size: 1.5rem;
        margin-right: 10px;
    }

    .horse-number-sub {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(251, 191, 36);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: 400;
        font-size: 1.2rem;
        margin-right: 10px;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 2px 8px rgba(251, 191, 36, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .horse-name-sub {
        font-size: 1.2rem;
        font-weight: 600;
        color: #e2e8f0;
        margin-right: 10px;
    }

    .horse-type-sub {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(251, 191, 36);
        padding: 5px 12px;
        border-radius: 16px;
        font-size: 0.85rem;
        font-weight: 400;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 2px 8px rgba(251, 191, 36, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .horse-type-hole {
        background: linear-gradient(135deg, rgba(16, 185, 129, 0.15) 0%, rgba(5, 150, 105, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(52, 211, 153);
        padding: 5px 12px;
        border-radius: 16px;
        font-size: 0.85rem;
        font-weight: 400;
        box-shadow:
            inset 0 0 0 0.5px rgba(16, 185, 129, 0.5),
            0 2px 8px rgba(16, 185, 129, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .horse-header {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

    /* AI要因 */
    .ai-factors {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 15px;
    }

    .factor {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #cbd5e1;
        font-size: 0.95rem;
    }

    .factor-icon {
        font-size: 1.1rem;
    }

    /* 特徴量重要度 */
    .feature-importance {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 8px;
        padding: 15px;
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.4),
            0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .importance-bar {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 10px;
    }

    .importance-bar:last-child {
        margin-bottom: 0;
    }

    .importance-label {
        color: #94a3b8;
        font-size: 0.85rem;
        min-width: 90px;
    }

    .importance-value {
        flex: 1;
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.3) 0%, rgba(30, 41, 59, 0.2) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 20px;
        height: 24px;
        position: relative;
        overflow: hidden;
        box-shadow:
            inset 0 0 0 0.5px rgba(96, 165, 250, 0.7),
            inset 0 1px 2px rgba(0, 0, 0, 0.05),
            0 1px 4px rgba(0, 0, 0, 0.05);
    }

    .importance-fill {
        background: linear-gradient(135deg, rgba(96, 165, 250, 0.15) 0%, rgba(59, 130, 246, 0.25) 50%, rgba(37, 99, 235, 0.2) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        border-radius: 20px;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding-right: 8px;
        color: rgb(96, 165, 250);
        font-size: 0.75rem;
        font-weight: 400;
        transition: width 0.3s ease;
        box-shadow: 0 2px 8px rgba(96, 165, 250, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3), 0 0 15px currentColor;
    }

    .importance-fill:hover {
        filter: brightness(1.1);
    }

    /* 連下・抑えカード */
    .horse-card-minor {
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.15) 0%, rgba(30, 41, 59, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.4),
            0 2px 12px rgba(0, 0, 0, 0.1);
    }

    .horse-mark-minor {
        font-size: 1.3rem;
        margin-right: 10px;
    }

    .minor-title {
        color: #f59e0b;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .horse-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 10px;
        margin-top: 15px;
    }

    .horse-grid-item {
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 8px;
        padding: 10px;
        display: flex;
        align-items: center;
        gap: 10px;
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.4),
            0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .horse-number-small {
        background: linear-gradient(135deg, rgba(100, 116, 139, 0.15) 0%, rgba(71, 85, 105, 0.25) 100%);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        color: rgb(148, 163, 184);
        width: 28px;
        height: 28px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 400;
        font-size: 0.9rem;
        flex-shrink: 0;
        box-shadow:
            inset 0 0 0 0.5px rgba(100, 116, 139, 0.5),
            0 2px 8px rgba(100, 116, 139, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .horse-name-small {
        color: #cbd5e1;
        font-size: 0.9rem;
        font-weight: 500;
    }

    /* アップグレード案内 */
    .upgrade-notice {
        background: linear-gradient(135deg, rgba(251, 191, 36, 0.15) 0%, rgba(245, 158, 11, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 30px;
        margin-top: 40px;
        text-align: center;
        box-shadow:
            inset 0 0 0 0.5px rgba(251, 191, 36, 0.5),
            0 4px 16px rgba(251, 191, 36, 0.15);
    }

    .upgrade-notice h3 {
        color: rgb(251, 191, 36);
        font-size: 1.8rem;
        font-weight: 400;
        margin-bottom: 15px;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .upgrade-notice p {
        color: #cbd5e1;
        font-size: 1.1rem;
        margin-bottom: 10px;
    }

    /* フローティングレースセレクター（右下固定） */
    .floating-race-selector {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
    }

    .floating-selector-toggle {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 15px 25px;
        background: linear-gradient(135deg, rgba(245, 158, 11, 0.15) 0%, rgba(217, 119, 6, 0.25) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 50px;
        color: rgb(245, 158, 11);
        font-size: 1rem;
        font-weight: 400;
        cursor: pointer;
        box-shadow:
            inset 0 0 0 0.5px rgba(245, 158, 11, 0.5),
            0 4px 16px rgba(245, 158, 11, 0.15);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
        animation: pulse-glow 2s infinite;
    }

    .floating-selector-toggle:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow:
            inset 0 0 0 0.5px rgba(245, 158, 11, 0.7),
            0 8px 25px rgba(245, 158, 11, 0.25);
        filter: brightness(1.1);
    }

    .floating-selector-toggle:active {
        transform: translateY(-1px) scale(1.02);
    }

    .toggle-icon {
        font-size: 1.3rem;
    }

    .toggle-text {
        font-size: 1rem;
    }

    @keyframes pulse-glow {
        0%, 100% {
            box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
        }
        50% {
            box-shadow: 0 8px 35px rgba(245, 158, 11, 0.6);
        }
    }

    .floating-selector-menu {
        position: absolute;
        bottom: 80px;
        right: 0;
        min-width: 280px;
        background: linear-gradient(135deg, rgba(30, 41, 59, 0.15) 0%, rgba(15, 23, 42, 0.25) 100%);
        backdrop-filter: blur(24px);
        -webkit-backdrop-filter: blur(24px);
        border-radius: 16px;
        padding: 20px;
        box-shadow:
            inset 0 0 0 0.5px rgba(59, 130, 246, 0.5),
            0 12px 40px rgba(0, 0, 0, 0.5),
            inset 0 1px 0 rgba(255, 255, 255, 0.15);
        animation: slideUp 0.3s ease;
    }

    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .selector-header {
        color: #60a5fa;
        font-size: 1.1rem;
        font-weight: 700;
        margin-bottom: 15px;
        text-align: center;
        border-bottom: 1px solid rgba(59, 130, 246, 0.3);
        padding-bottom: 10px;
    }

    .selector-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
    }

    .selector-race-btn {
        padding: 12px;
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.15) 0%, rgba(37, 99, 235, 0.2) 100%);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 10px;
        color: #cbd5e1;
        font-size: 0.95rem;
        font-weight: 400;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow:
            inset 0 0 0 0.5px rgba(59, 130, 246, 0.4),
            0 2px 8px rgba(59, 130, 246, 0.2),
            inset 0 1px 0 rgba(255, 255, 255, 0.1);
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .selector-race-btn:hover {
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.25) 0%, rgba(37, 99, 235, 0.3) 100%);
        color: rgb(96, 165, 250);
        transform: translateY(-2px);
        box-shadow:
            inset 0 0 0 0.5px rgba(59, 130, 246, 0.7),
            0 6px 16px rgba(59, 130, 246, 0.4),
            inset 0 1px 0 rgba(255, 255, 255, 0.2);
        filter: brightness(1.1);
    }

    .selector-race-btn:active {
        transform: translateY(0);
    }

    /* レスポンシブ対応 */
    @media (max-width: 768px) {
        .race-title {
            font-size: 1.5rem;
        }

        .ai-metrics {
            grid-template-columns: 1fr 1fr;
        }

        .feature-grid {
            grid-template-columns: 1fr;
        }

        /* フローティングボタン モバイル対応 */
        .floating-race-selector {
            bottom: 20px;
            right: 20px;
        }

        .floating-selector-toggle {
            padding: 12px 20px;
            font-size: 0.9rem;
        }

        .toggle-icon {
            font-size: 1.2rem;
        }

        .toggle-text {
            font-size: 0.9rem;
        }

        .floating-selector-menu {
            min-width: 260px;
            padding: 15px;
        }

        .selector-header {
            font-size: 1rem;
        }

        .selector-grid {
            grid-template-columns: repeat(3, 1fr);
            gap: 8px;
        }

        .selector-race-btn {
            padding: 10px;
            font-size: 0.85rem;
        }
    }
</style>

<script is:inline>
    // Premium Select絞り込みボタンの動作
    document.addEventListener('DOMContentLoaded', () => {
        const filterButtons = document.querySelectorAll('.premium-select-filter-btn');

        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                const raceIndex = this.getAttribute('data-race-index');
                const content = document.querySelector(`[data-race-content="${raceIndex}"]`);
                const filterText = this.querySelector('.filter-text');
                const isVisible = content.style.display !== 'none';

                if (isVisible) {
                    // 閉じる
                    content.style.display = 'none';
                    this.classList.remove('filtered');
                    filterText.textContent = 'Premium Select 絞り込む';
                } else {
                    // 絞り込み演出
                    this.classList.add('filtering');
                    this.classList.remove('filtered');
                    filterText.textContent = '絞り込み中...';

                    // 1.8秒後に結果表示（フィルタリング演出）
                    setTimeout(() => {
                        content.style.display = 'block';
                        this.classList.remove('filtering');
                        this.classList.add('filtered');
                        filterText.textContent = '✅ 絞り込み完了（クリックで閉じる）';
                    }, 1800);
                }
            });
        });

        // フローティングレースセレクター - トグル機能
        const selectorToggle = document.getElementById('raceSelectorToggle');
        const selectorMenu = document.getElementById('raceSelectorMenu');

        if (selectorToggle && selectorMenu) {
            selectorToggle.addEventListener('click', (e) => {
                e.stopPropagation();
                const isVisible = selectorMenu.style.display !== 'none';
                selectorMenu.style.display = isVisible ? 'none' : 'block';
            });

            // メニュー外クリックで閉じる
            document.addEventListener('click', (e) => {
                if (!e.target.closest('.floating-race-selector')) {
                    selectorMenu.style.display = 'none';
                }
            });
        }
    });
</script>
