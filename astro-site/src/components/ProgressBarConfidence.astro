---
// シンプルなプログレスバー信頼値コンポーネント（アニメーション削除版）

export interface Props {
    strategyType: 'A' | 'B' | 'C';
    progressConfidence: number;
    baseScore: number;
    reduction: number;
    strategyTitle: string;
}

const { strategyType, progressConfidence, baseScore, reduction, strategyTitle } = Astro.props;

// 戦略別カラー設定（既存パターン準拠）
const getStrategyColor = (type: string) => {
    const colors = {
        'A': 'rgba(16, 185, 129, 0.1)', // 緑系（少点数的中型）- ポイントバッジと同じ
        'B': 'rgba(59, 130, 246, 0.1)', // 青系（バランス型）
        'C': 'rgba(245, 158, 11, 0.1)'  // オレンジ系（高配当追求型）
    };
    return colors[type] || 'rgba(107, 114, 128, 0.1)';
};

const strategyColor = getStrategyColor(strategyType);
const barWidth = Math.max(progressConfidence, 5); // 最小5%表示
---

<div class="progress-confidence-container">
    <div class="progress-bar-wrapper">
        <div
            class="progress-bar"
            style={`width: ${barWidth}%; background: ${strategyColor};`}
        >
            <span class="progress-text">信頼値 {progressConfidence}%</span>
        </div>
    </div>
</div>

<style>
.progress-confidence-container {
    margin: 10px 0;
}

.progress-bar-wrapper {
    position: relative;
    height: 20px;
    background: rgba(100, 116, 139, 0.1);
    border: 1px solid rgba(100, 116, 139, 0.3);
    border-radius: 8px;
    overflow: hidden;
}

.progress-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    border-radius: 7px;
    position: relative;
    transition: all 0.3s ease;
}

.progress-bar:hover {
    transform: translateY(-1px);
}

.progress-text {
    font-size: 11px;
    font-weight: 700;
    color: rgba(255, 255, 255, 0.95);
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    letter-spacing: 0.5px;
}


/* レスポンシブ対応 */
@media (max-width: 768px) {
    .progress-bar-wrapper {
        height: 14px;
    }

    .progress-text {
        font-size: 10px;
    }
}
</style>