---
// シンプルなプログレスバー信頼値コンポーネント（アニメーション削除版）

export interface Props {
    strategyType: 'A' | 'B' | 'C';
    progressConfidence: number;
    baseScore: number;
    reduction: number;
    strategyTitle: string;
}

const { strategyType, progressConfidence, baseScore, reduction, strategyTitle } = Astro.props;

// 戦略別透明感グラデーションカラー設定（ログアウトボタン・ポイントバッジと統一）
const getStrategyColor = (type: string) => {
    const colors = {
        'A': 'linear-gradient(135deg, rgba(250, 204, 21, 0.15) 0%, rgba(245, 158, 11, 0.25) 50%, rgba(217, 119, 6, 0.2) 100%)', // 黄色系透明グラデーション（少点数的中型）
        'B': 'linear-gradient(135deg, rgba(251, 146, 60, 0.15) 0%, rgba(249, 115, 22, 0.25) 50%, rgba(234, 88, 12, 0.2) 100%)', // オレンジ系透明グラデーション（バランス型）
        'C': 'linear-gradient(135deg, rgba(239, 68, 68, 0.15) 0%, rgba(220, 38, 38, 0.25) 50%, rgba(185, 28, 28, 0.2) 100%)'  // 赤系透明グラデーション（高配当追求型）
    };
    return colors[type] || 'linear-gradient(135deg, rgba(107, 114, 128, 0.15) 0%, rgba(75, 85, 99, 0.2) 100%)';
};

// ラッパー用100%縁取り設定
const getWrapperBorder = (type: string) => {
    const borders = {
        'A': 'inset 0 0 0 0.5px rgba(250, 204, 21, 0.7)', // 黄色系細縁取り
        'B': 'inset 0 0 0 0.5px rgba(251, 146, 60, 0.7)', // オレンジ系細縁取り
        'C': 'inset 0 0 0 0.5px rgba(239, 68, 68, 0.7)'  // 赤系細縁取り
    };
    return borders[type] || 'inset 0 0 0 0.5px rgba(107, 114, 128, 0.3)';
};

// 戦略別シャドウカラー設定（グローのみ）
const getStrategyShadow = (type: string) => {
    const shadows = {
        'A': '0 2px 8px rgba(250, 204, 21, 0.15)', // 黄色系グロー
        'B': '0 2px 8px rgba(251, 146, 60, 0.15)', // オレンジ系グロー
        'C': '0 2px 8px rgba(239, 68, 68, 0.15)'  // 赤系グロー
    };
    return shadows[type] || '0 2px 8px rgba(107, 114, 128, 0.08)';
};

// 戦略別テキストカラー設定（明るめの色で視認性確保）
const getStrategyTextColor = (type: string) => {
    const textColors = {
        'A': 'rgb(250, 204, 21)', // 黄色
        'B': 'rgb(251, 146, 60)', // オレンジ
        'C': 'rgb(239, 68, 68)'   // 赤
    };
    return textColors[type] || 'rgba(255, 255, 255, 0.95)';
};


const strategyColor = getStrategyColor(strategyType);
const strategyShadow = getStrategyShadow(strategyType);
const strategyTextColor = getStrategyTextColor(strategyType);
const wrapperBorder = getWrapperBorder(strategyType);
const barWidth = Math.max(progressConfidence, 5); // 実際の値まで（最小5%表示）
---

<div class="progress-confidence-container">
    <div class="progress-bar-wrapper" style={`box-shadow: ${wrapperBorder};`}>
        <div
            class="progress-bar"
            style={`width: ${barWidth}%; background: ${strategyColor}; box-shadow: ${strategyShadow};`}
        >
            <span class="progress-text" style={`color: ${strategyTextColor};`}>AIモデル予測: 的中率{progressConfidence}%</span>
        </div>
    </div>
</div>

<style>
.progress-confidence-container {
    margin: 4px 0 6px 0;
    padding: 0;
}

.progress-bar-wrapper {
    position: relative;
    height: 16px;
    background: linear-gradient(135deg, rgba(15, 23, 42, 0.3) 0%, rgba(30, 41, 59, 0.2) 100%);
    border-radius: 8px;
    overflow: hidden;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    box-shadow:
        inset 0 1px 2px rgba(0, 0, 0, 0.05),
        0 1px 4px rgba(0, 0, 0, 0.05);
}

.progress-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    border-radius: 7px;
    position: relative;
    transition: width 0.3s ease;
    transform-origin: left center;
}

.progress-bar:hover {
    filter: brightness(1.1);
}

.progress-text {
    font-size: 10px;
    font-weight: 400;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3), 0 0 15px currentColor;
    letter-spacing: 0.2px;
    z-index: 1;
    position: relative;
}


/* レスポンシブ対応 */
@media (max-width: 768px) {
    .progress-bar-wrapper {
        height: 14px;
        border-radius: 7px;
    }

    .progress-bar {
        border-radius: 6px;
    }

    .progress-text {
        font-size: 9px;
    }
}

/* ダークモード対応 */
@media (prefers-color-scheme: dark) {
    .progress-bar-wrapper {
        background: linear-gradient(135deg, rgba(15, 23, 42, 0.4) 0%, rgba(30, 41, 59, 0.3) 100%);
        border-color: rgba(148, 163, 184, 0.2);
    }
}
</style>